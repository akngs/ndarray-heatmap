{"version":3,"sources":["ndarray-heatmap.min.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","heatmap","render","_","canvas","document","createElement","width","data","shape","height","ctx","getContext","imgData","getImageData","imgArray","_extent","_d3Array","extent","_extent2","_slicedToArray","min","max","colorScale","_d3Interpolate","interpolateLab","apply","undefined","colorRange","colors","colorSteps","push","_d3Color","rgb","renderToCanvas","putImageData","_ndarray2","Float64Array","arguments","Error","sliceIterator","_arr","_n","_d","_e","_s","_i","Symbol","iterator","next","done","value","err","Object","TypeError","defineProperty","_ndarray","_cwise","_cwise2","args","body","imgWidth","colorIndex","Math","round","_colors$colorIndex","r","g","b","a","base","compare1st","order","stride","terms","abs","sort","result","compileConstructor","dtype","dimension","className","join","useGetters","code","procedure","Function","CACHED_CONSTRUCTORS","indices","iota","map","index_str","shapeArg","strideArg","a_vars","c_vars","tShape","tStride","n","idx","arrayDType","isBuffer","hasTypedArrays","prototype","toString","wrappedNDArrayCtor","offset","ctor","array","d","sz","ctor_list","float32","float64","int8","int16","int32","uint8","uint16","uint32","uint8_clamped","buffer","generic","_isBuffer","constructor","createCWise","user_args","REQUIRED_FIELDS","indexOf","OPTIONAL_FIELDS","console","warn","compile","pre","parse","post","debug","printCode","funcName","name","blockSize","CompiledArgument","lvalue","rvalue","count","CompiledRoutine","thisVars","localVars","isGlobal","identifier","window","GLOBAL","self","getArgNames","ast","params","expression","callee","names","preprocess","func","createLocal","nstr","prefix","replace","createThisVar","rewrite","node","lo","range","hi","exploded","escapeString","str","source","slice","getUsage","parent","type","left","operator","LVALUE","RVALUE","src","esprima","PREFIX_COUNTER","argNames","compiledArgs","charAt","visit","computed","object","property","argNo","carg","usage","keys","j","uniq","routine","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","assert","condition","message","isDecimalDigit","ch","isHexDigit","isOctalDigit","isWhiteSpace","isLineTerminator","isIdentifierStart","Regex","NonAsciiIdentifierStart","test","String","fromCharCode","isIdentifierPart","NonAsciiIdentifierPart","isFutureReservedWord","isStrictModeReservedWord","isRestrictedWord","isKeyword","strict","addComment","start","end","loc","comment","state","lastCommentStart","extra","comments","attachComment","leadingComments","trailingComments","skipSingleLineComment","index","line","lineNumber","column","lineStart","charCodeAt","skipMultiLineComment","throwError","Messages","UnexpectedToken","skipComment","scanHexEscape","len","toLowerCase","getEscapedIdentifier","substr","getIdentifier","scanIdentifier","Token","Identifier","Keyword","NullLiteral","BooleanLiteral","scanPunctuator","code2","ch2","ch3","ch4","ch1","tokenize","openParenToken","tokens","openCurlyToken","Punctuator","scanHexLiteral","number","NumericLiteral","parseInt","scanOctalLiteral","octal","isImplicitOctalLiteral","scanNumericLiteral","parseFloat","scanStringLiteral","quote","unescaped","restore","startLineNumber","startLineStart","StringLiteral","testRegExp","pattern","flags","RegExp","e","InvalidRegExp","scanRegExpBody","classMarker","terminated","UnterminatedRegExp","literal","scanRegExpFlags","throwErrorTolerant","scanRegExp","lookahead","RegularExpression","collectRegex","pos","regex","token","pop","isIdentifierName","advanceSlash","prevToken","checkToken","FnExprTokens","advance","EOF","collectToken","TokenName","lex","peek","Position","SourceLocation","startLine","startColumn","peekLineTerminator","found","messageFormat","error","msg","whole","description","errors","throwUnexpected","UnexpectedEOS","UnexpectedNumber","UnexpectedString","UnexpectedIdentifier","UnexpectedReserved","StrictReservedWord","expect","expectKeyword","keyword","match","matchKeyword","matchAssign","op","consumeSemicolon","oldIndex","oldLineNumber","oldLineStart","oldLookahead","isLeftHandSide","expr","Syntax","MemberExpression","parseArrayInitialiser","startToken","elements","parseAssignmentExpression","delegate","markEnd","createArrayExpression","parsePropertyFunction","param","first","previousStrict","parseFunctionSourceElements","StrictParamName","createFunctionExpression","parseObjectPropertyKey","StrictOctalLiteral","createLiteral","createIdentifier","parseObjectProperty","key","createProperty","parseVariableIdentifier","parseObjectInitialiser","kind","properties","PropertyKind","Data","Get","Set","hasOwnProperty","StrictDuplicateProperty","AccessorDataProperty","AccessorGetSet","createObjectExpression","parseGroupExpression","parseExpression","parsePrimaryExpression","parseFunctionExpression","createThisExpression","parseArguments","parseNonComputedProperty","parseNonComputedMember","parseComputedMember","parseNewExpression","parseLeftHandSideExpression","createNewExpression","parseLeftHandSideExpressionAllowCall","previousAllowIn","allowIn","createMemberExpression","createCallExpression","parsePostfixExpression","StrictLHSPostfix","InvalidLHSInAssignment","createPostfixExpression","parseUnaryExpression","StrictLHSPrefix","createUnaryExpression","argument","StrictDelete","binaryPrecedence","prec","parseBinaryExpression","marker","markers","stack","right","createBinaryExpression","parseConditionalExpression","consequent","alternate","createConditionalExpression","StrictLHSAssignment","createAssignmentExpression","createSequenceExpression","expressions","parseStatementList","statement","list","parseSourceElement","parseBlock","block","createBlockStatement","parseVariableDeclaration","init","StrictVarName","createVariableDeclarator","parseVariableDeclarationList","parseVariableStatement","declarations","createVariableDeclaration","parseConstLetDeclaration","parseEmptyStatement","createEmptyStatement","parseExpressionStatement","createExpressionStatement","parseIfStatement","parseStatement","createIfStatement","parseDoWhileStatement","oldInIteration","inIteration","createDoWhileStatement","parseWhileStatement","createWhileStatement","parseForVariableDeclaration","parseForStatement","update","InvalidLHSInForIn","createForStatement","createForInStatement","parseContinueStatement","label","IllegalContinue","createContinueStatement","labelSet","UnknownLabel","parseBreakStatement","inSwitch","IllegalBreak","createBreakStatement","parseReturnStatement","inFunctionBody","IllegalReturn","createReturnStatement","parseWithStatement","StrictModeWith","createWithStatement","parseSwitchCase","createSwitchCase","parseSwitchStatement","discriminant","cases","clause","oldInSwitch","defaultFound","createSwitchStatement","MultipleDefaultsInSwitch","parseThrowStatement","NewlineAfterThrow","createThrowStatement","parseCatchClause","StrictCatchVariable","createCatchClause","parseTryStatement","handlers","finalizer","NoCatchOrFinally","createTryStatement","parseDebuggerStatement","createDebuggerStatement","labeledBody","parseFunctionDeclaration","Redeclaration","createLabeledStatement","sourceElement","directive","firstRestricted","oldLabelSet","oldInFunctionBody","sourceElements","Literal","parseParams","stricted","paramSet","StrictParamDupe","tmp","StrictFunctionName","createFunctionDeclaration","parseSourceElements","parseProgram","createProgram","filterTokenLocation","entry","options","SyntaxTreeDelegate","tolerant","lexError","program","bottomRightStack","AssignmentExpression","ArrayExpression","BlockStatement","BinaryExpression","BreakStatement","CallExpression","CatchClause","ConditionalExpression","ContinueStatement","DoWhileStatement","DebuggerStatement","EmptyStatement","ExpressionStatement","ForStatement","ForInStatement","FunctionDeclaration","FunctionExpression","IfStatement","LabeledStatement","LogicalExpression","NewExpression","ObjectExpression","Program","Property","ReturnStatement","SequenceExpression","SwitchStatement","SwitchCase","ThisExpression","ThrowStatement","TryStatement","UnaryExpression","UpdateExpression","VariableDeclaration","VariableDeclarator","WhileStatement","WithStatement","processComment","lastChild","postProcess","each","defaults","rest","generator","raw","accessor","guardedHandlers","version","types","create","freeze","unique_pred","compare","ptr","unique_eq","unique","sorted","Procedure","argTypes","shimArgs","arrayArgs","arrayBlockIndices","scalarArgs","offsetArgs","offsetArgIndex","indexArgs","shapeArgs","compileCwise","proc","proc_args","arg_type","blockIndices","createThunk","vars","thunkName","typesig","string_typesig","shapeLengthConditions","shapeConditions","log","thunk","bind","innerFill","nargs","has_index","pidx","outerFill","matched","indexStr","countMatches","orders","processBlock","dtypes","re","ptrStr","arrNum","offArgIndex","offArg","localStr","arrStr","reStrArr","ptrStrArr","trim","typeSummary","summary","allEqual","t","digits","generateCWiseOp","blockBegin","blockEnd","loopBegin","loopEnd","loopOrders","newOrder","arglist","zeros","off_arg","init_string","concat","loopName","f","global","ascending","NaN","bisector","ascendingComparator","x","mid","descending","number$1","variance","s","isNaN","deviation","v","sqrt","constant","identity","stop","step","ceil","ticks","tickStep","floor","step0","step1","pow","LN10","e10","e5","e2","sturges","values","LN2","histogram","xz","domain","x0","x1","tz","threshold","shift","bin","bins","bisectRight","thresholds","quantile","h","freedmanDiaconis","scott","mean","median","numbers","merge","arrays","merged","pairs","p0","p1","permute","indexes","permutes","scan","xi","xj","shuffle","i0","i1","random","sum","transpose","matrix","row","zip","ascendingBisect","bisectLeft","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","d3Color","ar","ag","ab","br","bg","bb","na","nb","n0","k","zero","one","string","am","bm","bs","bi","reA","lastIndex","reB","q","exec","o","Transform","createElementNS","setAttribute","transform","baseVal","consolidate","r0","r1","kx","normalize","kz","dot","ky","combine","rotate","atan2","rad2deg","translate","scale","skew","ta","tb","ra","rb","wa","wb","ka","kb","cosh","exp","sinh","tanh","zoom","S","ux0","uy0","w0","ux1","uy1","w1","dx","dy","d2","epsilon2","rho","d1","b0","rho4","rho2","b1","coshr0","u","duration","deltaHue","h1","h0","delta","hsl","ah","as","al","l","bh","bl","hslLong","lab","aa","ba","hcl","ac","bc","hclLong","cubehelix","gamma","cubehelixLong","bindN","unshift","color","PI","SQRT2","interpolate","interpolators","interpolateArray","interpolateNumber","interpolateObject","interpolateRound","interpolateString","interpolateTransform","interpolateZoom","interpolateRgb","interpolateHsl","interpolateHslLong","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","interpolateBind","Color","format","reHex3","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reHslPercent","Hsl","named","hsl2rgb","m1","m2","Lab","Hcl","deg2rad","sin","cos","rgb2xyz","xyz2lab","Xn","y","Yn","z","Zn","t3","t2","t0","lab2xyz","t1","xyz2rgb","Cubehelix","BC_DA","ED","EB","E","C","D","darker","brighter","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","_rgb","_hsl","Kn","_lab","_hcl","A","B","_cubehelix"],"mappings":"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","file":"ndarray-heatmap.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"heatmap\"] = factory();\n\telse\n\t\troot[\"heatmap\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = heatmap;\n\t\n\tvar _ndarray = __webpack_require__(1);\n\t\n\tvar _ndarray2 = _interopRequireDefault(_ndarray);\n\t\n\tvar _cwise = __webpack_require__(4);\n\t\n\tvar _cwise2 = _interopRequireDefault(_cwise);\n\t\n\tvar _d3Array = __webpack_require__(11);\n\t\n\tvar _d3Interpolate = __webpack_require__(12);\n\t\n\tvar _d3Color = __webpack_require__(13);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tvar renderToCanvas = (0, _cwise2.default)({\n\t  args: ['index', 'array', 'scalar', 'scalar', 'scalar', 'scalar', 'scalar'],\n\t  body: function body(i, value, imgArray, colors, min, max, imgWidth) {\n\t    var colorIndex = Math.round((value - min) / (max - min) * (colors.length - 1));\n\t    var _colors$colorIndex = colors[colorIndex];\n\t    var r = _colors$colorIndex.r;\n\t    var g = _colors$colorIndex.g;\n\t    var b = _colors$colorIndex.b;\n\t    var a = _colors$colorIndex.a;\n\t\n\t    var base = (i[1] * imgWidth + i[0]) * 4;\n\t    imgArray[base] = r;\n\t    imgArray[++base] = g;\n\t    imgArray[++base] = b;\n\t    imgArray[++base] = a || 255;\n\t  }\n\t});\n\t\n\tfunction heatmap() {\n\t  var data = (0, _ndarray2.default)(new Float64Array([0]), [1, 1]);\n\t  var colorSteps = 256;\n\t  var colorRange = ['#000000', '#FFFFFF'];\n\t\n\t  function render(_) {\n\t    var canvas = _ || document.createElement('canvas');\n\t    canvas.width = data.shape[1];\n\t    canvas.height = data.shape[0];\n\t\n\t    var ctx = canvas.getContext('2d');\n\t    var imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\t    var imgArray = imgData.data;\n\t\n\t    var _extent = (0, _d3Array.extent)(data.data);\n\t\n\t    var _extent2 = _slicedToArray(_extent, 2);\n\t\n\t    var min = _extent2[0];\n\t    var max = _extent2[1];\n\t\n\t    var colorScale = _d3Interpolate.interpolateLab.apply(undefined, _toConsumableArray(colorRange));\n\t    var colors = [];\n\t    for (var i = 0; i < colorSteps; ++i) {\n\t      colors.push((0, _d3Color.rgb)(colorScale(i / (colorSteps - 1))));\n\t    }\n\t    renderToCanvas(data, imgArray, colors, min, max, canvas.width);\n\t    ctx.putImageData(imgData, 0, 0);\n\t\n\t    return canvas;\n\t  }\n\t\n\t  render.data = function (_) {\n\t    if (!arguments.length) return data;\n\t\n\t    if (_.shape.length !== 2) throw new Error('Invalid rank: ' + _.shape.length);\n\t    data = _;\n\t    return render;\n\t  };\n\t\n\t  render.colorSteps = function (_) {\n\t    return arguments.length ? (colorSteps = _, render) : colorSteps;\n\t  };\n\t\n\t  render.colorRange = function (_) {\n\t    return arguments.length ? (colorRange = _, render) : colorRange;\n\t  };\n\t\n\t  return render;\n\t}\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar iota = __webpack_require__(2)\n\tvar isBuffer = __webpack_require__(3)\n\t\n\tvar hasTypedArrays  = ((typeof Float64Array) !== \"undefined\")\n\t\n\tfunction compare1st(a, b) {\n\t  return a[0] - b[0]\n\t}\n\t\n\tfunction order() {\n\t  var stride = this.stride\n\t  var terms = new Array(stride.length)\n\t  var i\n\t  for(i=0; i<terms.length; ++i) {\n\t    terms[i] = [Math.abs(stride[i]), i]\n\t  }\n\t  terms.sort(compare1st)\n\t  var result = new Array(terms.length)\n\t  for(i=0; i<result.length; ++i) {\n\t    result[i] = terms[i][1]\n\t  }\n\t  return result\n\t}\n\t\n\tfunction compileConstructor(dtype, dimension) {\n\t  var className = [\"View\", dimension, \"d\", dtype].join(\"\")\n\t  if(dimension < 0) {\n\t    className = \"View_Nil\" + dtype\n\t  }\n\t  var useGetters = (dtype === \"generic\")\n\t\n\t  if(dimension === -1) {\n\t    //Special case for trivial arrays\n\t    var code =\n\t      \"function \"+className+\"(a){this.data=a;};\\\n\tvar proto=\"+className+\".prototype;\\\n\tproto.dtype='\"+dtype+\"';\\\n\tproto.index=function(){return -1};\\\n\tproto.size=0;\\\n\tproto.dimension=-1;\\\n\tproto.shape=proto.stride=proto.order=[];\\\n\tproto.lo=proto.hi=proto.transpose=proto.step=\\\n\tfunction(){return new \"+className+\"(this.data);};\\\n\tproto.get=proto.set=function(){};\\\n\tproto.pick=function(){return null};\\\n\treturn function construct_\"+className+\"(a){return new \"+className+\"(a);}\"\n\t    var procedure = new Function(code)\n\t    return procedure()\n\t  } else if(dimension === 0) {\n\t    //Special case for 0d arrays\n\t    var code =\n\t      \"function \"+className+\"(a,d) {\\\n\tthis.data = a;\\\n\tthis.offset = d\\\n\t};\\\n\tvar proto=\"+className+\".prototype;\\\n\tproto.dtype='\"+dtype+\"';\\\n\tproto.index=function(){return this.offset};\\\n\tproto.dimension=0;\\\n\tproto.size=1;\\\n\tproto.shape=\\\n\tproto.stride=\\\n\tproto.order=[];\\\n\tproto.lo=\\\n\tproto.hi=\\\n\tproto.transpose=\\\n\tproto.step=function \"+className+\"_copy() {\\\n\treturn new \"+className+\"(this.data,this.offset)\\\n\t};\\\n\tproto.pick=function \"+className+\"_pick(){\\\n\treturn TrivialArray(this.data);\\\n\t};\\\n\tproto.valueOf=proto.get=function \"+className+\"_get(){\\\n\treturn \"+(useGetters ? \"this.data.get(this.offset)\" : \"this.data[this.offset]\")+\n\t\"};\\\n\tproto.set=function \"+className+\"_set(v){\\\n\treturn \"+(useGetters ? \"this.data.set(this.offset,v)\" : \"this.data[this.offset]=v\")+\"\\\n\t};\\\n\treturn function construct_\"+className+\"(a,b,c,d){return new \"+className+\"(a,d)}\"\n\t    var procedure = new Function(\"TrivialArray\", code)\n\t    return procedure(CACHED_CONSTRUCTORS[dtype][0])\n\t  }\n\t\n\t  var code = [\"'use strict'\"]\n\t\n\t  //Create constructor for view\n\t  var indices = iota(dimension)\n\t  var args = indices.map(function(i) { return \"i\"+i })\n\t  var index_str = \"this.offset+\" + indices.map(function(i) {\n\t        return \"this.stride[\" + i + \"]*i\" + i\n\t      }).join(\"+\")\n\t  var shapeArg = indices.map(function(i) {\n\t      return \"b\"+i\n\t    }).join(\",\")\n\t  var strideArg = indices.map(function(i) {\n\t      return \"c\"+i\n\t    }).join(\",\")\n\t  code.push(\n\t    \"function \"+className+\"(a,\" + shapeArg + \",\" + strideArg + \",d){this.data=a\",\n\t      \"this.shape=[\" + shapeArg + \"]\",\n\t      \"this.stride=[\" + strideArg + \"]\",\n\t      \"this.offset=d|0}\",\n\t    \"var proto=\"+className+\".prototype\",\n\t    \"proto.dtype='\"+dtype+\"'\",\n\t    \"proto.dimension=\"+dimension)\n\t\n\t  //view.size:\n\t  code.push(\"Object.defineProperty(proto,'size',{get:function \"+className+\"_size(){\\\n\treturn \"+indices.map(function(i) { return \"this.shape[\"+i+\"]\" }).join(\"*\"),\n\t\"}})\")\n\t\n\t  //view.order:\n\t  if(dimension === 1) {\n\t    code.push(\"proto.order=[0]\")\n\t  } else {\n\t    code.push(\"Object.defineProperty(proto,'order',{get:\")\n\t    if(dimension < 4) {\n\t      code.push(\"function \"+className+\"_order(){\")\n\t      if(dimension === 2) {\n\t        code.push(\"return (Math.abs(this.stride[0])>Math.abs(this.stride[1]))?[1,0]:[0,1]}})\")\n\t      } else if(dimension === 3) {\n\t        code.push(\n\t\"var s0=Math.abs(this.stride[0]),s1=Math.abs(this.stride[1]),s2=Math.abs(this.stride[2]);\\\n\tif(s0>s1){\\\n\tif(s1>s2){\\\n\treturn [2,1,0];\\\n\t}else if(s0>s2){\\\n\treturn [1,2,0];\\\n\t}else{\\\n\treturn [1,0,2];\\\n\t}\\\n\t}else if(s0>s2){\\\n\treturn [2,0,1];\\\n\t}else if(s2>s1){\\\n\treturn [0,1,2];\\\n\t}else{\\\n\treturn [0,2,1];\\\n\t}}})\")\n\t      }\n\t    } else {\n\t      code.push(\"ORDER})\")\n\t    }\n\t  }\n\t\n\t  //view.set(i0, ..., v):\n\t  code.push(\n\t\"proto.set=function \"+className+\"_set(\"+args.join(\",\")+\",v){\")\n\t  if(useGetters) {\n\t    code.push(\"return this.data.set(\"+index_str+\",v)}\")\n\t  } else {\n\t    code.push(\"return this.data[\"+index_str+\"]=v}\")\n\t  }\n\t\n\t  //view.get(i0, ...):\n\t  code.push(\"proto.get=function \"+className+\"_get(\"+args.join(\",\")+\"){\")\n\t  if(useGetters) {\n\t    code.push(\"return this.data.get(\"+index_str+\")}\")\n\t  } else {\n\t    code.push(\"return this.data[\"+index_str+\"]}\")\n\t  }\n\t\n\t  //view.index:\n\t  code.push(\n\t    \"proto.index=function \"+className+\"_index(\", args.join(), \"){return \"+index_str+\"}\")\n\t\n\t  //view.hi():\n\t  code.push(\"proto.hi=function \"+className+\"_hi(\"+args.join(\",\")+\"){return new \"+className+\"(this.data,\"+\n\t    indices.map(function(i) {\n\t      return [\"(typeof i\",i,\"!=='number'||i\",i,\"<0)?this.shape[\", i, \"]:i\", i,\"|0\"].join(\"\")\n\t    }).join(\",\")+\",\"+\n\t    indices.map(function(i) {\n\t      return \"this.stride[\"+i + \"]\"\n\t    }).join(\",\")+\",this.offset)}\")\n\t\n\t  //view.lo():\n\t  var a_vars = indices.map(function(i) { return \"a\"+i+\"=this.shape[\"+i+\"]\" })\n\t  var c_vars = indices.map(function(i) { return \"c\"+i+\"=this.stride[\"+i+\"]\" })\n\t  code.push(\"proto.lo=function \"+className+\"_lo(\"+args.join(\",\")+\"){var b=this.offset,d=0,\"+a_vars.join(\",\")+\",\"+c_vars.join(\",\"))\n\t  for(var i=0; i<dimension; ++i) {\n\t    code.push(\n\t\"if(typeof i\"+i+\"==='number'&&i\"+i+\">=0){\\\n\td=i\"+i+\"|0;\\\n\tb+=c\"+i+\"*d;\\\n\ta\"+i+\"-=d}\")\n\t  }\n\t  code.push(\"return new \"+className+\"(this.data,\"+\n\t    indices.map(function(i) {\n\t      return \"a\"+i\n\t    }).join(\",\")+\",\"+\n\t    indices.map(function(i) {\n\t      return \"c\"+i\n\t    }).join(\",\")+\",b)}\")\n\t\n\t  //view.step():\n\t  code.push(\"proto.step=function \"+className+\"_step(\"+args.join(\",\")+\"){var \"+\n\t    indices.map(function(i) {\n\t      return \"a\"+i+\"=this.shape[\"+i+\"]\"\n\t    }).join(\",\")+\",\"+\n\t    indices.map(function(i) {\n\t      return \"b\"+i+\"=this.stride[\"+i+\"]\"\n\t    }).join(\",\")+\",c=this.offset,d=0,ceil=Math.ceil\")\n\t  for(var i=0; i<dimension; ++i) {\n\t    code.push(\n\t\"if(typeof i\"+i+\"==='number'){\\\n\td=i\"+i+\"|0;\\\n\tif(d<0){\\\n\tc+=b\"+i+\"*(a\"+i+\"-1);\\\n\ta\"+i+\"=ceil(-a\"+i+\"/d)\\\n\t}else{\\\n\ta\"+i+\"=ceil(a\"+i+\"/d)\\\n\t}\\\n\tb\"+i+\"*=d\\\n\t}\")\n\t  }\n\t  code.push(\"return new \"+className+\"(this.data,\"+\n\t    indices.map(function(i) {\n\t      return \"a\" + i\n\t    }).join(\",\")+\",\"+\n\t    indices.map(function(i) {\n\t      return \"b\" + i\n\t    }).join(\",\")+\",c)}\")\n\t\n\t  //view.transpose():\n\t  var tShape = new Array(dimension)\n\t  var tStride = new Array(dimension)\n\t  for(var i=0; i<dimension; ++i) {\n\t    tShape[i] = \"a[i\"+i+\"]\"\n\t    tStride[i] = \"b[i\"+i+\"]\"\n\t  }\n\t  code.push(\"proto.transpose=function \"+className+\"_transpose(\"+args+\"){\"+\n\t    args.map(function(n,idx) { return n + \"=(\" + n + \"===undefined?\" + idx + \":\" + n + \"|0)\"}).join(\";\"),\n\t    \"var a=this.shape,b=this.stride;return new \"+className+\"(this.data,\"+tShape.join(\",\")+\",\"+tStride.join(\",\")+\",this.offset)}\")\n\t\n\t  //view.pick():\n\t  code.push(\"proto.pick=function \"+className+\"_pick(\"+args+\"){var a=[],b=[],c=this.offset\")\n\t  for(var i=0; i<dimension; ++i) {\n\t    code.push(\"if(typeof i\"+i+\"==='number'&&i\"+i+\">=0){c=(c+this.stride[\"+i+\"]*i\"+i+\")|0}else{a.push(this.shape[\"+i+\"]);b.push(this.stride[\"+i+\"])}\")\n\t  }\n\t  code.push(\"var ctor=CTOR_LIST[a.length+1];return ctor(this.data,a,b,c)}\")\n\t\n\t  //Add return statement\n\t  code.push(\"return function construct_\"+className+\"(data,shape,stride,offset){return new \"+className+\"(data,\"+\n\t    indices.map(function(i) {\n\t      return \"shape[\"+i+\"]\"\n\t    }).join(\",\")+\",\"+\n\t    indices.map(function(i) {\n\t      return \"stride[\"+i+\"]\"\n\t    }).join(\",\")+\",offset)}\")\n\t\n\t  //Compile procedure\n\t  var procedure = new Function(\"CTOR_LIST\", \"ORDER\", code.join(\"\\n\"))\n\t  return procedure(CACHED_CONSTRUCTORS[dtype], order)\n\t}\n\t\n\tfunction arrayDType(data) {\n\t  if(isBuffer(data)) {\n\t    return \"buffer\"\n\t  }\n\t  if(hasTypedArrays) {\n\t    switch(Object.prototype.toString.call(data)) {\n\t      case \"[object Float64Array]\":\n\t        return \"float64\"\n\t      case \"[object Float32Array]\":\n\t        return \"float32\"\n\t      case \"[object Int8Array]\":\n\t        return \"int8\"\n\t      case \"[object Int16Array]\":\n\t        return \"int16\"\n\t      case \"[object Int32Array]\":\n\t        return \"int32\"\n\t      case \"[object Uint8Array]\":\n\t        return \"uint8\"\n\t      case \"[object Uint16Array]\":\n\t        return \"uint16\"\n\t      case \"[object Uint32Array]\":\n\t        return \"uint32\"\n\t      case \"[object Uint8ClampedArray]\":\n\t        return \"uint8_clamped\"\n\t    }\n\t  }\n\t  if(Array.isArray(data)) {\n\t    return \"array\"\n\t  }\n\t  return \"generic\"\n\t}\n\t\n\tvar CACHED_CONSTRUCTORS = {\n\t  \"float32\":[],\n\t  \"float64\":[],\n\t  \"int8\":[],\n\t  \"int16\":[],\n\t  \"int32\":[],\n\t  \"uint8\":[],\n\t  \"uint16\":[],\n\t  \"uint32\":[],\n\t  \"array\":[],\n\t  \"uint8_clamped\":[],\n\t  \"buffer\":[],\n\t  \"generic\":[]\n\t}\n\t\n\t;(function() {\n\t  for(var id in CACHED_CONSTRUCTORS) {\n\t    CACHED_CONSTRUCTORS[id].push(compileConstructor(id, -1))\n\t  }\n\t});\n\t\n\tfunction wrappedNDArrayCtor(data, shape, stride, offset) {\n\t  if(data === undefined) {\n\t    var ctor = CACHED_CONSTRUCTORS.array[0]\n\t    return ctor([])\n\t  } else if(typeof data === \"number\") {\n\t    data = [data]\n\t  }\n\t  if(shape === undefined) {\n\t    shape = [ data.length ]\n\t  }\n\t  var d = shape.length\n\t  if(stride === undefined) {\n\t    stride = new Array(d)\n\t    for(var i=d-1, sz=1; i>=0; --i) {\n\t      stride[i] = sz\n\t      sz *= shape[i]\n\t    }\n\t  }\n\t  if(offset === undefined) {\n\t    offset = 0\n\t    for(var i=0; i<d; ++i) {\n\t      if(stride[i] < 0) {\n\t        offset -= (shape[i]-1)*stride[i]\n\t      }\n\t    }\n\t  }\n\t  var dtype = arrayDType(data)\n\t  var ctor_list = CACHED_CONSTRUCTORS[dtype]\n\t  while(ctor_list.length <= d+1) {\n\t    ctor_list.push(compileConstructor(dtype, ctor_list.length-1))\n\t  }\n\t  var ctor = ctor_list[d+1]\n\t  return ctor(data, shape, stride, offset)\n\t}\n\t\n\tmodule.exports = wrappedNDArrayCtor\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\"\n\t\n\tfunction iota(n) {\n\t  var result = new Array(n)\n\t  for(var i=0; i<n; ++i) {\n\t    result[i] = i\n\t  }\n\t  return result\n\t}\n\t\n\tmodule.exports = iota\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Determine if an object is Buffer\n\t *\n\t * Author:   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n\t * License:  MIT\n\t *\n\t * `npm install is-buffer`\n\t */\n\t\n\tmodule.exports = function (obj) {\n\t  return !!(obj != null &&\n\t    (obj._isBuffer || // For Safari 5-7 (missing Object.prototype.constructor)\n\t      (obj.constructor &&\n\t      typeof obj.constructor.isBuffer === 'function' &&\n\t      obj.constructor.isBuffer(obj))\n\t    ))\n\t}\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\"\n\t\n\tvar parse   = __webpack_require__(5)\n\tvar compile = __webpack_require__(8)\n\t\n\tvar REQUIRED_FIELDS = [ \"args\", \"body\" ]\n\tvar OPTIONAL_FIELDS = [ \"pre\", \"post\", \"printCode\", \"funcName\", \"blockSize\" ]\n\t\n\tfunction createCWise(user_args) {\n\t  //Check parameters\n\t  for(var id in user_args) {\n\t    if(REQUIRED_FIELDS.indexOf(id) < 0 &&\n\t       OPTIONAL_FIELDS.indexOf(id) < 0) {\n\t      console.warn(\"cwise: Unknown argument '\"+id+\"' passed to expression compiler\")\n\t    }\n\t  }\n\t  for(var i=0; i<REQUIRED_FIELDS.length; ++i) {\n\t    if(!user_args[REQUIRED_FIELDS[i]]) {\n\t      throw new Error(\"cwise: Missing argument: \" + REQUIRED_FIELDS[i])\n\t    }\n\t  }\n\t  \n\t  //Parse blocks\n\t  return compile({\n\t    args:       user_args.args,\n\t    pre:        parse(user_args.pre || function(){}),\n\t    body:       parse(user_args.body),\n\t    post:       parse(user_args.post || function(){}),\n\t    debug:      !!user_args.printCode,\n\t    funcName:   user_args.funcName || user_args.body.name || \"cwise\",\n\t    blockSize:  user_args.blockSize || 64\n\t  })\n\t}\n\t\n\tmodule.exports = createCWise\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\"\r\n\t\r\n\tvar esprima = __webpack_require__(6)\r\n\tvar uniq = __webpack_require__(7)\r\n\t\r\n\tvar PREFIX_COUNTER = 0\r\n\t\r\n\tfunction CompiledArgument(name, lvalue, rvalue) {\r\n\t  this.name = name\r\n\t  this.lvalue = lvalue\r\n\t  this.rvalue = rvalue\r\n\t  this.count = 0\r\n\t}\r\n\t\r\n\tfunction CompiledRoutine(body, args, thisVars, localVars) {\r\n\t  this.body = body\r\n\t  this.args = args\r\n\t  this.thisVars = thisVars\r\n\t  this.localVars = localVars\r\n\t}\r\n\t\r\n\tfunction isGlobal(identifier) {\r\n\t  if(identifier === \"eval\") {\r\n\t    throw new Error(\"cwise-parser: eval() not allowed\")\r\n\t  }\r\n\t  if(typeof window !== \"undefined\") {\r\n\t    return identifier in window\r\n\t  } else if(typeof GLOBAL !== \"undefined\") {\r\n\t    return identifier in GLOBAL\r\n\t  } else if(typeof self !== \"undefined\") {\r\n\t    return identifier in self\r\n\t  } else {\r\n\t    return false\r\n\t  }\r\n\t}\r\n\t\r\n\tfunction getArgNames(ast) {\r\n\t  var params = ast.body[0].expression.callee.params\r\n\t  var names = new Array(params.length)\r\n\t  for(var i=0; i<params.length; ++i) {\r\n\t    names[i] = params[i].name\r\n\t  }\r\n\t  return names\r\n\t}\r\n\t\r\n\tfunction preprocess(func) {\r\n\t  var src = [\"(\", func, \")()\"].join(\"\")\r\n\t  var ast = esprima.parse(src, { range: true })\r\n\t  \r\n\t  //Compute new prefix\r\n\t  var prefix = \"_inline_\" + (PREFIX_COUNTER++) + \"_\"\r\n\t  \r\n\t  //Parse out arguments\r\n\t  var argNames = getArgNames(ast)\r\n\t  var compiledArgs = new Array(argNames.length)\r\n\t  for(var i=0; i<argNames.length; ++i) {\r\n\t    compiledArgs[i] = new CompiledArgument([prefix, \"arg\", i, \"_\"].join(\"\"), false, false)\r\n\t  }\r\n\t  \r\n\t  //Create temporary data structure for source rewriting\r\n\t  var exploded = new Array(src.length)\r\n\t  for(var i=0, n=src.length; i<n; ++i) {\r\n\t    exploded[i] = src.charAt(i)\r\n\t  }\r\n\t  \r\n\t  //Local variables\r\n\t  var localVars = []\r\n\t  var thisVars = []\r\n\t  var computedThis = false\r\n\t  \r\n\t  //Retrieves a local variable\r\n\t  function createLocal(id) {\r\n\t    var nstr = prefix + id.replace(/\\_/g, \"__\")\r\n\t    localVars.push(nstr)\r\n\t    return nstr\r\n\t  }\r\n\t  \r\n\t  //Creates a this variable\r\n\t  function createThisVar(id) {\r\n\t    var nstr = \"this_\" + id.replace(/\\_/g, \"__\")\r\n\t    thisVars.push(nstr)\r\n\t    return nstr\r\n\t  }\r\n\t  \r\n\t  //Rewrites an ast node\r\n\t  function rewrite(node, nstr) {\r\n\t    var lo = node.range[0], hi = node.range[1]\r\n\t    for(var i=lo+1; i<hi; ++i) {\r\n\t      exploded[i] = \"\"\r\n\t    }\r\n\t    exploded[lo] = nstr\r\n\t  }\r\n\t  \r\n\t  //Remove any underscores\r\n\t  function escapeString(str) {\r\n\t    return \"'\"+(str.replace(/\\_/g, \"\\\\_\").replace(/\\'/g, \"\\'\"))+\"'\"\r\n\t  }\r\n\t  \r\n\t  //Returns the source of an identifier\r\n\t  function source(node) {\r\n\t    return exploded.slice(node.range[0], node.range[1]).join(\"\")\r\n\t  }\r\n\t  \r\n\t  //Computes the usage of a node\r\n\t  var LVALUE = 1\r\n\t  var RVALUE = 2\r\n\t  function getUsage(node) {\r\n\t    if(node.parent.type === \"AssignmentExpression\") {\r\n\t      if(node.parent.left === node) {\r\n\t        if(node.parent.operator === \"=\") {\r\n\t          return LVALUE\r\n\t        }\r\n\t        return LVALUE|RVALUE\r\n\t      }\r\n\t    }\r\n\t    if(node.parent.type === \"UpdateExpression\") {\r\n\t      return LVALUE|RVALUE\r\n\t    }\r\n\t    return RVALUE\r\n\t  }\r\n\t  \r\n\t  //Handle visiting a node\r\n\t  (function visit(node, parent) {\r\n\t    node.parent = parent\r\n\t    if(node.type === \"MemberExpression\") {\r\n\t      //Handle member expression\r\n\t      if(node.computed) {\r\n\t        visit(node.object, node)\r\n\t        visit(node.property, node)\r\n\t      } else if(node.object.type === \"ThisExpression\") {\r\n\t        rewrite(node, createThisVar(node.property.name))\r\n\t      } else {\r\n\t        visit(node.object, node)\r\n\t      }\r\n\t    } else if(node.type === \"ThisExpression\") {\r\n\t      throw new Error(\"cwise-parser: Computed this is not allowed\")\r\n\t    } else if(node.type === \"Identifier\") {\r\n\t      //Handle identifier\r\n\t      var name = node.name\r\n\t      var argNo = argNames.indexOf(name)\r\n\t      if(argNo >= 0) {\r\n\t        var carg = compiledArgs[argNo]\r\n\t        var usage = getUsage(node)\r\n\t        if(usage & LVALUE) {\r\n\t          carg.lvalue = true\r\n\t        }\r\n\t        if(usage & RVALUE) {\r\n\t          carg.rvalue = true\r\n\t        }\r\n\t        ++carg.count\r\n\t        rewrite(node, carg.name)\r\n\t      } else if(isGlobal(name)) {\r\n\t        //Don't rewrite globals\r\n\t      } else {\r\n\t        rewrite(node, createLocal(name))\r\n\t      }\r\n\t    } else if(node.type === \"Literal\") {\r\n\t      if(typeof node.value === \"string\") {\r\n\t        rewrite(node, escapeString(node.value))\r\n\t      }\r\n\t    } else if(node.type === \"WithStatement\") {\r\n\t      throw new Error(\"cwise-parser: with() statements not allowed\")\r\n\t    } else {\r\n\t      //Visit all children\r\n\t      var keys = Object.keys(node)\r\n\t      for(var i=0, n=keys.length; i<n; ++i) {\r\n\t        if(keys[i] === \"parent\") {\r\n\t          continue\r\n\t        }\r\n\t        var value = node[keys[i]]\r\n\t        if(value) {\r\n\t          if(value instanceof Array) {\r\n\t            for(var j=0; j<value.length; ++j) {\r\n\t              if(value[j] && typeof value[j].type === \"string\") {\r\n\t                visit(value[j], node)\r\n\t              }\r\n\t            }\r\n\t          } else if(typeof value.type === \"string\") {\r\n\t            visit(value, node)\r\n\t          }\r\n\t        }\r\n\t      }\r\n\t    }\r\n\t  })(ast.body[0].expression.callee.body, undefined)\r\n\t  \r\n\t  //Remove duplicate variables\r\n\t  uniq(localVars)\r\n\t  uniq(thisVars)\r\n\t  \r\n\t  //Return body\r\n\t  var routine = new CompiledRoutine(source(ast.body[0].expression.callee.body), compiledArgs, thisVars, localVars)\r\n\t  return routine\r\n\t}\r\n\t\r\n\tmodule.exports = preprocess\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n\t  Copyright (C) 2013 Ariya Hidayat <ariya.hidayat@gmail.com>\n\t  Copyright (C) 2013 Thaddee Tyl <thaddee.tyl@gmail.com>\n\t  Copyright (C) 2013 Mathias Bynens <mathias@qiwi.be>\n\t  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n\t  Copyright (C) 2012 Mathias Bynens <mathias@qiwi.be>\n\t  Copyright (C) 2012 Joost-Wim Boekesteijn <joost-wim@boekesteijn.nl>\n\t  Copyright (C) 2012 Kris Kowal <kris.kowal@cixar.com>\n\t  Copyright (C) 2012 Yusuke Suzuki <utatane.tea@gmail.com>\n\t  Copyright (C) 2012 Arpad Borsos <arpad.borsos@googlemail.com>\n\t  Copyright (C) 2011 Ariya Hidayat <ariya.hidayat@gmail.com>\n\t\n\t  Redistribution and use in source and binary forms, with or without\n\t  modification, are permitted provided that the following conditions are met:\n\t\n\t    * Redistributions of source code must retain the above copyright\n\t      notice, this list of conditions and the following disclaimer.\n\t    * Redistributions in binary form must reproduce the above copyright\n\t      notice, this list of conditions and the following disclaimer in the\n\t      documentation and/or other materials provided with the distribution.\n\t\n\t  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\t  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\t  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\t  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n\t  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\t  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\t  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\t  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\t  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t*/\n\t\n\t/*jslint bitwise:true plusplus:true */\n\t/*global esprima:true, define:true, exports:true, window: true,\n\tthrowErrorTolerant: true,\n\tthrowError: true, generateStatement: true, peek: true,\n\tparseAssignmentExpression: true, parseBlock: true, parseExpression: true,\n\tparseFunctionDeclaration: true, parseFunctionExpression: true,\n\tparseFunctionSourceElements: true, parseVariableIdentifier: true,\n\tparseLeftHandSideExpression: true,\n\tparseUnaryExpression: true,\n\tparseStatement: true, parseSourceElement: true */\n\t\n\t(function (root, factory) {\n\t    'use strict';\n\t\n\t    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js,\n\t    // Rhino, and plain browser loading.\n\t\n\t    /* istanbul ignore next */\n\t    if (true) {\n\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    } else if (typeof exports !== 'undefined') {\n\t        factory(exports);\n\t    } else {\n\t        factory((root.esprima = {}));\n\t    }\n\t}(this, function (exports) {\n\t    'use strict';\n\t\n\t    var Token,\n\t        TokenName,\n\t        FnExprTokens,\n\t        Syntax,\n\t        PropertyKind,\n\t        Messages,\n\t        Regex,\n\t        SyntaxTreeDelegate,\n\t        source,\n\t        strict,\n\t        index,\n\t        lineNumber,\n\t        lineStart,\n\t        length,\n\t        delegate,\n\t        lookahead,\n\t        state,\n\t        extra;\n\t\n\t    Token = {\n\t        BooleanLiteral: 1,\n\t        EOF: 2,\n\t        Identifier: 3,\n\t        Keyword: 4,\n\t        NullLiteral: 5,\n\t        NumericLiteral: 6,\n\t        Punctuator: 7,\n\t        StringLiteral: 8,\n\t        RegularExpression: 9\n\t    };\n\t\n\t    TokenName = {};\n\t    TokenName[Token.BooleanLiteral] = 'Boolean';\n\t    TokenName[Token.EOF] = '<end>';\n\t    TokenName[Token.Identifier] = 'Identifier';\n\t    TokenName[Token.Keyword] = 'Keyword';\n\t    TokenName[Token.NullLiteral] = 'Null';\n\t    TokenName[Token.NumericLiteral] = 'Numeric';\n\t    TokenName[Token.Punctuator] = 'Punctuator';\n\t    TokenName[Token.StringLiteral] = 'String';\n\t    TokenName[Token.RegularExpression] = 'RegularExpression';\n\t\n\t    // A function following one of those tokens is an expression.\n\t    FnExprTokens = ['(', '{', '[', 'in', 'typeof', 'instanceof', 'new',\n\t                    'return', 'case', 'delete', 'throw', 'void',\n\t                    // assignment operators\n\t                    '=', '+=', '-=', '*=', '/=', '%=', '<<=', '>>=', '>>>=',\n\t                    '&=', '|=', '^=', ',',\n\t                    // binary/unary operators\n\t                    '+', '-', '*', '/', '%', '++', '--', '<<', '>>', '>>>', '&',\n\t                    '|', '^', '!', '~', '&&', '||', '?', ':', '===', '==', '>=',\n\t                    '<=', '<', '>', '!=', '!=='];\n\t\n\t    Syntax = {\n\t        AssignmentExpression: 'AssignmentExpression',\n\t        ArrayExpression: 'ArrayExpression',\n\t        BlockStatement: 'BlockStatement',\n\t        BinaryExpression: 'BinaryExpression',\n\t        BreakStatement: 'BreakStatement',\n\t        CallExpression: 'CallExpression',\n\t        CatchClause: 'CatchClause',\n\t        ConditionalExpression: 'ConditionalExpression',\n\t        ContinueStatement: 'ContinueStatement',\n\t        DoWhileStatement: 'DoWhileStatement',\n\t        DebuggerStatement: 'DebuggerStatement',\n\t        EmptyStatement: 'EmptyStatement',\n\t        ExpressionStatement: 'ExpressionStatement',\n\t        ForStatement: 'ForStatement',\n\t        ForInStatement: 'ForInStatement',\n\t        FunctionDeclaration: 'FunctionDeclaration',\n\t        FunctionExpression: 'FunctionExpression',\n\t        Identifier: 'Identifier',\n\t        IfStatement: 'IfStatement',\n\t        Literal: 'Literal',\n\t        LabeledStatement: 'LabeledStatement',\n\t        LogicalExpression: 'LogicalExpression',\n\t        MemberExpression: 'MemberExpression',\n\t        NewExpression: 'NewExpression',\n\t        ObjectExpression: 'ObjectExpression',\n\t        Program: 'Program',\n\t        Property: 'Property',\n\t        ReturnStatement: 'ReturnStatement',\n\t        SequenceExpression: 'SequenceExpression',\n\t        SwitchStatement: 'SwitchStatement',\n\t        SwitchCase: 'SwitchCase',\n\t        ThisExpression: 'ThisExpression',\n\t        ThrowStatement: 'ThrowStatement',\n\t        TryStatement: 'TryStatement',\n\t        UnaryExpression: 'UnaryExpression',\n\t        UpdateExpression: 'UpdateExpression',\n\t        VariableDeclaration: 'VariableDeclaration',\n\t        VariableDeclarator: 'VariableDeclarator',\n\t        WhileStatement: 'WhileStatement',\n\t        WithStatement: 'WithStatement'\n\t    };\n\t\n\t    PropertyKind = {\n\t        Data: 1,\n\t        Get: 2,\n\t        Set: 4\n\t    };\n\t\n\t    // Error messages should be identical to V8.\n\t    Messages = {\n\t        UnexpectedToken:  'Unexpected token %0',\n\t        UnexpectedNumber:  'Unexpected number',\n\t        UnexpectedString:  'Unexpected string',\n\t        UnexpectedIdentifier:  'Unexpected identifier',\n\t        UnexpectedReserved:  'Unexpected reserved word',\n\t        UnexpectedEOS:  'Unexpected end of input',\n\t        NewlineAfterThrow:  'Illegal newline after throw',\n\t        InvalidRegExp: 'Invalid regular expression',\n\t        UnterminatedRegExp:  'Invalid regular expression: missing /',\n\t        InvalidLHSInAssignment:  'Invalid left-hand side in assignment',\n\t        InvalidLHSInForIn:  'Invalid left-hand side in for-in',\n\t        MultipleDefaultsInSwitch: 'More than one default clause in switch statement',\n\t        NoCatchOrFinally:  'Missing catch or finally after try',\n\t        UnknownLabel: 'Undefined label \\'%0\\'',\n\t        Redeclaration: '%0 \\'%1\\' has already been declared',\n\t        IllegalContinue: 'Illegal continue statement',\n\t        IllegalBreak: 'Illegal break statement',\n\t        IllegalReturn: 'Illegal return statement',\n\t        StrictModeWith:  'Strict mode code may not include a with statement',\n\t        StrictCatchVariable:  'Catch variable may not be eval or arguments in strict mode',\n\t        StrictVarName:  'Variable name may not be eval or arguments in strict mode',\n\t        StrictParamName:  'Parameter name eval or arguments is not allowed in strict mode',\n\t        StrictParamDupe: 'Strict mode function may not have duplicate parameter names',\n\t        StrictFunctionName:  'Function name may not be eval or arguments in strict mode',\n\t        StrictOctalLiteral:  'Octal literals are not allowed in strict mode.',\n\t        StrictDelete:  'Delete of an unqualified identifier in strict mode.',\n\t        StrictDuplicateProperty:  'Duplicate data property in object literal not allowed in strict mode',\n\t        AccessorDataProperty:  'Object literal may not have data and accessor property with the same name',\n\t        AccessorGetSet:  'Object literal may not have multiple get/set accessors with the same name',\n\t        StrictLHSAssignment:  'Assignment to eval or arguments is not allowed in strict mode',\n\t        StrictLHSPostfix:  'Postfix increment/decrement may not have eval or arguments operand in strict mode',\n\t        StrictLHSPrefix:  'Prefix increment/decrement may not have eval or arguments operand in strict mode',\n\t        StrictReservedWord:  'Use of future reserved word in strict mode'\n\t    };\n\t\n\t    // See also tools/generate-unicode-regex.py.\n\t    Regex = {\n\t        NonAsciiIdentifierStart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F0\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]'),\n\t        NonAsciiIdentifierPart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0\\u08A2-\\u08AC\\u08E4-\\u08FE\\u0900-\\u0963\\u0966-\\u096F\\u0971-\\u0977\\u0979-\\u097F\\u0981-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C01-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C82\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D02\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F0\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1D00-\\u1DE6\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA697\\uA69F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7B\\uAA80-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE26\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]')\n\t    };\n\t\n\t    // Ensure the condition is true, otherwise throw an error.\n\t    // This is only to have a better contract semantic, i.e. another safety net\n\t    // to catch a logic error. The condition shall be fulfilled in normal case.\n\t    // Do NOT use this to enforce a certain condition on any user input.\n\t\n\t    function assert(condition, message) {\n\t        /* istanbul ignore if */\n\t        if (!condition) {\n\t            throw new Error('ASSERT: ' + message);\n\t        }\n\t    }\n\t\n\t    function isDecimalDigit(ch) {\n\t        return (ch >= 48 && ch <= 57);   // 0..9\n\t    }\n\t\n\t    function isHexDigit(ch) {\n\t        return '0123456789abcdefABCDEF'.indexOf(ch) >= 0;\n\t    }\n\t\n\t    function isOctalDigit(ch) {\n\t        return '01234567'.indexOf(ch) >= 0;\n\t    }\n\t\n\t\n\t    // 7.2 White Space\n\t\n\t    function isWhiteSpace(ch) {\n\t        return (ch === 0x20) || (ch === 0x09) || (ch === 0x0B) || (ch === 0x0C) || (ch === 0xA0) ||\n\t            (ch >= 0x1680 && [0x1680, 0x180E, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(ch) >= 0);\n\t    }\n\t\n\t    // 7.3 Line Terminators\n\t\n\t    function isLineTerminator(ch) {\n\t        return (ch === 0x0A) || (ch === 0x0D) || (ch === 0x2028) || (ch === 0x2029);\n\t    }\n\t\n\t    // 7.6 Identifier Names and Identifiers\n\t\n\t    function isIdentifierStart(ch) {\n\t        return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n\t            (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n\t            (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n\t            (ch === 0x5C) ||                      // \\ (backslash)\n\t            ((ch >= 0x80) && Regex.NonAsciiIdentifierStart.test(String.fromCharCode(ch)));\n\t    }\n\t\n\t    function isIdentifierPart(ch) {\n\t        return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n\t            (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n\t            (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n\t            (ch >= 0x30 && ch <= 0x39) ||         // 0..9\n\t            (ch === 0x5C) ||                      // \\ (backslash)\n\t            ((ch >= 0x80) && Regex.NonAsciiIdentifierPart.test(String.fromCharCode(ch)));\n\t    }\n\t\n\t    // 7.6.1.2 Future Reserved Words\n\t\n\t    function isFutureReservedWord(id) {\n\t        switch (id) {\n\t        case 'class':\n\t        case 'enum':\n\t        case 'export':\n\t        case 'extends':\n\t        case 'import':\n\t        case 'super':\n\t            return true;\n\t        default:\n\t            return false;\n\t        }\n\t    }\n\t\n\t    function isStrictModeReservedWord(id) {\n\t        switch (id) {\n\t        case 'implements':\n\t        case 'interface':\n\t        case 'package':\n\t        case 'private':\n\t        case 'protected':\n\t        case 'public':\n\t        case 'static':\n\t        case 'yield':\n\t        case 'let':\n\t            return true;\n\t        default:\n\t            return false;\n\t        }\n\t    }\n\t\n\t    function isRestrictedWord(id) {\n\t        return id === 'eval' || id === 'arguments';\n\t    }\n\t\n\t    // 7.6.1.1 Keywords\n\t\n\t    function isKeyword(id) {\n\t        if (strict && isStrictModeReservedWord(id)) {\n\t            return true;\n\t        }\n\t\n\t        // 'const' is specialized as Keyword in V8.\n\t        // 'yield' and 'let' are for compatiblity with SpiderMonkey and ES.next.\n\t        // Some others are from future reserved words.\n\t\n\t        switch (id.length) {\n\t        case 2:\n\t            return (id === 'if') || (id === 'in') || (id === 'do');\n\t        case 3:\n\t            return (id === 'var') || (id === 'for') || (id === 'new') ||\n\t                (id === 'try') || (id === 'let');\n\t        case 4:\n\t            return (id === 'this') || (id === 'else') || (id === 'case') ||\n\t                (id === 'void') || (id === 'with') || (id === 'enum');\n\t        case 5:\n\t            return (id === 'while') || (id === 'break') || (id === 'catch') ||\n\t                (id === 'throw') || (id === 'const') || (id === 'yield') ||\n\t                (id === 'class') || (id === 'super');\n\t        case 6:\n\t            return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n\t                (id === 'switch') || (id === 'export') || (id === 'import');\n\t        case 7:\n\t            return (id === 'default') || (id === 'finally') || (id === 'extends');\n\t        case 8:\n\t            return (id === 'function') || (id === 'continue') || (id === 'debugger');\n\t        case 10:\n\t            return (id === 'instanceof');\n\t        default:\n\t            return false;\n\t        }\n\t    }\n\t\n\t    // 7.4 Comments\n\t\n\t    function addComment(type, value, start, end, loc) {\n\t        var comment, attacher;\n\t\n\t        assert(typeof start === 'number', 'Comment must have valid position');\n\t\n\t        // Because the way the actual token is scanned, often the comments\n\t        // (if any) are skipped twice during the lexical analysis.\n\t        // Thus, we need to skip adding a comment if the comment array already\n\t        // handled it.\n\t        if (state.lastCommentStart >= start) {\n\t            return;\n\t        }\n\t        state.lastCommentStart = start;\n\t\n\t        comment = {\n\t            type: type,\n\t            value: value\n\t        };\n\t        if (extra.range) {\n\t            comment.range = [start, end];\n\t        }\n\t        if (extra.loc) {\n\t            comment.loc = loc;\n\t        }\n\t        extra.comments.push(comment);\n\t        if (extra.attachComment) {\n\t            extra.leadingComments.push(comment);\n\t            extra.trailingComments.push(comment);\n\t        }\n\t    }\n\t\n\t    function skipSingleLineComment(offset) {\n\t        var start, loc, ch, comment;\n\t\n\t        start = index - offset;\n\t        loc = {\n\t            start: {\n\t                line: lineNumber,\n\t                column: index - lineStart - offset\n\t            }\n\t        };\n\t\n\t        while (index < length) {\n\t            ch = source.charCodeAt(index);\n\t            ++index;\n\t            if (isLineTerminator(ch)) {\n\t                if (extra.comments) {\n\t                    comment = source.slice(start + offset, index - 1);\n\t                    loc.end = {\n\t                        line: lineNumber,\n\t                        column: index - lineStart - 1\n\t                    };\n\t                    addComment('Line', comment, start, index - 1, loc);\n\t                }\n\t                if (ch === 13 && source.charCodeAt(index) === 10) {\n\t                    ++index;\n\t                }\n\t                ++lineNumber;\n\t                lineStart = index;\n\t                return;\n\t            }\n\t        }\n\t\n\t        if (extra.comments) {\n\t            comment = source.slice(start + offset, index);\n\t            loc.end = {\n\t                line: lineNumber,\n\t                column: index - lineStart\n\t            };\n\t            addComment('Line', comment, start, index, loc);\n\t        }\n\t    }\n\t\n\t    function skipMultiLineComment() {\n\t        var start, loc, ch, comment;\n\t\n\t        if (extra.comments) {\n\t            start = index - 2;\n\t            loc = {\n\t                start: {\n\t                    line: lineNumber,\n\t                    column: index - lineStart - 2\n\t                }\n\t            };\n\t        }\n\t\n\t        while (index < length) {\n\t            ch = source.charCodeAt(index);\n\t            if (isLineTerminator(ch)) {\n\t                if (ch === 0x0D && source.charCodeAt(index + 1) === 0x0A) {\n\t                    ++index;\n\t                }\n\t                ++lineNumber;\n\t                ++index;\n\t                lineStart = index;\n\t                if (index >= length) {\n\t                    throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n\t                }\n\t            } else if (ch === 0x2A) {\n\t                // Block comment ends with '*/'.\n\t                if (source.charCodeAt(index + 1) === 0x2F) {\n\t                    ++index;\n\t                    ++index;\n\t                    if (extra.comments) {\n\t                        comment = source.slice(start + 2, index - 2);\n\t                        loc.end = {\n\t                            line: lineNumber,\n\t                            column: index - lineStart\n\t                        };\n\t                        addComment('Block', comment, start, index, loc);\n\t                    }\n\t                    return;\n\t                }\n\t                ++index;\n\t            } else {\n\t                ++index;\n\t            }\n\t        }\n\t\n\t        throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n\t    }\n\t\n\t    function skipComment() {\n\t        var ch, start;\n\t\n\t        start = (index === 0);\n\t        while (index < length) {\n\t            ch = source.charCodeAt(index);\n\t\n\t            if (isWhiteSpace(ch)) {\n\t                ++index;\n\t            } else if (isLineTerminator(ch)) {\n\t                ++index;\n\t                if (ch === 0x0D && source.charCodeAt(index) === 0x0A) {\n\t                    ++index;\n\t                }\n\t                ++lineNumber;\n\t                lineStart = index;\n\t                start = true;\n\t            } else if (ch === 0x2F) { // U+002F is '/'\n\t                ch = source.charCodeAt(index + 1);\n\t                if (ch === 0x2F) {\n\t                    ++index;\n\t                    ++index;\n\t                    skipSingleLineComment(2);\n\t                    start = true;\n\t                } else if (ch === 0x2A) {  // U+002A is '*'\n\t                    ++index;\n\t                    ++index;\n\t                    skipMultiLineComment();\n\t                } else {\n\t                    break;\n\t                }\n\t            } else if (start && ch === 0x2D) { // U+002D is '-'\n\t                // U+003E is '>'\n\t                if ((source.charCodeAt(index + 1) === 0x2D) && (source.charCodeAt(index + 2) === 0x3E)) {\n\t                    // '-->' is a single-line comment\n\t                    index += 3;\n\t                    skipSingleLineComment(3);\n\t                } else {\n\t                    break;\n\t                }\n\t            } else if (ch === 0x3C) { // U+003C is '<'\n\t                if (source.slice(index + 1, index + 4) === '!--') {\n\t                    ++index; // `<`\n\t                    ++index; // `!`\n\t                    ++index; // `-`\n\t                    ++index; // `-`\n\t                    skipSingleLineComment(4);\n\t                } else {\n\t                    break;\n\t                }\n\t            } else {\n\t                break;\n\t            }\n\t        }\n\t    }\n\t\n\t    function scanHexEscape(prefix) {\n\t        var i, len, ch, code = 0;\n\t\n\t        len = (prefix === 'u') ? 4 : 2;\n\t        for (i = 0; i < len; ++i) {\n\t            if (index < length && isHexDigit(source[index])) {\n\t                ch = source[index++];\n\t                code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n\t            } else {\n\t                return '';\n\t            }\n\t        }\n\t        return String.fromCharCode(code);\n\t    }\n\t\n\t    function getEscapedIdentifier() {\n\t        var ch, id;\n\t\n\t        ch = source.charCodeAt(index++);\n\t        id = String.fromCharCode(ch);\n\t\n\t        // '\\u' (U+005C, U+0075) denotes an escaped character.\n\t        if (ch === 0x5C) {\n\t            if (source.charCodeAt(index) !== 0x75) {\n\t                throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n\t            }\n\t            ++index;\n\t            ch = scanHexEscape('u');\n\t            if (!ch || ch === '\\\\' || !isIdentifierStart(ch.charCodeAt(0))) {\n\t                throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n\t            }\n\t            id = ch;\n\t        }\n\t\n\t        while (index < length) {\n\t            ch = source.charCodeAt(index);\n\t            if (!isIdentifierPart(ch)) {\n\t                break;\n\t            }\n\t            ++index;\n\t            id += String.fromCharCode(ch);\n\t\n\t            // '\\u' (U+005C, U+0075) denotes an escaped character.\n\t            if (ch === 0x5C) {\n\t                id = id.substr(0, id.length - 1);\n\t                if (source.charCodeAt(index) !== 0x75) {\n\t                    throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n\t                }\n\t                ++index;\n\t                ch = scanHexEscape('u');\n\t                if (!ch || ch === '\\\\' || !isIdentifierPart(ch.charCodeAt(0))) {\n\t                    throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n\t                }\n\t                id += ch;\n\t            }\n\t        }\n\t\n\t        return id;\n\t    }\n\t\n\t    function getIdentifier() {\n\t        var start, ch;\n\t\n\t        start = index++;\n\t        while (index < length) {\n\t            ch = source.charCodeAt(index);\n\t            if (ch === 0x5C) {\n\t                // Blackslash (U+005C) marks Unicode escape sequence.\n\t                index = start;\n\t                return getEscapedIdentifier();\n\t            }\n\t            if (isIdentifierPart(ch)) {\n\t                ++index;\n\t            } else {\n\t                break;\n\t            }\n\t        }\n\t\n\t        return source.slice(start, index);\n\t    }\n\t\n\t    function scanIdentifier() {\n\t        var start, id, type;\n\t\n\t        start = index;\n\t\n\t        // Backslash (U+005C) starts an escaped character.\n\t        id = (source.charCodeAt(index) === 0x5C) ? getEscapedIdentifier() : getIdentifier();\n\t\n\t        // There is no keyword or literal with only one character.\n\t        // Thus, it must be an identifier.\n\t        if (id.length === 1) {\n\t            type = Token.Identifier;\n\t        } else if (isKeyword(id)) {\n\t            type = Token.Keyword;\n\t        } else if (id === 'null') {\n\t            type = Token.NullLiteral;\n\t        } else if (id === 'true' || id === 'false') {\n\t            type = Token.BooleanLiteral;\n\t        } else {\n\t            type = Token.Identifier;\n\t        }\n\t\n\t        return {\n\t            type: type,\n\t            value: id,\n\t            lineNumber: lineNumber,\n\t            lineStart: lineStart,\n\t            start: start,\n\t            end: index\n\t        };\n\t    }\n\t\n\t\n\t    // 7.7 Punctuators\n\t\n\t    function scanPunctuator() {\n\t        var start = index,\n\t            code = source.charCodeAt(index),\n\t            code2,\n\t            ch1 = source[index],\n\t            ch2,\n\t            ch3,\n\t            ch4;\n\t\n\t        switch (code) {\n\t\n\t        // Check for most common single-character punctuators.\n\t        case 0x2E:  // . dot\n\t        case 0x28:  // ( open bracket\n\t        case 0x29:  // ) close bracket\n\t        case 0x3B:  // ; semicolon\n\t        case 0x2C:  // , comma\n\t        case 0x7B:  // { open curly brace\n\t        case 0x7D:  // } close curly brace\n\t        case 0x5B:  // [\n\t        case 0x5D:  // ]\n\t        case 0x3A:  // :\n\t        case 0x3F:  // ?\n\t        case 0x7E:  // ~\n\t            ++index;\n\t            if (extra.tokenize) {\n\t                if (code === 0x28) {\n\t                    extra.openParenToken = extra.tokens.length;\n\t                } else if (code === 0x7B) {\n\t                    extra.openCurlyToken = extra.tokens.length;\n\t                }\n\t            }\n\t            return {\n\t                type: Token.Punctuator,\n\t                value: String.fromCharCode(code),\n\t                lineNumber: lineNumber,\n\t                lineStart: lineStart,\n\t                start: start,\n\t                end: index\n\t            };\n\t\n\t        default:\n\t            code2 = source.charCodeAt(index + 1);\n\t\n\t            // '=' (U+003D) marks an assignment or comparison operator.\n\t            if (code2 === 0x3D) {\n\t                switch (code) {\n\t                case 0x2B:  // +\n\t                case 0x2D:  // -\n\t                case 0x2F:  // /\n\t                case 0x3C:  // <\n\t                case 0x3E:  // >\n\t                case 0x5E:  // ^\n\t                case 0x7C:  // |\n\t                case 0x25:  // %\n\t                case 0x26:  // &\n\t                case 0x2A:  // *\n\t                    index += 2;\n\t                    return {\n\t                        type: Token.Punctuator,\n\t                        value: String.fromCharCode(code) + String.fromCharCode(code2),\n\t                        lineNumber: lineNumber,\n\t                        lineStart: lineStart,\n\t                        start: start,\n\t                        end: index\n\t                    };\n\t\n\t                case 0x21: // !\n\t                case 0x3D: // =\n\t                    index += 2;\n\t\n\t                    // !== and ===\n\t                    if (source.charCodeAt(index) === 0x3D) {\n\t                        ++index;\n\t                    }\n\t                    return {\n\t                        type: Token.Punctuator,\n\t                        value: source.slice(start, index),\n\t                        lineNumber: lineNumber,\n\t                        lineStart: lineStart,\n\t                        start: start,\n\t                        end: index\n\t                    };\n\t                }\n\t            }\n\t        }\n\t\n\t        // 4-character punctuator: >>>=\n\t\n\t        ch4 = source.substr(index, 4);\n\t\n\t        if (ch4 === '>>>=') {\n\t            index += 4;\n\t            return {\n\t                type: Token.Punctuator,\n\t                value: ch4,\n\t                lineNumber: lineNumber,\n\t                lineStart: lineStart,\n\t                start: start,\n\t                end: index\n\t            };\n\t        }\n\t\n\t        // 3-character punctuators: === !== >>> <<= >>=\n\t\n\t        ch3 = ch4.substr(0, 3);\n\t\n\t        if (ch3 === '>>>' || ch3 === '<<=' || ch3 === '>>=') {\n\t            index += 3;\n\t            return {\n\t                type: Token.Punctuator,\n\t                value: ch3,\n\t                lineNumber: lineNumber,\n\t                lineStart: lineStart,\n\t                start: start,\n\t                end: index\n\t            };\n\t        }\n\t\n\t        // Other 2-character punctuators: ++ -- << >> && ||\n\t        ch2 = ch3.substr(0, 2);\n\t\n\t        if ((ch1 === ch2[1] && ('+-<>&|'.indexOf(ch1) >= 0)) || ch2 === '=>') {\n\t            index += 2;\n\t            return {\n\t                type: Token.Punctuator,\n\t                value: ch2,\n\t                lineNumber: lineNumber,\n\t                lineStart: lineStart,\n\t                start: start,\n\t                end: index\n\t            };\n\t        }\n\t\n\t        // 1-character punctuators: < > = ! + - * % & | ^ /\n\t        if ('<>=!+-*%&|^/'.indexOf(ch1) >= 0) {\n\t            ++index;\n\t            return {\n\t                type: Token.Punctuator,\n\t                value: ch1,\n\t                lineNumber: lineNumber,\n\t                lineStart: lineStart,\n\t                start: start,\n\t                end: index\n\t            };\n\t        }\n\t\n\t        throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n\t    }\n\t\n\t    // 7.8.3 Numeric Literals\n\t\n\t    function scanHexLiteral(start) {\n\t        var number = '';\n\t\n\t        while (index < length) {\n\t            if (!isHexDigit(source[index])) {\n\t                break;\n\t            }\n\t            number += source[index++];\n\t        }\n\t\n\t        if (number.length === 0) {\n\t            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n\t        }\n\t\n\t        if (isIdentifierStart(source.charCodeAt(index))) {\n\t            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n\t        }\n\t\n\t        return {\n\t            type: Token.NumericLiteral,\n\t            value: parseInt('0x' + number, 16),\n\t            lineNumber: lineNumber,\n\t            lineStart: lineStart,\n\t            start: start,\n\t            end: index\n\t        };\n\t    }\n\t\n\t    function scanOctalLiteral(start) {\n\t        var number = '0' + source[index++];\n\t        while (index < length) {\n\t            if (!isOctalDigit(source[index])) {\n\t                break;\n\t            }\n\t            number += source[index++];\n\t        }\n\t\n\t        if (isIdentifierStart(source.charCodeAt(index)) || isDecimalDigit(source.charCodeAt(index))) {\n\t            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n\t        }\n\t\n\t        return {\n\t            type: Token.NumericLiteral,\n\t            value: parseInt(number, 8),\n\t            octal: true,\n\t            lineNumber: lineNumber,\n\t            lineStart: lineStart,\n\t            start: start,\n\t            end: index\n\t        };\n\t    }\n\t\n\t    function isImplicitOctalLiteral() {\n\t        var i, ch;\n\t\n\t        // Implicit octal, unless there is a non-octal digit.\n\t        // (Annex B.1.1 on Numeric Literals)\n\t        for (i = index + 1; i < length; ++i) {\n\t            ch = source[i];\n\t            if (ch === '8' || ch === '9') {\n\t                return false;\n\t            }\n\t            if (!isOctalDigit(ch)) {\n\t                return true;\n\t            }\n\t        }\n\t\n\t        return true;\n\t    }\n\t\n\t    function scanNumericLiteral() {\n\t        var number, start, ch;\n\t\n\t        ch = source[index];\n\t        assert(isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'),\n\t            'Numeric literal must start with a decimal digit or a decimal point');\n\t\n\t        start = index;\n\t        number = '';\n\t        if (ch !== '.') {\n\t            number = source[index++];\n\t            ch = source[index];\n\t\n\t            // Hex number starts with '0x'.\n\t            // Octal number starts with '0'.\n\t            if (number === '0') {\n\t                if (ch === 'x' || ch === 'X') {\n\t                    ++index;\n\t                    return scanHexLiteral(start);\n\t                }\n\t                if (isOctalDigit(ch)) {\n\t                    if (isImplicitOctalLiteral()) {\n\t                        return scanOctalLiteral(start);\n\t                    }\n\t                }\n\t            }\n\t\n\t            while (isDecimalDigit(source.charCodeAt(index))) {\n\t                number += source[index++];\n\t            }\n\t            ch = source[index];\n\t        }\n\t\n\t        if (ch === '.') {\n\t            number += source[index++];\n\t            while (isDecimalDigit(source.charCodeAt(index))) {\n\t                number += source[index++];\n\t            }\n\t            ch = source[index];\n\t        }\n\t\n\t        if (ch === 'e' || ch === 'E') {\n\t            number += source[index++];\n\t\n\t            ch = source[index];\n\t            if (ch === '+' || ch === '-') {\n\t                number += source[index++];\n\t            }\n\t            if (isDecimalDigit(source.charCodeAt(index))) {\n\t                while (isDecimalDigit(source.charCodeAt(index))) {\n\t                    number += source[index++];\n\t                }\n\t            } else {\n\t                throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n\t            }\n\t        }\n\t\n\t        if (isIdentifierStart(source.charCodeAt(index))) {\n\t            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n\t        }\n\t\n\t        return {\n\t            type: Token.NumericLiteral,\n\t            value: parseFloat(number),\n\t            lineNumber: lineNumber,\n\t            lineStart: lineStart,\n\t            start: start,\n\t            end: index\n\t        };\n\t    }\n\t\n\t    // 7.8.4 String Literals\n\t\n\t    function scanStringLiteral() {\n\t        var str = '', quote, start, ch, code, unescaped, restore, octal = false, startLineNumber, startLineStart;\n\t        startLineNumber = lineNumber;\n\t        startLineStart = lineStart;\n\t\n\t        quote = source[index];\n\t        assert((quote === '\\'' || quote === '\"'),\n\t            'String literal must starts with a quote');\n\t\n\t        start = index;\n\t        ++index;\n\t\n\t        while (index < length) {\n\t            ch = source[index++];\n\t\n\t            if (ch === quote) {\n\t                quote = '';\n\t                break;\n\t            } else if (ch === '\\\\') {\n\t                ch = source[index++];\n\t                if (!ch || !isLineTerminator(ch.charCodeAt(0))) {\n\t                    switch (ch) {\n\t                    case 'u':\n\t                    case 'x':\n\t                        restore = index;\n\t                        unescaped = scanHexEscape(ch);\n\t                        if (unescaped) {\n\t                            str += unescaped;\n\t                        } else {\n\t                            index = restore;\n\t                            str += ch;\n\t                        }\n\t                        break;\n\t                    case 'n':\n\t                        str += '\\n';\n\t                        break;\n\t                    case 'r':\n\t                        str += '\\r';\n\t                        break;\n\t                    case 't':\n\t                        str += '\\t';\n\t                        break;\n\t                    case 'b':\n\t                        str += '\\b';\n\t                        break;\n\t                    case 'f':\n\t                        str += '\\f';\n\t                        break;\n\t                    case 'v':\n\t                        str += '\\x0B';\n\t                        break;\n\t\n\t                    default:\n\t                        if (isOctalDigit(ch)) {\n\t                            code = '01234567'.indexOf(ch);\n\t\n\t                            // \\0 is not octal escape sequence\n\t                            if (code !== 0) {\n\t                                octal = true;\n\t                            }\n\t\n\t                            if (index < length && isOctalDigit(source[index])) {\n\t                                octal = true;\n\t                                code = code * 8 + '01234567'.indexOf(source[index++]);\n\t\n\t                                // 3 digits are only allowed when string starts\n\t                                // with 0, 1, 2, 3\n\t                                if ('0123'.indexOf(ch) >= 0 &&\n\t                                        index < length &&\n\t                                        isOctalDigit(source[index])) {\n\t                                    code = code * 8 + '01234567'.indexOf(source[index++]);\n\t                                }\n\t                            }\n\t                            str += String.fromCharCode(code);\n\t                        } else {\n\t                            str += ch;\n\t                        }\n\t                        break;\n\t                    }\n\t                } else {\n\t                    ++lineNumber;\n\t                    if (ch ===  '\\r' && source[index] === '\\n') {\n\t                        ++index;\n\t                    }\n\t                    lineStart = index;\n\t                }\n\t            } else if (isLineTerminator(ch.charCodeAt(0))) {\n\t                break;\n\t            } else {\n\t                str += ch;\n\t            }\n\t        }\n\t\n\t        if (quote !== '') {\n\t            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n\t        }\n\t\n\t        return {\n\t            type: Token.StringLiteral,\n\t            value: str,\n\t            octal: octal,\n\t            startLineNumber: startLineNumber,\n\t            startLineStart: startLineStart,\n\t            lineNumber: lineNumber,\n\t            lineStart: lineStart,\n\t            start: start,\n\t            end: index\n\t        };\n\t    }\n\t\n\t    function testRegExp(pattern, flags) {\n\t        var value;\n\t        try {\n\t            value = new RegExp(pattern, flags);\n\t        } catch (e) {\n\t            throwError({}, Messages.InvalidRegExp);\n\t        }\n\t        return value;\n\t    }\n\t\n\t    function scanRegExpBody() {\n\t        var ch, str, classMarker, terminated, body;\n\t\n\t        ch = source[index];\n\t        assert(ch === '/', 'Regular expression literal must start with a slash');\n\t        str = source[index++];\n\t\n\t        classMarker = false;\n\t        terminated = false;\n\t        while (index < length) {\n\t            ch = source[index++];\n\t            str += ch;\n\t            if (ch === '\\\\') {\n\t                ch = source[index++];\n\t                // ECMA-262 7.8.5\n\t                if (isLineTerminator(ch.charCodeAt(0))) {\n\t                    throwError({}, Messages.UnterminatedRegExp);\n\t                }\n\t                str += ch;\n\t            } else if (isLineTerminator(ch.charCodeAt(0))) {\n\t                throwError({}, Messages.UnterminatedRegExp);\n\t            } else if (classMarker) {\n\t                if (ch === ']') {\n\t                    classMarker = false;\n\t                }\n\t            } else {\n\t                if (ch === '/') {\n\t                    terminated = true;\n\t                    break;\n\t                } else if (ch === '[') {\n\t                    classMarker = true;\n\t                }\n\t            }\n\t        }\n\t\n\t        if (!terminated) {\n\t            throwError({}, Messages.UnterminatedRegExp);\n\t        }\n\t\n\t        // Exclude leading and trailing slash.\n\t        body = str.substr(1, str.length - 2);\n\t        return {\n\t            value: body,\n\t            literal: str\n\t        };\n\t    }\n\t\n\t    function scanRegExpFlags() {\n\t        var ch, str, flags, restore;\n\t\n\t        str = '';\n\t        flags = '';\n\t        while (index < length) {\n\t            ch = source[index];\n\t            if (!isIdentifierPart(ch.charCodeAt(0))) {\n\t                break;\n\t            }\n\t\n\t            ++index;\n\t            if (ch === '\\\\' && index < length) {\n\t                ch = source[index];\n\t                if (ch === 'u') {\n\t                    ++index;\n\t                    restore = index;\n\t                    ch = scanHexEscape('u');\n\t                    if (ch) {\n\t                        flags += ch;\n\t                        for (str += '\\\\u'; restore < index; ++restore) {\n\t                            str += source[restore];\n\t                        }\n\t                    } else {\n\t                        index = restore;\n\t                        flags += 'u';\n\t                        str += '\\\\u';\n\t                    }\n\t                    throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n\t                } else {\n\t                    str += '\\\\';\n\t                    throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n\t                }\n\t            } else {\n\t                flags += ch;\n\t                str += ch;\n\t            }\n\t        }\n\t\n\t        return {\n\t            value: flags,\n\t            literal: str\n\t        };\n\t    }\n\t\n\t    function scanRegExp() {\n\t        var start, body, flags, pattern, value;\n\t\n\t        lookahead = null;\n\t        skipComment();\n\t        start = index;\n\t\n\t        body = scanRegExpBody();\n\t        flags = scanRegExpFlags();\n\t        value = testRegExp(body.value, flags.value);\n\t\n\t        if (extra.tokenize) {\n\t            return {\n\t                type: Token.RegularExpression,\n\t                value: value,\n\t                lineNumber: lineNumber,\n\t                lineStart: lineStart,\n\t                start: start,\n\t                end: index\n\t            };\n\t        }\n\t\n\t        return {\n\t            literal: body.literal + flags.literal,\n\t            value: value,\n\t            start: start,\n\t            end: index\n\t        };\n\t    }\n\t\n\t    function collectRegex() {\n\t        var pos, loc, regex, token;\n\t\n\t        skipComment();\n\t\n\t        pos = index;\n\t        loc = {\n\t            start: {\n\t                line: lineNumber,\n\t                column: index - lineStart\n\t            }\n\t        };\n\t\n\t        regex = scanRegExp();\n\t        loc.end = {\n\t            line: lineNumber,\n\t            column: index - lineStart\n\t        };\n\t\n\t        /* istanbul ignore next */\n\t        if (!extra.tokenize) {\n\t            // Pop the previous token, which is likely '/' or '/='\n\t            if (extra.tokens.length > 0) {\n\t                token = extra.tokens[extra.tokens.length - 1];\n\t                if (token.range[0] === pos && token.type === 'Punctuator') {\n\t                    if (token.value === '/' || token.value === '/=') {\n\t                        extra.tokens.pop();\n\t                    }\n\t                }\n\t            }\n\t\n\t            extra.tokens.push({\n\t                type: 'RegularExpression',\n\t                value: regex.literal,\n\t                range: [pos, index],\n\t                loc: loc\n\t            });\n\t        }\n\t\n\t        return regex;\n\t    }\n\t\n\t    function isIdentifierName(token) {\n\t        return token.type === Token.Identifier ||\n\t            token.type === Token.Keyword ||\n\t            token.type === Token.BooleanLiteral ||\n\t            token.type === Token.NullLiteral;\n\t    }\n\t\n\t    function advanceSlash() {\n\t        var prevToken,\n\t            checkToken;\n\t        // Using the following algorithm:\n\t        // https://github.com/mozilla/sweet.js/wiki/design\n\t        prevToken = extra.tokens[extra.tokens.length - 1];\n\t        if (!prevToken) {\n\t            // Nothing before that: it cannot be a division.\n\t            return collectRegex();\n\t        }\n\t        if (prevToken.type === 'Punctuator') {\n\t            if (prevToken.value === ']') {\n\t                return scanPunctuator();\n\t            }\n\t            if (prevToken.value === ')') {\n\t                checkToken = extra.tokens[extra.openParenToken - 1];\n\t                if (checkToken &&\n\t                        checkToken.type === 'Keyword' &&\n\t                        (checkToken.value === 'if' ||\n\t                         checkToken.value === 'while' ||\n\t                         checkToken.value === 'for' ||\n\t                         checkToken.value === 'with')) {\n\t                    return collectRegex();\n\t                }\n\t                return scanPunctuator();\n\t            }\n\t            if (prevToken.value === '}') {\n\t                // Dividing a function by anything makes little sense,\n\t                // but we have to check for that.\n\t                if (extra.tokens[extra.openCurlyToken - 3] &&\n\t                        extra.tokens[extra.openCurlyToken - 3].type === 'Keyword') {\n\t                    // Anonymous function.\n\t                    checkToken = extra.tokens[extra.openCurlyToken - 4];\n\t                    if (!checkToken) {\n\t                        return scanPunctuator();\n\t                    }\n\t                } else if (extra.tokens[extra.openCurlyToken - 4] &&\n\t                        extra.tokens[extra.openCurlyToken - 4].type === 'Keyword') {\n\t                    // Named function.\n\t                    checkToken = extra.tokens[extra.openCurlyToken - 5];\n\t                    if (!checkToken) {\n\t                        return collectRegex();\n\t                    }\n\t                } else {\n\t                    return scanPunctuator();\n\t                }\n\t                // checkToken determines whether the function is\n\t                // a declaration or an expression.\n\t                if (FnExprTokens.indexOf(checkToken.value) >= 0) {\n\t                    // It is an expression.\n\t                    return scanPunctuator();\n\t                }\n\t                // It is a declaration.\n\t                return collectRegex();\n\t            }\n\t            return collectRegex();\n\t        }\n\t        if (prevToken.type === 'Keyword' && prevToken.value !== 'this') {\n\t            return collectRegex();\n\t        }\n\t        return scanPunctuator();\n\t    }\n\t\n\t    function advance() {\n\t        var ch;\n\t\n\t        skipComment();\n\t\n\t        if (index >= length) {\n\t            return {\n\t                type: Token.EOF,\n\t                lineNumber: lineNumber,\n\t                lineStart: lineStart,\n\t                start: index,\n\t                end: index\n\t            };\n\t        }\n\t\n\t        ch = source.charCodeAt(index);\n\t\n\t        if (isIdentifierStart(ch)) {\n\t            return scanIdentifier();\n\t        }\n\t\n\t        // Very common: ( and ) and ;\n\t        if (ch === 0x28 || ch === 0x29 || ch === 0x3B) {\n\t            return scanPunctuator();\n\t        }\n\t\n\t        // String literal starts with single quote (U+0027) or double quote (U+0022).\n\t        if (ch === 0x27 || ch === 0x22) {\n\t            return scanStringLiteral();\n\t        }\n\t\n\t\n\t        // Dot (.) U+002E can also start a floating-point number, hence the need\n\t        // to check the next character.\n\t        if (ch === 0x2E) {\n\t            if (isDecimalDigit(source.charCodeAt(index + 1))) {\n\t                return scanNumericLiteral();\n\t            }\n\t            return scanPunctuator();\n\t        }\n\t\n\t        if (isDecimalDigit(ch)) {\n\t            return scanNumericLiteral();\n\t        }\n\t\n\t        // Slash (/) U+002F can also start a regex.\n\t        if (extra.tokenize && ch === 0x2F) {\n\t            return advanceSlash();\n\t        }\n\t\n\t        return scanPunctuator();\n\t    }\n\t\n\t    function collectToken() {\n\t        var loc, token, range, value;\n\t\n\t        skipComment();\n\t        loc = {\n\t            start: {\n\t                line: lineNumber,\n\t                column: index - lineStart\n\t            }\n\t        };\n\t\n\t        token = advance();\n\t        loc.end = {\n\t            line: lineNumber,\n\t            column: index - lineStart\n\t        };\n\t\n\t        if (token.type !== Token.EOF) {\n\t            value = source.slice(token.start, token.end);\n\t            extra.tokens.push({\n\t                type: TokenName[token.type],\n\t                value: value,\n\t                range: [token.start, token.end],\n\t                loc: loc\n\t            });\n\t        }\n\t\n\t        return token;\n\t    }\n\t\n\t    function lex() {\n\t        var token;\n\t\n\t        token = lookahead;\n\t        index = token.end;\n\t        lineNumber = token.lineNumber;\n\t        lineStart = token.lineStart;\n\t\n\t        lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n\t\n\t        index = token.end;\n\t        lineNumber = token.lineNumber;\n\t        lineStart = token.lineStart;\n\t\n\t        return token;\n\t    }\n\t\n\t    function peek() {\n\t        var pos, line, start;\n\t\n\t        pos = index;\n\t        line = lineNumber;\n\t        start = lineStart;\n\t        lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n\t        index = pos;\n\t        lineNumber = line;\n\t        lineStart = start;\n\t    }\n\t\n\t    function Position(line, column) {\n\t        this.line = line;\n\t        this.column = column;\n\t    }\n\t\n\t    function SourceLocation(startLine, startColumn, line, column) {\n\t        this.start = new Position(startLine, startColumn);\n\t        this.end = new Position(line, column);\n\t    }\n\t\n\t    SyntaxTreeDelegate = {\n\t\n\t        name: 'SyntaxTree',\n\t\n\t        processComment: function (node) {\n\t            var lastChild, trailingComments;\n\t\n\t            if (node.type === Syntax.Program) {\n\t                if (node.body.length > 0) {\n\t                    return;\n\t                }\n\t            }\n\t\n\t            if (extra.trailingComments.length > 0) {\n\t                if (extra.trailingComments[0].range[0] >= node.range[1]) {\n\t                    trailingComments = extra.trailingComments;\n\t                    extra.trailingComments = [];\n\t                } else {\n\t                    extra.trailingComments.length = 0;\n\t                }\n\t            } else {\n\t                if (extra.bottomRightStack.length > 0 &&\n\t                        extra.bottomRightStack[extra.bottomRightStack.length - 1].trailingComments &&\n\t                        extra.bottomRightStack[extra.bottomRightStack.length - 1].trailingComments[0].range[0] >= node.range[1]) {\n\t                    trailingComments = extra.bottomRightStack[extra.bottomRightStack.length - 1].trailingComments;\n\t                    delete extra.bottomRightStack[extra.bottomRightStack.length - 1].trailingComments;\n\t                }\n\t            }\n\t\n\t            // Eating the stack.\n\t            while (extra.bottomRightStack.length > 0 && extra.bottomRightStack[extra.bottomRightStack.length - 1].range[0] >= node.range[0]) {\n\t                lastChild = extra.bottomRightStack.pop();\n\t            }\n\t\n\t            if (lastChild) {\n\t                if (lastChild.leadingComments && lastChild.leadingComments[lastChild.leadingComments.length - 1].range[1] <= node.range[0]) {\n\t                    node.leadingComments = lastChild.leadingComments;\n\t                    delete lastChild.leadingComments;\n\t                }\n\t            } else if (extra.leadingComments.length > 0 && extra.leadingComments[extra.leadingComments.length - 1].range[1] <= node.range[0]) {\n\t                node.leadingComments = extra.leadingComments;\n\t                extra.leadingComments = [];\n\t            }\n\t\n\t\n\t            if (trailingComments) {\n\t                node.trailingComments = trailingComments;\n\t            }\n\t\n\t            extra.bottomRightStack.push(node);\n\t        },\n\t\n\t        markEnd: function (node, startToken) {\n\t            if (extra.range) {\n\t                node.range = [startToken.start, index];\n\t            }\n\t            if (extra.loc) {\n\t                node.loc = new SourceLocation(\n\t                    startToken.startLineNumber === undefined ?  startToken.lineNumber : startToken.startLineNumber,\n\t                    startToken.start - (startToken.startLineStart === undefined ?  startToken.lineStart : startToken.startLineStart),\n\t                    lineNumber,\n\t                    index - lineStart\n\t                );\n\t                this.postProcess(node);\n\t            }\n\t\n\t            if (extra.attachComment) {\n\t                this.processComment(node);\n\t            }\n\t            return node;\n\t        },\n\t\n\t        postProcess: function (node) {\n\t            if (extra.source) {\n\t                node.loc.source = extra.source;\n\t            }\n\t            return node;\n\t        },\n\t\n\t        createArrayExpression: function (elements) {\n\t            return {\n\t                type: Syntax.ArrayExpression,\n\t                elements: elements\n\t            };\n\t        },\n\t\n\t        createAssignmentExpression: function (operator, left, right) {\n\t            return {\n\t                type: Syntax.AssignmentExpression,\n\t                operator: operator,\n\t                left: left,\n\t                right: right\n\t            };\n\t        },\n\t\n\t        createBinaryExpression: function (operator, left, right) {\n\t            var type = (operator === '||' || operator === '&&') ? Syntax.LogicalExpression :\n\t                        Syntax.BinaryExpression;\n\t            return {\n\t                type: type,\n\t                operator: operator,\n\t                left: left,\n\t                right: right\n\t            };\n\t        },\n\t\n\t        createBlockStatement: function (body) {\n\t            return {\n\t                type: Syntax.BlockStatement,\n\t                body: body\n\t            };\n\t        },\n\t\n\t        createBreakStatement: function (label) {\n\t            return {\n\t                type: Syntax.BreakStatement,\n\t                label: label\n\t            };\n\t        },\n\t\n\t        createCallExpression: function (callee, args) {\n\t            return {\n\t                type: Syntax.CallExpression,\n\t                callee: callee,\n\t                'arguments': args\n\t            };\n\t        },\n\t\n\t        createCatchClause: function (param, body) {\n\t            return {\n\t                type: Syntax.CatchClause,\n\t                param: param,\n\t                body: body\n\t            };\n\t        },\n\t\n\t        createConditionalExpression: function (test, consequent, alternate) {\n\t            return {\n\t                type: Syntax.ConditionalExpression,\n\t                test: test,\n\t                consequent: consequent,\n\t                alternate: alternate\n\t            };\n\t        },\n\t\n\t        createContinueStatement: function (label) {\n\t            return {\n\t                type: Syntax.ContinueStatement,\n\t                label: label\n\t            };\n\t        },\n\t\n\t        createDebuggerStatement: function () {\n\t            return {\n\t                type: Syntax.DebuggerStatement\n\t            };\n\t        },\n\t\n\t        createDoWhileStatement: function (body, test) {\n\t            return {\n\t                type: Syntax.DoWhileStatement,\n\t                body: body,\n\t                test: test\n\t            };\n\t        },\n\t\n\t        createEmptyStatement: function () {\n\t            return {\n\t                type: Syntax.EmptyStatement\n\t            };\n\t        },\n\t\n\t        createExpressionStatement: function (expression) {\n\t            return {\n\t                type: Syntax.ExpressionStatement,\n\t                expression: expression\n\t            };\n\t        },\n\t\n\t        createForStatement: function (init, test, update, body) {\n\t            return {\n\t                type: Syntax.ForStatement,\n\t                init: init,\n\t                test: test,\n\t                update: update,\n\t                body: body\n\t            };\n\t        },\n\t\n\t        createForInStatement: function (left, right, body) {\n\t            return {\n\t                type: Syntax.ForInStatement,\n\t                left: left,\n\t                right: right,\n\t                body: body,\n\t                each: false\n\t            };\n\t        },\n\t\n\t        createFunctionDeclaration: function (id, params, defaults, body) {\n\t            return {\n\t                type: Syntax.FunctionDeclaration,\n\t                id: id,\n\t                params: params,\n\t                defaults: defaults,\n\t                body: body,\n\t                rest: null,\n\t                generator: false,\n\t                expression: false\n\t            };\n\t        },\n\t\n\t        createFunctionExpression: function (id, params, defaults, body) {\n\t            return {\n\t                type: Syntax.FunctionExpression,\n\t                id: id,\n\t                params: params,\n\t                defaults: defaults,\n\t                body: body,\n\t                rest: null,\n\t                generator: false,\n\t                expression: false\n\t            };\n\t        },\n\t\n\t        createIdentifier: function (name) {\n\t            return {\n\t                type: Syntax.Identifier,\n\t                name: name\n\t            };\n\t        },\n\t\n\t        createIfStatement: function (test, consequent, alternate) {\n\t            return {\n\t                type: Syntax.IfStatement,\n\t                test: test,\n\t                consequent: consequent,\n\t                alternate: alternate\n\t            };\n\t        },\n\t\n\t        createLabeledStatement: function (label, body) {\n\t            return {\n\t                type: Syntax.LabeledStatement,\n\t                label: label,\n\t                body: body\n\t            };\n\t        },\n\t\n\t        createLiteral: function (token) {\n\t            return {\n\t                type: Syntax.Literal,\n\t                value: token.value,\n\t                raw: source.slice(token.start, token.end)\n\t            };\n\t        },\n\t\n\t        createMemberExpression: function (accessor, object, property) {\n\t            return {\n\t                type: Syntax.MemberExpression,\n\t                computed: accessor === '[',\n\t                object: object,\n\t                property: property\n\t            };\n\t        },\n\t\n\t        createNewExpression: function (callee, args) {\n\t            return {\n\t                type: Syntax.NewExpression,\n\t                callee: callee,\n\t                'arguments': args\n\t            };\n\t        },\n\t\n\t        createObjectExpression: function (properties) {\n\t            return {\n\t                type: Syntax.ObjectExpression,\n\t                properties: properties\n\t            };\n\t        },\n\t\n\t        createPostfixExpression: function (operator, argument) {\n\t            return {\n\t                type: Syntax.UpdateExpression,\n\t                operator: operator,\n\t                argument: argument,\n\t                prefix: false\n\t            };\n\t        },\n\t\n\t        createProgram: function (body) {\n\t            return {\n\t                type: Syntax.Program,\n\t                body: body\n\t            };\n\t        },\n\t\n\t        createProperty: function (kind, key, value) {\n\t            return {\n\t                type: Syntax.Property,\n\t                key: key,\n\t                value: value,\n\t                kind: kind\n\t            };\n\t        },\n\t\n\t        createReturnStatement: function (argument) {\n\t            return {\n\t                type: Syntax.ReturnStatement,\n\t                argument: argument\n\t            };\n\t        },\n\t\n\t        createSequenceExpression: function (expressions) {\n\t            return {\n\t                type: Syntax.SequenceExpression,\n\t                expressions: expressions\n\t            };\n\t        },\n\t\n\t        createSwitchCase: function (test, consequent) {\n\t            return {\n\t                type: Syntax.SwitchCase,\n\t                test: test,\n\t                consequent: consequent\n\t            };\n\t        },\n\t\n\t        createSwitchStatement: function (discriminant, cases) {\n\t            return {\n\t                type: Syntax.SwitchStatement,\n\t                discriminant: discriminant,\n\t                cases: cases\n\t            };\n\t        },\n\t\n\t        createThisExpression: function () {\n\t            return {\n\t                type: Syntax.ThisExpression\n\t            };\n\t        },\n\t\n\t        createThrowStatement: function (argument) {\n\t            return {\n\t                type: Syntax.ThrowStatement,\n\t                argument: argument\n\t            };\n\t        },\n\t\n\t        createTryStatement: function (block, guardedHandlers, handlers, finalizer) {\n\t            return {\n\t                type: Syntax.TryStatement,\n\t                block: block,\n\t                guardedHandlers: guardedHandlers,\n\t                handlers: handlers,\n\t                finalizer: finalizer\n\t            };\n\t        },\n\t\n\t        createUnaryExpression: function (operator, argument) {\n\t            if (operator === '++' || operator === '--') {\n\t                return {\n\t                    type: Syntax.UpdateExpression,\n\t                    operator: operator,\n\t                    argument: argument,\n\t                    prefix: true\n\t                };\n\t            }\n\t            return {\n\t                type: Syntax.UnaryExpression,\n\t                operator: operator,\n\t                argument: argument,\n\t                prefix: true\n\t            };\n\t        },\n\t\n\t        createVariableDeclaration: function (declarations, kind) {\n\t            return {\n\t                type: Syntax.VariableDeclaration,\n\t                declarations: declarations,\n\t                kind: kind\n\t            };\n\t        },\n\t\n\t        createVariableDeclarator: function (id, init) {\n\t            return {\n\t                type: Syntax.VariableDeclarator,\n\t                id: id,\n\t                init: init\n\t            };\n\t        },\n\t\n\t        createWhileStatement: function (test, body) {\n\t            return {\n\t                type: Syntax.WhileStatement,\n\t                test: test,\n\t                body: body\n\t            };\n\t        },\n\t\n\t        createWithStatement: function (object, body) {\n\t            return {\n\t                type: Syntax.WithStatement,\n\t                object: object,\n\t                body: body\n\t            };\n\t        }\n\t    };\n\t\n\t    // Return true if there is a line terminator before the next token.\n\t\n\t    function peekLineTerminator() {\n\t        var pos, line, start, found;\n\t\n\t        pos = index;\n\t        line = lineNumber;\n\t        start = lineStart;\n\t        skipComment();\n\t        found = lineNumber !== line;\n\t        index = pos;\n\t        lineNumber = line;\n\t        lineStart = start;\n\t\n\t        return found;\n\t    }\n\t\n\t    // Throw an exception\n\t\n\t    function throwError(token, messageFormat) {\n\t        var error,\n\t            args = Array.prototype.slice.call(arguments, 2),\n\t            msg = messageFormat.replace(\n\t                /%(\\d)/g,\n\t                function (whole, index) {\n\t                    assert(index < args.length, 'Message reference must be in range');\n\t                    return args[index];\n\t                }\n\t            );\n\t\n\t        if (typeof token.lineNumber === 'number') {\n\t            error = new Error('Line ' + token.lineNumber + ': ' + msg);\n\t            error.index = token.start;\n\t            error.lineNumber = token.lineNumber;\n\t            error.column = token.start - lineStart + 1;\n\t        } else {\n\t            error = new Error('Line ' + lineNumber + ': ' + msg);\n\t            error.index = index;\n\t            error.lineNumber = lineNumber;\n\t            error.column = index - lineStart + 1;\n\t        }\n\t\n\t        error.description = msg;\n\t        throw error;\n\t    }\n\t\n\t    function throwErrorTolerant() {\n\t        try {\n\t            throwError.apply(null, arguments);\n\t        } catch (e) {\n\t            if (extra.errors) {\n\t                extra.errors.push(e);\n\t            } else {\n\t                throw e;\n\t            }\n\t        }\n\t    }\n\t\n\t\n\t    // Throw an exception because of the token.\n\t\n\t    function throwUnexpected(token) {\n\t        if (token.type === Token.EOF) {\n\t            throwError(token, Messages.UnexpectedEOS);\n\t        }\n\t\n\t        if (token.type === Token.NumericLiteral) {\n\t            throwError(token, Messages.UnexpectedNumber);\n\t        }\n\t\n\t        if (token.type === Token.StringLiteral) {\n\t            throwError(token, Messages.UnexpectedString);\n\t        }\n\t\n\t        if (token.type === Token.Identifier) {\n\t            throwError(token, Messages.UnexpectedIdentifier);\n\t        }\n\t\n\t        if (token.type === Token.Keyword) {\n\t            if (isFutureReservedWord(token.value)) {\n\t                throwError(token, Messages.UnexpectedReserved);\n\t            } else if (strict && isStrictModeReservedWord(token.value)) {\n\t                throwErrorTolerant(token, Messages.StrictReservedWord);\n\t                return;\n\t            }\n\t            throwError(token, Messages.UnexpectedToken, token.value);\n\t        }\n\t\n\t        // BooleanLiteral, NullLiteral, or Punctuator.\n\t        throwError(token, Messages.UnexpectedToken, token.value);\n\t    }\n\t\n\t    // Expect the next token to match the specified punctuator.\n\t    // If not, an exception will be thrown.\n\t\n\t    function expect(value) {\n\t        var token = lex();\n\t        if (token.type !== Token.Punctuator || token.value !== value) {\n\t            throwUnexpected(token);\n\t        }\n\t    }\n\t\n\t    // Expect the next token to match the specified keyword.\n\t    // If not, an exception will be thrown.\n\t\n\t    function expectKeyword(keyword) {\n\t        var token = lex();\n\t        if (token.type !== Token.Keyword || token.value !== keyword) {\n\t            throwUnexpected(token);\n\t        }\n\t    }\n\t\n\t    // Return true if the next token matches the specified punctuator.\n\t\n\t    function match(value) {\n\t        return lookahead.type === Token.Punctuator && lookahead.value === value;\n\t    }\n\t\n\t    // Return true if the next token matches the specified keyword\n\t\n\t    function matchKeyword(keyword) {\n\t        return lookahead.type === Token.Keyword && lookahead.value === keyword;\n\t    }\n\t\n\t    // Return true if the next token is an assignment operator\n\t\n\t    function matchAssign() {\n\t        var op;\n\t\n\t        if (lookahead.type !== Token.Punctuator) {\n\t            return false;\n\t        }\n\t        op = lookahead.value;\n\t        return op === '=' ||\n\t            op === '*=' ||\n\t            op === '/=' ||\n\t            op === '%=' ||\n\t            op === '+=' ||\n\t            op === '-=' ||\n\t            op === '<<=' ||\n\t            op === '>>=' ||\n\t            op === '>>>=' ||\n\t            op === '&=' ||\n\t            op === '^=' ||\n\t            op === '|=';\n\t    }\n\t\n\t    function consumeSemicolon() {\n\t        var line, oldIndex = index, oldLineNumber = lineNumber,\n\t            oldLineStart = lineStart, oldLookahead = lookahead;\n\t\n\t        // Catch the very common case first: immediately a semicolon (U+003B).\n\t        if (source.charCodeAt(index) === 0x3B || match(';')) {\n\t            lex();\n\t            return;\n\t        }\n\t\n\t        line = lineNumber;\n\t        skipComment();\n\t        if (lineNumber !== line) {\n\t            index = oldIndex;\n\t            lineNumber = oldLineNumber;\n\t            lineStart = oldLineStart;\n\t            lookahead = oldLookahead;\n\t            return;\n\t        }\n\t\n\t        if (lookahead.type !== Token.EOF && !match('}')) {\n\t            throwUnexpected(lookahead);\n\t        }\n\t    }\n\t\n\t    // Return true if provided expression is LeftHandSideExpression\n\t\n\t    function isLeftHandSide(expr) {\n\t        return expr.type === Syntax.Identifier || expr.type === Syntax.MemberExpression;\n\t    }\n\t\n\t    // 11.1.4 Array Initialiser\n\t\n\t    function parseArrayInitialiser() {\n\t        var elements = [], startToken;\n\t\n\t        startToken = lookahead;\n\t        expect('[');\n\t\n\t        while (!match(']')) {\n\t            if (match(',')) {\n\t                lex();\n\t                elements.push(null);\n\t            } else {\n\t                elements.push(parseAssignmentExpression());\n\t\n\t                if (!match(']')) {\n\t                    expect(',');\n\t                }\n\t            }\n\t        }\n\t\n\t        lex();\n\t\n\t        return delegate.markEnd(delegate.createArrayExpression(elements), startToken);\n\t    }\n\t\n\t    // 11.1.5 Object Initialiser\n\t\n\t    function parsePropertyFunction(param, first) {\n\t        var previousStrict, body, startToken;\n\t\n\t        previousStrict = strict;\n\t        startToken = lookahead;\n\t        body = parseFunctionSourceElements();\n\t        if (first && strict && isRestrictedWord(param[0].name)) {\n\t            throwErrorTolerant(first, Messages.StrictParamName);\n\t        }\n\t        strict = previousStrict;\n\t        return delegate.markEnd(delegate.createFunctionExpression(null, param, [], body), startToken);\n\t    }\n\t\n\t    function parseObjectPropertyKey() {\n\t        var token, startToken;\n\t\n\t        startToken = lookahead;\n\t        token = lex();\n\t\n\t        // Note: This function is called only from parseObjectProperty(), where\n\t        // EOF and Punctuator tokens are already filtered out.\n\t\n\t        if (token.type === Token.StringLiteral || token.type === Token.NumericLiteral) {\n\t            if (strict && token.octal) {\n\t                throwErrorTolerant(token, Messages.StrictOctalLiteral);\n\t            }\n\t            return delegate.markEnd(delegate.createLiteral(token), startToken);\n\t        }\n\t\n\t        return delegate.markEnd(delegate.createIdentifier(token.value), startToken);\n\t    }\n\t\n\t    function parseObjectProperty() {\n\t        var token, key, id, value, param, startToken;\n\t\n\t        token = lookahead;\n\t        startToken = lookahead;\n\t\n\t        if (token.type === Token.Identifier) {\n\t\n\t            id = parseObjectPropertyKey();\n\t\n\t            // Property Assignment: Getter and Setter.\n\t\n\t            if (token.value === 'get' && !match(':')) {\n\t                key = parseObjectPropertyKey();\n\t                expect('(');\n\t                expect(')');\n\t                value = parsePropertyFunction([]);\n\t                return delegate.markEnd(delegate.createProperty('get', key, value), startToken);\n\t            }\n\t            if (token.value === 'set' && !match(':')) {\n\t                key = parseObjectPropertyKey();\n\t                expect('(');\n\t                token = lookahead;\n\t                if (token.type !== Token.Identifier) {\n\t                    expect(')');\n\t                    throwErrorTolerant(token, Messages.UnexpectedToken, token.value);\n\t                    value = parsePropertyFunction([]);\n\t                } else {\n\t                    param = [ parseVariableIdentifier() ];\n\t                    expect(')');\n\t                    value = parsePropertyFunction(param, token);\n\t                }\n\t                return delegate.markEnd(delegate.createProperty('set', key, value), startToken);\n\t            }\n\t            expect(':');\n\t            value = parseAssignmentExpression();\n\t            return delegate.markEnd(delegate.createProperty('init', id, value), startToken);\n\t        }\n\t        if (token.type === Token.EOF || token.type === Token.Punctuator) {\n\t            throwUnexpected(token);\n\t        } else {\n\t            key = parseObjectPropertyKey();\n\t            expect(':');\n\t            value = parseAssignmentExpression();\n\t            return delegate.markEnd(delegate.createProperty('init', key, value), startToken);\n\t        }\n\t    }\n\t\n\t    function parseObjectInitialiser() {\n\t        var properties = [], property, name, key, kind, map = {}, toString = String, startToken;\n\t\n\t        startToken = lookahead;\n\t\n\t        expect('{');\n\t\n\t        while (!match('}')) {\n\t            property = parseObjectProperty();\n\t\n\t            if (property.key.type === Syntax.Identifier) {\n\t                name = property.key.name;\n\t            } else {\n\t                name = toString(property.key.value);\n\t            }\n\t            kind = (property.kind === 'init') ? PropertyKind.Data : (property.kind === 'get') ? PropertyKind.Get : PropertyKind.Set;\n\t\n\t            key = '$' + name;\n\t            if (Object.prototype.hasOwnProperty.call(map, key)) {\n\t                if (map[key] === PropertyKind.Data) {\n\t                    if (strict && kind === PropertyKind.Data) {\n\t                        throwErrorTolerant({}, Messages.StrictDuplicateProperty);\n\t                    } else if (kind !== PropertyKind.Data) {\n\t                        throwErrorTolerant({}, Messages.AccessorDataProperty);\n\t                    }\n\t                } else {\n\t                    if (kind === PropertyKind.Data) {\n\t                        throwErrorTolerant({}, Messages.AccessorDataProperty);\n\t                    } else if (map[key] & kind) {\n\t                        throwErrorTolerant({}, Messages.AccessorGetSet);\n\t                    }\n\t                }\n\t                map[key] |= kind;\n\t            } else {\n\t                map[key] = kind;\n\t            }\n\t\n\t            properties.push(property);\n\t\n\t            if (!match('}')) {\n\t                expect(',');\n\t            }\n\t        }\n\t\n\t        expect('}');\n\t\n\t        return delegate.markEnd(delegate.createObjectExpression(properties), startToken);\n\t    }\n\t\n\t    // 11.1.6 The Grouping Operator\n\t\n\t    function parseGroupExpression() {\n\t        var expr;\n\t\n\t        expect('(');\n\t\n\t        expr = parseExpression();\n\t\n\t        expect(')');\n\t\n\t        return expr;\n\t    }\n\t\n\t\n\t    // 11.1 Primary Expressions\n\t\n\t    function parsePrimaryExpression() {\n\t        var type, token, expr, startToken;\n\t\n\t        if (match('(')) {\n\t            return parseGroupExpression();\n\t        }\n\t\n\t        if (match('[')) {\n\t            return parseArrayInitialiser();\n\t        }\n\t\n\t        if (match('{')) {\n\t            return parseObjectInitialiser();\n\t        }\n\t\n\t        type = lookahead.type;\n\t        startToken = lookahead;\n\t\n\t        if (type === Token.Identifier) {\n\t            expr =  delegate.createIdentifier(lex().value);\n\t        } else if (type === Token.StringLiteral || type === Token.NumericLiteral) {\n\t            if (strict && lookahead.octal) {\n\t                throwErrorTolerant(lookahead, Messages.StrictOctalLiteral);\n\t            }\n\t            expr = delegate.createLiteral(lex());\n\t        } else if (type === Token.Keyword) {\n\t            if (matchKeyword('function')) {\n\t                return parseFunctionExpression();\n\t            }\n\t            if (matchKeyword('this')) {\n\t                lex();\n\t                expr = delegate.createThisExpression();\n\t            } else {\n\t                throwUnexpected(lex());\n\t            }\n\t        } else if (type === Token.BooleanLiteral) {\n\t            token = lex();\n\t            token.value = (token.value === 'true');\n\t            expr = delegate.createLiteral(token);\n\t        } else if (type === Token.NullLiteral) {\n\t            token = lex();\n\t            token.value = null;\n\t            expr = delegate.createLiteral(token);\n\t        } else if (match('/') || match('/=')) {\n\t            if (typeof extra.tokens !== 'undefined') {\n\t                expr = delegate.createLiteral(collectRegex());\n\t            } else {\n\t                expr = delegate.createLiteral(scanRegExp());\n\t            }\n\t            peek();\n\t        } else {\n\t            throwUnexpected(lex());\n\t        }\n\t\n\t        return delegate.markEnd(expr, startToken);\n\t    }\n\t\n\t    // 11.2 Left-Hand-Side Expressions\n\t\n\t    function parseArguments() {\n\t        var args = [];\n\t\n\t        expect('(');\n\t\n\t        if (!match(')')) {\n\t            while (index < length) {\n\t                args.push(parseAssignmentExpression());\n\t                if (match(')')) {\n\t                    break;\n\t                }\n\t                expect(',');\n\t            }\n\t        }\n\t\n\t        expect(')');\n\t\n\t        return args;\n\t    }\n\t\n\t    function parseNonComputedProperty() {\n\t        var token, startToken;\n\t\n\t        startToken = lookahead;\n\t        token = lex();\n\t\n\t        if (!isIdentifierName(token)) {\n\t            throwUnexpected(token);\n\t        }\n\t\n\t        return delegate.markEnd(delegate.createIdentifier(token.value), startToken);\n\t    }\n\t\n\t    function parseNonComputedMember() {\n\t        expect('.');\n\t\n\t        return parseNonComputedProperty();\n\t    }\n\t\n\t    function parseComputedMember() {\n\t        var expr;\n\t\n\t        expect('[');\n\t\n\t        expr = parseExpression();\n\t\n\t        expect(']');\n\t\n\t        return expr;\n\t    }\n\t\n\t    function parseNewExpression() {\n\t        var callee, args, startToken;\n\t\n\t        startToken = lookahead;\n\t        expectKeyword('new');\n\t        callee = parseLeftHandSideExpression();\n\t        args = match('(') ? parseArguments() : [];\n\t\n\t        return delegate.markEnd(delegate.createNewExpression(callee, args), startToken);\n\t    }\n\t\n\t    function parseLeftHandSideExpressionAllowCall() {\n\t        var expr, args, property, startToken, previousAllowIn = state.allowIn;\n\t\n\t        startToken = lookahead;\n\t        state.allowIn = true;\n\t        expr = matchKeyword('new') ? parseNewExpression() : parsePrimaryExpression();\n\t\n\t        for (;;) {\n\t            if (match('.')) {\n\t                property = parseNonComputedMember();\n\t                expr = delegate.createMemberExpression('.', expr, property);\n\t            } else if (match('(')) {\n\t                args = parseArguments();\n\t                expr = delegate.createCallExpression(expr, args);\n\t            } else if (match('[')) {\n\t                property = parseComputedMember();\n\t                expr = delegate.createMemberExpression('[', expr, property);\n\t            } else {\n\t                break;\n\t            }\n\t            delegate.markEnd(expr, startToken);\n\t        }\n\t        state.allowIn = previousAllowIn;\n\t\n\t        return expr;\n\t    }\n\t\n\t    function parseLeftHandSideExpression() {\n\t        var expr, property, startToken;\n\t        assert(state.allowIn, 'callee of new expression always allow in keyword.');\n\t\n\t        startToken = lookahead;\n\t\n\t        expr = matchKeyword('new') ? parseNewExpression() : parsePrimaryExpression();\n\t\n\t        while (match('.') || match('[')) {\n\t            if (match('[')) {\n\t                property = parseComputedMember();\n\t                expr = delegate.createMemberExpression('[', expr, property);\n\t            } else {\n\t                property = parseNonComputedMember();\n\t                expr = delegate.createMemberExpression('.', expr, property);\n\t            }\n\t            delegate.markEnd(expr, startToken);\n\t        }\n\t        return expr;\n\t    }\n\t\n\t    // 11.3 Postfix Expressions\n\t\n\t    function parsePostfixExpression() {\n\t        var expr, token, startToken = lookahead;\n\t\n\t        expr = parseLeftHandSideExpressionAllowCall();\n\t\n\t        if (lookahead.type === Token.Punctuator) {\n\t            if ((match('++') || match('--')) && !peekLineTerminator()) {\n\t                // 11.3.1, 11.3.2\n\t                if (strict && expr.type === Syntax.Identifier && isRestrictedWord(expr.name)) {\n\t                    throwErrorTolerant({}, Messages.StrictLHSPostfix);\n\t                }\n\t\n\t                if (!isLeftHandSide(expr)) {\n\t                    throwErrorTolerant({}, Messages.InvalidLHSInAssignment);\n\t                }\n\t\n\t                token = lex();\n\t                expr = delegate.markEnd(delegate.createPostfixExpression(token.value, expr), startToken);\n\t            }\n\t        }\n\t\n\t        return expr;\n\t    }\n\t\n\t    // 11.4 Unary Operators\n\t\n\t    function parseUnaryExpression() {\n\t        var token, expr, startToken;\n\t\n\t        if (lookahead.type !== Token.Punctuator && lookahead.type !== Token.Keyword) {\n\t            expr = parsePostfixExpression();\n\t        } else if (match('++') || match('--')) {\n\t            startToken = lookahead;\n\t            token = lex();\n\t            expr = parseUnaryExpression();\n\t            // 11.4.4, 11.4.5\n\t            if (strict && expr.type === Syntax.Identifier && isRestrictedWord(expr.name)) {\n\t                throwErrorTolerant({}, Messages.StrictLHSPrefix);\n\t            }\n\t\n\t            if (!isLeftHandSide(expr)) {\n\t                throwErrorTolerant({}, Messages.InvalidLHSInAssignment);\n\t            }\n\t\n\t            expr = delegate.createUnaryExpression(token.value, expr);\n\t            expr = delegate.markEnd(expr, startToken);\n\t        } else if (match('+') || match('-') || match('~') || match('!')) {\n\t            startToken = lookahead;\n\t            token = lex();\n\t            expr = parseUnaryExpression();\n\t            expr = delegate.createUnaryExpression(token.value, expr);\n\t            expr = delegate.markEnd(expr, startToken);\n\t        } else if (matchKeyword('delete') || matchKeyword('void') || matchKeyword('typeof')) {\n\t            startToken = lookahead;\n\t            token = lex();\n\t            expr = parseUnaryExpression();\n\t            expr = delegate.createUnaryExpression(token.value, expr);\n\t            expr = delegate.markEnd(expr, startToken);\n\t            if (strict && expr.operator === 'delete' && expr.argument.type === Syntax.Identifier) {\n\t                throwErrorTolerant({}, Messages.StrictDelete);\n\t            }\n\t        } else {\n\t            expr = parsePostfixExpression();\n\t        }\n\t\n\t        return expr;\n\t    }\n\t\n\t    function binaryPrecedence(token, allowIn) {\n\t        var prec = 0;\n\t\n\t        if (token.type !== Token.Punctuator && token.type !== Token.Keyword) {\n\t            return 0;\n\t        }\n\t\n\t        switch (token.value) {\n\t        case '||':\n\t            prec = 1;\n\t            break;\n\t\n\t        case '&&':\n\t            prec = 2;\n\t            break;\n\t\n\t        case '|':\n\t            prec = 3;\n\t            break;\n\t\n\t        case '^':\n\t            prec = 4;\n\t            break;\n\t\n\t        case '&':\n\t            prec = 5;\n\t            break;\n\t\n\t        case '==':\n\t        case '!=':\n\t        case '===':\n\t        case '!==':\n\t            prec = 6;\n\t            break;\n\t\n\t        case '<':\n\t        case '>':\n\t        case '<=':\n\t        case '>=':\n\t        case 'instanceof':\n\t            prec = 7;\n\t            break;\n\t\n\t        case 'in':\n\t            prec = allowIn ? 7 : 0;\n\t            break;\n\t\n\t        case '<<':\n\t        case '>>':\n\t        case '>>>':\n\t            prec = 8;\n\t            break;\n\t\n\t        case '+':\n\t        case '-':\n\t            prec = 9;\n\t            break;\n\t\n\t        case '*':\n\t        case '/':\n\t        case '%':\n\t            prec = 11;\n\t            break;\n\t\n\t        default:\n\t            break;\n\t        }\n\t\n\t        return prec;\n\t    }\n\t\n\t    // 11.5 Multiplicative Operators\n\t    // 11.6 Additive Operators\n\t    // 11.7 Bitwise Shift Operators\n\t    // 11.8 Relational Operators\n\t    // 11.9 Equality Operators\n\t    // 11.10 Binary Bitwise Operators\n\t    // 11.11 Binary Logical Operators\n\t\n\t    function parseBinaryExpression() {\n\t        var marker, markers, expr, token, prec, stack, right, operator, left, i;\n\t\n\t        marker = lookahead;\n\t        left = parseUnaryExpression();\n\t\n\t        token = lookahead;\n\t        prec = binaryPrecedence(token, state.allowIn);\n\t        if (prec === 0) {\n\t            return left;\n\t        }\n\t        token.prec = prec;\n\t        lex();\n\t\n\t        markers = [marker, lookahead];\n\t        right = parseUnaryExpression();\n\t\n\t        stack = [left, token, right];\n\t\n\t        while ((prec = binaryPrecedence(lookahead, state.allowIn)) > 0) {\n\t\n\t            // Reduce: make a binary expression from the three topmost entries.\n\t            while ((stack.length > 2) && (prec <= stack[stack.length - 2].prec)) {\n\t                right = stack.pop();\n\t                operator = stack.pop().value;\n\t                left = stack.pop();\n\t                expr = delegate.createBinaryExpression(operator, left, right);\n\t                markers.pop();\n\t                marker = markers[markers.length - 1];\n\t                delegate.markEnd(expr, marker);\n\t                stack.push(expr);\n\t            }\n\t\n\t            // Shift.\n\t            token = lex();\n\t            token.prec = prec;\n\t            stack.push(token);\n\t            markers.push(lookahead);\n\t            expr = parseUnaryExpression();\n\t            stack.push(expr);\n\t        }\n\t\n\t        // Final reduce to clean-up the stack.\n\t        i = stack.length - 1;\n\t        expr = stack[i];\n\t        markers.pop();\n\t        while (i > 1) {\n\t            expr = delegate.createBinaryExpression(stack[i - 1].value, stack[i - 2], expr);\n\t            i -= 2;\n\t            marker = markers.pop();\n\t            delegate.markEnd(expr, marker);\n\t        }\n\t\n\t        return expr;\n\t    }\n\t\n\t\n\t    // 11.12 Conditional Operator\n\t\n\t    function parseConditionalExpression() {\n\t        var expr, previousAllowIn, consequent, alternate, startToken;\n\t\n\t        startToken = lookahead;\n\t\n\t        expr = parseBinaryExpression();\n\t\n\t        if (match('?')) {\n\t            lex();\n\t            previousAllowIn = state.allowIn;\n\t            state.allowIn = true;\n\t            consequent = parseAssignmentExpression();\n\t            state.allowIn = previousAllowIn;\n\t            expect(':');\n\t            alternate = parseAssignmentExpression();\n\t\n\t            expr = delegate.createConditionalExpression(expr, consequent, alternate);\n\t            delegate.markEnd(expr, startToken);\n\t        }\n\t\n\t        return expr;\n\t    }\n\t\n\t    // 11.13 Assignment Operators\n\t\n\t    function parseAssignmentExpression() {\n\t        var token, left, right, node, startToken;\n\t\n\t        token = lookahead;\n\t        startToken = lookahead;\n\t\n\t        node = left = parseConditionalExpression();\n\t\n\t        if (matchAssign()) {\n\t            // LeftHandSideExpression\n\t            if (!isLeftHandSide(left)) {\n\t                throwErrorTolerant({}, Messages.InvalidLHSInAssignment);\n\t            }\n\t\n\t            // 11.13.1\n\t            if (strict && left.type === Syntax.Identifier && isRestrictedWord(left.name)) {\n\t                throwErrorTolerant(token, Messages.StrictLHSAssignment);\n\t            }\n\t\n\t            token = lex();\n\t            right = parseAssignmentExpression();\n\t            node = delegate.markEnd(delegate.createAssignmentExpression(token.value, left, right), startToken);\n\t        }\n\t\n\t        return node;\n\t    }\n\t\n\t    // 11.14 Comma Operator\n\t\n\t    function parseExpression() {\n\t        var expr, startToken = lookahead;\n\t\n\t        expr = parseAssignmentExpression();\n\t\n\t        if (match(',')) {\n\t            expr = delegate.createSequenceExpression([ expr ]);\n\t\n\t            while (index < length) {\n\t                if (!match(',')) {\n\t                    break;\n\t                }\n\t                lex();\n\t                expr.expressions.push(parseAssignmentExpression());\n\t            }\n\t\n\t            delegate.markEnd(expr, startToken);\n\t        }\n\t\n\t        return expr;\n\t    }\n\t\n\t    // 12.1 Block\n\t\n\t    function parseStatementList() {\n\t        var list = [],\n\t            statement;\n\t\n\t        while (index < length) {\n\t            if (match('}')) {\n\t                break;\n\t            }\n\t            statement = parseSourceElement();\n\t            if (typeof statement === 'undefined') {\n\t                break;\n\t            }\n\t            list.push(statement);\n\t        }\n\t\n\t        return list;\n\t    }\n\t\n\t    function parseBlock() {\n\t        var block, startToken;\n\t\n\t        startToken = lookahead;\n\t        expect('{');\n\t\n\t        block = parseStatementList();\n\t\n\t        expect('}');\n\t\n\t        return delegate.markEnd(delegate.createBlockStatement(block), startToken);\n\t    }\n\t\n\t    // 12.2 Variable Statement\n\t\n\t    function parseVariableIdentifier() {\n\t        var token, startToken;\n\t\n\t        startToken = lookahead;\n\t        token = lex();\n\t\n\t        if (token.type !== Token.Identifier) {\n\t            throwUnexpected(token);\n\t        }\n\t\n\t        return delegate.markEnd(delegate.createIdentifier(token.value), startToken);\n\t    }\n\t\n\t    function parseVariableDeclaration(kind) {\n\t        var init = null, id, startToken;\n\t\n\t        startToken = lookahead;\n\t        id = parseVariableIdentifier();\n\t\n\t        // 12.2.1\n\t        if (strict && isRestrictedWord(id.name)) {\n\t            throwErrorTolerant({}, Messages.StrictVarName);\n\t        }\n\t\n\t        if (kind === 'const') {\n\t            expect('=');\n\t            init = parseAssignmentExpression();\n\t        } else if (match('=')) {\n\t            lex();\n\t            init = parseAssignmentExpression();\n\t        }\n\t\n\t        return delegate.markEnd(delegate.createVariableDeclarator(id, init), startToken);\n\t    }\n\t\n\t    function parseVariableDeclarationList(kind) {\n\t        var list = [];\n\t\n\t        do {\n\t            list.push(parseVariableDeclaration(kind));\n\t            if (!match(',')) {\n\t                break;\n\t            }\n\t            lex();\n\t        } while (index < length);\n\t\n\t        return list;\n\t    }\n\t\n\t    function parseVariableStatement() {\n\t        var declarations;\n\t\n\t        expectKeyword('var');\n\t\n\t        declarations = parseVariableDeclarationList();\n\t\n\t        consumeSemicolon();\n\t\n\t        return delegate.createVariableDeclaration(declarations, 'var');\n\t    }\n\t\n\t    // kind may be `const` or `let`\n\t    // Both are experimental and not in the specification yet.\n\t    // see http://wiki.ecmascript.org/doku.php?id=harmony:const\n\t    // and http://wiki.ecmascript.org/doku.php?id=harmony:let\n\t    function parseConstLetDeclaration(kind) {\n\t        var declarations, startToken;\n\t\n\t        startToken = lookahead;\n\t\n\t        expectKeyword(kind);\n\t\n\t        declarations = parseVariableDeclarationList(kind);\n\t\n\t        consumeSemicolon();\n\t\n\t        return delegate.markEnd(delegate.createVariableDeclaration(declarations, kind), startToken);\n\t    }\n\t\n\t    // 12.3 Empty Statement\n\t\n\t    function parseEmptyStatement() {\n\t        expect(';');\n\t        return delegate.createEmptyStatement();\n\t    }\n\t\n\t    // 12.4 Expression Statement\n\t\n\t    function parseExpressionStatement() {\n\t        var expr = parseExpression();\n\t        consumeSemicolon();\n\t        return delegate.createExpressionStatement(expr);\n\t    }\n\t\n\t    // 12.5 If statement\n\t\n\t    function parseIfStatement() {\n\t        var test, consequent, alternate;\n\t\n\t        expectKeyword('if');\n\t\n\t        expect('(');\n\t\n\t        test = parseExpression();\n\t\n\t        expect(')');\n\t\n\t        consequent = parseStatement();\n\t\n\t        if (matchKeyword('else')) {\n\t            lex();\n\t            alternate = parseStatement();\n\t        } else {\n\t            alternate = null;\n\t        }\n\t\n\t        return delegate.createIfStatement(test, consequent, alternate);\n\t    }\n\t\n\t    // 12.6 Iteration Statements\n\t\n\t    function parseDoWhileStatement() {\n\t        var body, test, oldInIteration;\n\t\n\t        expectKeyword('do');\n\t\n\t        oldInIteration = state.inIteration;\n\t        state.inIteration = true;\n\t\n\t        body = parseStatement();\n\t\n\t        state.inIteration = oldInIteration;\n\t\n\t        expectKeyword('while');\n\t\n\t        expect('(');\n\t\n\t        test = parseExpression();\n\t\n\t        expect(')');\n\t\n\t        if (match(';')) {\n\t            lex();\n\t        }\n\t\n\t        return delegate.createDoWhileStatement(body, test);\n\t    }\n\t\n\t    function parseWhileStatement() {\n\t        var test, body, oldInIteration;\n\t\n\t        expectKeyword('while');\n\t\n\t        expect('(');\n\t\n\t        test = parseExpression();\n\t\n\t        expect(')');\n\t\n\t        oldInIteration = state.inIteration;\n\t        state.inIteration = true;\n\t\n\t        body = parseStatement();\n\t\n\t        state.inIteration = oldInIteration;\n\t\n\t        return delegate.createWhileStatement(test, body);\n\t    }\n\t\n\t    function parseForVariableDeclaration() {\n\t        var token, declarations, startToken;\n\t\n\t        startToken = lookahead;\n\t        token = lex();\n\t        declarations = parseVariableDeclarationList();\n\t\n\t        return delegate.markEnd(delegate.createVariableDeclaration(declarations, token.value), startToken);\n\t    }\n\t\n\t    function parseForStatement() {\n\t        var init, test, update, left, right, body, oldInIteration, previousAllowIn = state.allowIn;\n\t\n\t        init = test = update = null;\n\t\n\t        expectKeyword('for');\n\t\n\t        expect('(');\n\t\n\t        if (match(';')) {\n\t            lex();\n\t        } else {\n\t            if (matchKeyword('var') || matchKeyword('let')) {\n\t                state.allowIn = false;\n\t                init = parseForVariableDeclaration();\n\t                state.allowIn = previousAllowIn;\n\t\n\t                if (init.declarations.length === 1 && matchKeyword('in')) {\n\t                    lex();\n\t                    left = init;\n\t                    right = parseExpression();\n\t                    init = null;\n\t                }\n\t            } else {\n\t                state.allowIn = false;\n\t                init = parseExpression();\n\t                state.allowIn = previousAllowIn;\n\t\n\t                if (matchKeyword('in')) {\n\t                    // LeftHandSideExpression\n\t                    if (!isLeftHandSide(init)) {\n\t                        throwErrorTolerant({}, Messages.InvalidLHSInForIn);\n\t                    }\n\t\n\t                    lex();\n\t                    left = init;\n\t                    right = parseExpression();\n\t                    init = null;\n\t                }\n\t            }\n\t\n\t            if (typeof left === 'undefined') {\n\t                expect(';');\n\t            }\n\t        }\n\t\n\t        if (typeof left === 'undefined') {\n\t\n\t            if (!match(';')) {\n\t                test = parseExpression();\n\t            }\n\t            expect(';');\n\t\n\t            if (!match(')')) {\n\t                update = parseExpression();\n\t            }\n\t        }\n\t\n\t        expect(')');\n\t\n\t        oldInIteration = state.inIteration;\n\t        state.inIteration = true;\n\t\n\t        body = parseStatement();\n\t\n\t        state.inIteration = oldInIteration;\n\t\n\t        return (typeof left === 'undefined') ?\n\t                delegate.createForStatement(init, test, update, body) :\n\t                delegate.createForInStatement(left, right, body);\n\t    }\n\t\n\t    // 12.7 The continue statement\n\t\n\t    function parseContinueStatement() {\n\t        var label = null, key;\n\t\n\t        expectKeyword('continue');\n\t\n\t        // Optimize the most common form: 'continue;'.\n\t        if (source.charCodeAt(index) === 0x3B) {\n\t            lex();\n\t\n\t            if (!state.inIteration) {\n\t                throwError({}, Messages.IllegalContinue);\n\t            }\n\t\n\t            return delegate.createContinueStatement(null);\n\t        }\n\t\n\t        if (peekLineTerminator()) {\n\t            if (!state.inIteration) {\n\t                throwError({}, Messages.IllegalContinue);\n\t            }\n\t\n\t            return delegate.createContinueStatement(null);\n\t        }\n\t\n\t        if (lookahead.type === Token.Identifier) {\n\t            label = parseVariableIdentifier();\n\t\n\t            key = '$' + label.name;\n\t            if (!Object.prototype.hasOwnProperty.call(state.labelSet, key)) {\n\t                throwError({}, Messages.UnknownLabel, label.name);\n\t            }\n\t        }\n\t\n\t        consumeSemicolon();\n\t\n\t        if (label === null && !state.inIteration) {\n\t            throwError({}, Messages.IllegalContinue);\n\t        }\n\t\n\t        return delegate.createContinueStatement(label);\n\t    }\n\t\n\t    // 12.8 The break statement\n\t\n\t    function parseBreakStatement() {\n\t        var label = null, key;\n\t\n\t        expectKeyword('break');\n\t\n\t        // Catch the very common case first: immediately a semicolon (U+003B).\n\t        if (source.charCodeAt(index) === 0x3B) {\n\t            lex();\n\t\n\t            if (!(state.inIteration || state.inSwitch)) {\n\t                throwError({}, Messages.IllegalBreak);\n\t            }\n\t\n\t            return delegate.createBreakStatement(null);\n\t        }\n\t\n\t        if (peekLineTerminator()) {\n\t            if (!(state.inIteration || state.inSwitch)) {\n\t                throwError({}, Messages.IllegalBreak);\n\t            }\n\t\n\t            return delegate.createBreakStatement(null);\n\t        }\n\t\n\t        if (lookahead.type === Token.Identifier) {\n\t            label = parseVariableIdentifier();\n\t\n\t            key = '$' + label.name;\n\t            if (!Object.prototype.hasOwnProperty.call(state.labelSet, key)) {\n\t                throwError({}, Messages.UnknownLabel, label.name);\n\t            }\n\t        }\n\t\n\t        consumeSemicolon();\n\t\n\t        if (label === null && !(state.inIteration || state.inSwitch)) {\n\t            throwError({}, Messages.IllegalBreak);\n\t        }\n\t\n\t        return delegate.createBreakStatement(label);\n\t    }\n\t\n\t    // 12.9 The return statement\n\t\n\t    function parseReturnStatement() {\n\t        var argument = null;\n\t\n\t        expectKeyword('return');\n\t\n\t        if (!state.inFunctionBody) {\n\t            throwErrorTolerant({}, Messages.IllegalReturn);\n\t        }\n\t\n\t        // 'return' followed by a space and an identifier is very common.\n\t        if (source.charCodeAt(index) === 0x20) {\n\t            if (isIdentifierStart(source.charCodeAt(index + 1))) {\n\t                argument = parseExpression();\n\t                consumeSemicolon();\n\t                return delegate.createReturnStatement(argument);\n\t            }\n\t        }\n\t\n\t        if (peekLineTerminator()) {\n\t            return delegate.createReturnStatement(null);\n\t        }\n\t\n\t        if (!match(';')) {\n\t            if (!match('}') && lookahead.type !== Token.EOF) {\n\t                argument = parseExpression();\n\t            }\n\t        }\n\t\n\t        consumeSemicolon();\n\t\n\t        return delegate.createReturnStatement(argument);\n\t    }\n\t\n\t    // 12.10 The with statement\n\t\n\t    function parseWithStatement() {\n\t        var object, body;\n\t\n\t        if (strict) {\n\t            // TODO(ikarienator): Should we update the test cases instead?\n\t            skipComment();\n\t            throwErrorTolerant({}, Messages.StrictModeWith);\n\t        }\n\t\n\t        expectKeyword('with');\n\t\n\t        expect('(');\n\t\n\t        object = parseExpression();\n\t\n\t        expect(')');\n\t\n\t        body = parseStatement();\n\t\n\t        return delegate.createWithStatement(object, body);\n\t    }\n\t\n\t    // 12.10 The swith statement\n\t\n\t    function parseSwitchCase() {\n\t        var test, consequent = [], statement, startToken;\n\t\n\t        startToken = lookahead;\n\t        if (matchKeyword('default')) {\n\t            lex();\n\t            test = null;\n\t        } else {\n\t            expectKeyword('case');\n\t            test = parseExpression();\n\t        }\n\t        expect(':');\n\t\n\t        while (index < length) {\n\t            if (match('}') || matchKeyword('default') || matchKeyword('case')) {\n\t                break;\n\t            }\n\t            statement = parseStatement();\n\t            consequent.push(statement);\n\t        }\n\t\n\t        return delegate.markEnd(delegate.createSwitchCase(test, consequent), startToken);\n\t    }\n\t\n\t    function parseSwitchStatement() {\n\t        var discriminant, cases, clause, oldInSwitch, defaultFound;\n\t\n\t        expectKeyword('switch');\n\t\n\t        expect('(');\n\t\n\t        discriminant = parseExpression();\n\t\n\t        expect(')');\n\t\n\t        expect('{');\n\t\n\t        cases = [];\n\t\n\t        if (match('}')) {\n\t            lex();\n\t            return delegate.createSwitchStatement(discriminant, cases);\n\t        }\n\t\n\t        oldInSwitch = state.inSwitch;\n\t        state.inSwitch = true;\n\t        defaultFound = false;\n\t\n\t        while (index < length) {\n\t            if (match('}')) {\n\t                break;\n\t            }\n\t            clause = parseSwitchCase();\n\t            if (clause.test === null) {\n\t                if (defaultFound) {\n\t                    throwError({}, Messages.MultipleDefaultsInSwitch);\n\t                }\n\t                defaultFound = true;\n\t            }\n\t            cases.push(clause);\n\t        }\n\t\n\t        state.inSwitch = oldInSwitch;\n\t\n\t        expect('}');\n\t\n\t        return delegate.createSwitchStatement(discriminant, cases);\n\t    }\n\t\n\t    // 12.13 The throw statement\n\t\n\t    function parseThrowStatement() {\n\t        var argument;\n\t\n\t        expectKeyword('throw');\n\t\n\t        if (peekLineTerminator()) {\n\t            throwError({}, Messages.NewlineAfterThrow);\n\t        }\n\t\n\t        argument = parseExpression();\n\t\n\t        consumeSemicolon();\n\t\n\t        return delegate.createThrowStatement(argument);\n\t    }\n\t\n\t    // 12.14 The try statement\n\t\n\t    function parseCatchClause() {\n\t        var param, body, startToken;\n\t\n\t        startToken = lookahead;\n\t        expectKeyword('catch');\n\t\n\t        expect('(');\n\t        if (match(')')) {\n\t            throwUnexpected(lookahead);\n\t        }\n\t\n\t        param = parseVariableIdentifier();\n\t        // 12.14.1\n\t        if (strict && isRestrictedWord(param.name)) {\n\t            throwErrorTolerant({}, Messages.StrictCatchVariable);\n\t        }\n\t\n\t        expect(')');\n\t        body = parseBlock();\n\t        return delegate.markEnd(delegate.createCatchClause(param, body), startToken);\n\t    }\n\t\n\t    function parseTryStatement() {\n\t        var block, handlers = [], finalizer = null;\n\t\n\t        expectKeyword('try');\n\t\n\t        block = parseBlock();\n\t\n\t        if (matchKeyword('catch')) {\n\t            handlers.push(parseCatchClause());\n\t        }\n\t\n\t        if (matchKeyword('finally')) {\n\t            lex();\n\t            finalizer = parseBlock();\n\t        }\n\t\n\t        if (handlers.length === 0 && !finalizer) {\n\t            throwError({}, Messages.NoCatchOrFinally);\n\t        }\n\t\n\t        return delegate.createTryStatement(block, [], handlers, finalizer);\n\t    }\n\t\n\t    // 12.15 The debugger statement\n\t\n\t    function parseDebuggerStatement() {\n\t        expectKeyword('debugger');\n\t\n\t        consumeSemicolon();\n\t\n\t        return delegate.createDebuggerStatement();\n\t    }\n\t\n\t    // 12 Statements\n\t\n\t    function parseStatement() {\n\t        var type = lookahead.type,\n\t            expr,\n\t            labeledBody,\n\t            key,\n\t            startToken;\n\t\n\t        if (type === Token.EOF) {\n\t            throwUnexpected(lookahead);\n\t        }\n\t\n\t        if (type === Token.Punctuator && lookahead.value === '{') {\n\t            return parseBlock();\n\t        }\n\t\n\t        startToken = lookahead;\n\t\n\t        if (type === Token.Punctuator) {\n\t            switch (lookahead.value) {\n\t            case ';':\n\t                return delegate.markEnd(parseEmptyStatement(), startToken);\n\t            case '(':\n\t                return delegate.markEnd(parseExpressionStatement(), startToken);\n\t            default:\n\t                break;\n\t            }\n\t        }\n\t\n\t        if (type === Token.Keyword) {\n\t            switch (lookahead.value) {\n\t            case 'break':\n\t                return delegate.markEnd(parseBreakStatement(), startToken);\n\t            case 'continue':\n\t                return delegate.markEnd(parseContinueStatement(), startToken);\n\t            case 'debugger':\n\t                return delegate.markEnd(parseDebuggerStatement(), startToken);\n\t            case 'do':\n\t                return delegate.markEnd(parseDoWhileStatement(), startToken);\n\t            case 'for':\n\t                return delegate.markEnd(parseForStatement(), startToken);\n\t            case 'function':\n\t                return delegate.markEnd(parseFunctionDeclaration(), startToken);\n\t            case 'if':\n\t                return delegate.markEnd(parseIfStatement(), startToken);\n\t            case 'return':\n\t                return delegate.markEnd(parseReturnStatement(), startToken);\n\t            case 'switch':\n\t                return delegate.markEnd(parseSwitchStatement(), startToken);\n\t            case 'throw':\n\t                return delegate.markEnd(parseThrowStatement(), startToken);\n\t            case 'try':\n\t                return delegate.markEnd(parseTryStatement(), startToken);\n\t            case 'var':\n\t                return delegate.markEnd(parseVariableStatement(), startToken);\n\t            case 'while':\n\t                return delegate.markEnd(parseWhileStatement(), startToken);\n\t            case 'with':\n\t                return delegate.markEnd(parseWithStatement(), startToken);\n\t            default:\n\t                break;\n\t            }\n\t        }\n\t\n\t        expr = parseExpression();\n\t\n\t        // 12.12 Labelled Statements\n\t        if ((expr.type === Syntax.Identifier) && match(':')) {\n\t            lex();\n\t\n\t            key = '$' + expr.name;\n\t            if (Object.prototype.hasOwnProperty.call(state.labelSet, key)) {\n\t                throwError({}, Messages.Redeclaration, 'Label', expr.name);\n\t            }\n\t\n\t            state.labelSet[key] = true;\n\t            labeledBody = parseStatement();\n\t            delete state.labelSet[key];\n\t            return delegate.markEnd(delegate.createLabeledStatement(expr, labeledBody), startToken);\n\t        }\n\t\n\t        consumeSemicolon();\n\t\n\t        return delegate.markEnd(delegate.createExpressionStatement(expr), startToken);\n\t    }\n\t\n\t    // 13 Function Definition\n\t\n\t    function parseFunctionSourceElements() {\n\t        var sourceElement, sourceElements = [], token, directive, firstRestricted,\n\t            oldLabelSet, oldInIteration, oldInSwitch, oldInFunctionBody, startToken;\n\t\n\t        startToken = lookahead;\n\t        expect('{');\n\t\n\t        while (index < length) {\n\t            if (lookahead.type !== Token.StringLiteral) {\n\t                break;\n\t            }\n\t            token = lookahead;\n\t\n\t            sourceElement = parseSourceElement();\n\t            sourceElements.push(sourceElement);\n\t            if (sourceElement.expression.type !== Syntax.Literal) {\n\t                // this is not directive\n\t                break;\n\t            }\n\t            directive = source.slice(token.start + 1, token.end - 1);\n\t            if (directive === 'use strict') {\n\t                strict = true;\n\t                if (firstRestricted) {\n\t                    throwErrorTolerant(firstRestricted, Messages.StrictOctalLiteral);\n\t                }\n\t            } else {\n\t                if (!firstRestricted && token.octal) {\n\t                    firstRestricted = token;\n\t                }\n\t            }\n\t        }\n\t\n\t        oldLabelSet = state.labelSet;\n\t        oldInIteration = state.inIteration;\n\t        oldInSwitch = state.inSwitch;\n\t        oldInFunctionBody = state.inFunctionBody;\n\t\n\t        state.labelSet = {};\n\t        state.inIteration = false;\n\t        state.inSwitch = false;\n\t        state.inFunctionBody = true;\n\t\n\t        while (index < length) {\n\t            if (match('}')) {\n\t                break;\n\t            }\n\t            sourceElement = parseSourceElement();\n\t            if (typeof sourceElement === 'undefined') {\n\t                break;\n\t            }\n\t            sourceElements.push(sourceElement);\n\t        }\n\t\n\t        expect('}');\n\t\n\t        state.labelSet = oldLabelSet;\n\t        state.inIteration = oldInIteration;\n\t        state.inSwitch = oldInSwitch;\n\t        state.inFunctionBody = oldInFunctionBody;\n\t\n\t        return delegate.markEnd(delegate.createBlockStatement(sourceElements), startToken);\n\t    }\n\t\n\t    function parseParams(firstRestricted) {\n\t        var param, params = [], token, stricted, paramSet, key, message;\n\t        expect('(');\n\t\n\t        if (!match(')')) {\n\t            paramSet = {};\n\t            while (index < length) {\n\t                token = lookahead;\n\t                param = parseVariableIdentifier();\n\t                key = '$' + token.value;\n\t                if (strict) {\n\t                    if (isRestrictedWord(token.value)) {\n\t                        stricted = token;\n\t                        message = Messages.StrictParamName;\n\t                    }\n\t                    if (Object.prototype.hasOwnProperty.call(paramSet, key)) {\n\t                        stricted = token;\n\t                        message = Messages.StrictParamDupe;\n\t                    }\n\t                } else if (!firstRestricted) {\n\t                    if (isRestrictedWord(token.value)) {\n\t                        firstRestricted = token;\n\t                        message = Messages.StrictParamName;\n\t                    } else if (isStrictModeReservedWord(token.value)) {\n\t                        firstRestricted = token;\n\t                        message = Messages.StrictReservedWord;\n\t                    } else if (Object.prototype.hasOwnProperty.call(paramSet, key)) {\n\t                        firstRestricted = token;\n\t                        message = Messages.StrictParamDupe;\n\t                    }\n\t                }\n\t                params.push(param);\n\t                paramSet[key] = true;\n\t                if (match(')')) {\n\t                    break;\n\t                }\n\t                expect(',');\n\t            }\n\t        }\n\t\n\t        expect(')');\n\t\n\t        return {\n\t            params: params,\n\t            stricted: stricted,\n\t            firstRestricted: firstRestricted,\n\t            message: message\n\t        };\n\t    }\n\t\n\t    function parseFunctionDeclaration() {\n\t        var id, params = [], body, token, stricted, tmp, firstRestricted, message, previousStrict, startToken;\n\t\n\t        startToken = lookahead;\n\t\n\t        expectKeyword('function');\n\t        token = lookahead;\n\t        id = parseVariableIdentifier();\n\t        if (strict) {\n\t            if (isRestrictedWord(token.value)) {\n\t                throwErrorTolerant(token, Messages.StrictFunctionName);\n\t            }\n\t        } else {\n\t            if (isRestrictedWord(token.value)) {\n\t                firstRestricted = token;\n\t                message = Messages.StrictFunctionName;\n\t            } else if (isStrictModeReservedWord(token.value)) {\n\t                firstRestricted = token;\n\t                message = Messages.StrictReservedWord;\n\t            }\n\t        }\n\t\n\t        tmp = parseParams(firstRestricted);\n\t        params = tmp.params;\n\t        stricted = tmp.stricted;\n\t        firstRestricted = tmp.firstRestricted;\n\t        if (tmp.message) {\n\t            message = tmp.message;\n\t        }\n\t\n\t        previousStrict = strict;\n\t        body = parseFunctionSourceElements();\n\t        if (strict && firstRestricted) {\n\t            throwError(firstRestricted, message);\n\t        }\n\t        if (strict && stricted) {\n\t            throwErrorTolerant(stricted, message);\n\t        }\n\t        strict = previousStrict;\n\t\n\t        return delegate.markEnd(delegate.createFunctionDeclaration(id, params, [], body), startToken);\n\t    }\n\t\n\t    function parseFunctionExpression() {\n\t        var token, id = null, stricted, firstRestricted, message, tmp, params = [], body, previousStrict, startToken;\n\t\n\t        startToken = lookahead;\n\t        expectKeyword('function');\n\t\n\t        if (!match('(')) {\n\t            token = lookahead;\n\t            id = parseVariableIdentifier();\n\t            if (strict) {\n\t                if (isRestrictedWord(token.value)) {\n\t                    throwErrorTolerant(token, Messages.StrictFunctionName);\n\t                }\n\t            } else {\n\t                if (isRestrictedWord(token.value)) {\n\t                    firstRestricted = token;\n\t                    message = Messages.StrictFunctionName;\n\t                } else if (isStrictModeReservedWord(token.value)) {\n\t                    firstRestricted = token;\n\t                    message = Messages.StrictReservedWord;\n\t                }\n\t            }\n\t        }\n\t\n\t        tmp = parseParams(firstRestricted);\n\t        params = tmp.params;\n\t        stricted = tmp.stricted;\n\t        firstRestricted = tmp.firstRestricted;\n\t        if (tmp.message) {\n\t            message = tmp.message;\n\t        }\n\t\n\t        previousStrict = strict;\n\t        body = parseFunctionSourceElements();\n\t        if (strict && firstRestricted) {\n\t            throwError(firstRestricted, message);\n\t        }\n\t        if (strict && stricted) {\n\t            throwErrorTolerant(stricted, message);\n\t        }\n\t        strict = previousStrict;\n\t\n\t        return delegate.markEnd(delegate.createFunctionExpression(id, params, [], body), startToken);\n\t    }\n\t\n\t    // 14 Program\n\t\n\t    function parseSourceElement() {\n\t        if (lookahead.type === Token.Keyword) {\n\t            switch (lookahead.value) {\n\t            case 'const':\n\t            case 'let':\n\t                return parseConstLetDeclaration(lookahead.value);\n\t            case 'function':\n\t                return parseFunctionDeclaration();\n\t            default:\n\t                return parseStatement();\n\t            }\n\t        }\n\t\n\t        if (lookahead.type !== Token.EOF) {\n\t            return parseStatement();\n\t        }\n\t    }\n\t\n\t    function parseSourceElements() {\n\t        var sourceElement, sourceElements = [], token, directive, firstRestricted;\n\t\n\t        while (index < length) {\n\t            token = lookahead;\n\t            if (token.type !== Token.StringLiteral) {\n\t                break;\n\t            }\n\t\n\t            sourceElement = parseSourceElement();\n\t            sourceElements.push(sourceElement);\n\t            if (sourceElement.expression.type !== Syntax.Literal) {\n\t                // this is not directive\n\t                break;\n\t            }\n\t            directive = source.slice(token.start + 1, token.end - 1);\n\t            if (directive === 'use strict') {\n\t                strict = true;\n\t                if (firstRestricted) {\n\t                    throwErrorTolerant(firstRestricted, Messages.StrictOctalLiteral);\n\t                }\n\t            } else {\n\t                if (!firstRestricted && token.octal) {\n\t                    firstRestricted = token;\n\t                }\n\t            }\n\t        }\n\t\n\t        while (index < length) {\n\t            sourceElement = parseSourceElement();\n\t            /* istanbul ignore if */\n\t            if (typeof sourceElement === 'undefined') {\n\t                break;\n\t            }\n\t            sourceElements.push(sourceElement);\n\t        }\n\t        return sourceElements;\n\t    }\n\t\n\t    function parseProgram() {\n\t        var body, startToken;\n\t\n\t        skipComment();\n\t        peek();\n\t        startToken = lookahead;\n\t        strict = false;\n\t\n\t        body = parseSourceElements();\n\t        return delegate.markEnd(delegate.createProgram(body), startToken);\n\t    }\n\t\n\t    function filterTokenLocation() {\n\t        var i, entry, token, tokens = [];\n\t\n\t        for (i = 0; i < extra.tokens.length; ++i) {\n\t            entry = extra.tokens[i];\n\t            token = {\n\t                type: entry.type,\n\t                value: entry.value\n\t            };\n\t            if (extra.range) {\n\t                token.range = entry.range;\n\t            }\n\t            if (extra.loc) {\n\t                token.loc = entry.loc;\n\t            }\n\t            tokens.push(token);\n\t        }\n\t\n\t        extra.tokens = tokens;\n\t    }\n\t\n\t    function tokenize(code, options) {\n\t        var toString,\n\t            token,\n\t            tokens;\n\t\n\t        toString = String;\n\t        if (typeof code !== 'string' && !(code instanceof String)) {\n\t            code = toString(code);\n\t        }\n\t\n\t        delegate = SyntaxTreeDelegate;\n\t        source = code;\n\t        index = 0;\n\t        lineNumber = (source.length > 0) ? 1 : 0;\n\t        lineStart = 0;\n\t        length = source.length;\n\t        lookahead = null;\n\t        state = {\n\t            allowIn: true,\n\t            labelSet: {},\n\t            inFunctionBody: false,\n\t            inIteration: false,\n\t            inSwitch: false,\n\t            lastCommentStart: -1\n\t        };\n\t\n\t        extra = {};\n\t\n\t        // Options matching.\n\t        options = options || {};\n\t\n\t        // Of course we collect tokens here.\n\t        options.tokens = true;\n\t        extra.tokens = [];\n\t        extra.tokenize = true;\n\t        // The following two fields are necessary to compute the Regex tokens.\n\t        extra.openParenToken = -1;\n\t        extra.openCurlyToken = -1;\n\t\n\t        extra.range = (typeof options.range === 'boolean') && options.range;\n\t        extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\t\n\t        if (typeof options.comment === 'boolean' && options.comment) {\n\t            extra.comments = [];\n\t        }\n\t        if (typeof options.tolerant === 'boolean' && options.tolerant) {\n\t            extra.errors = [];\n\t        }\n\t\n\t        try {\n\t            peek();\n\t            if (lookahead.type === Token.EOF) {\n\t                return extra.tokens;\n\t            }\n\t\n\t            token = lex();\n\t            while (lookahead.type !== Token.EOF) {\n\t                try {\n\t                    token = lex();\n\t                } catch (lexError) {\n\t                    token = lookahead;\n\t                    if (extra.errors) {\n\t                        extra.errors.push(lexError);\n\t                        // We have to break on the first error\n\t                        // to avoid infinite loops.\n\t                        break;\n\t                    } else {\n\t                        throw lexError;\n\t                    }\n\t                }\n\t            }\n\t\n\t            filterTokenLocation();\n\t            tokens = extra.tokens;\n\t            if (typeof extra.comments !== 'undefined') {\n\t                tokens.comments = extra.comments;\n\t            }\n\t            if (typeof extra.errors !== 'undefined') {\n\t                tokens.errors = extra.errors;\n\t            }\n\t        } catch (e) {\n\t            throw e;\n\t        } finally {\n\t            extra = {};\n\t        }\n\t        return tokens;\n\t    }\n\t\n\t    function parse(code, options) {\n\t        var program, toString;\n\t\n\t        toString = String;\n\t        if (typeof code !== 'string' && !(code instanceof String)) {\n\t            code = toString(code);\n\t        }\n\t\n\t        delegate = SyntaxTreeDelegate;\n\t        source = code;\n\t        index = 0;\n\t        lineNumber = (source.length > 0) ? 1 : 0;\n\t        lineStart = 0;\n\t        length = source.length;\n\t        lookahead = null;\n\t        state = {\n\t            allowIn: true,\n\t            labelSet: {},\n\t            inFunctionBody: false,\n\t            inIteration: false,\n\t            inSwitch: false,\n\t            lastCommentStart: -1\n\t        };\n\t\n\t        extra = {};\n\t        if (typeof options !== 'undefined') {\n\t            extra.range = (typeof options.range === 'boolean') && options.range;\n\t            extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\t            extra.attachComment = (typeof options.attachComment === 'boolean') && options.attachComment;\n\t\n\t            if (extra.loc && options.source !== null && options.source !== undefined) {\n\t                extra.source = toString(options.source);\n\t            }\n\t\n\t            if (typeof options.tokens === 'boolean' && options.tokens) {\n\t                extra.tokens = [];\n\t            }\n\t            if (typeof options.comment === 'boolean' && options.comment) {\n\t                extra.comments = [];\n\t            }\n\t            if (typeof options.tolerant === 'boolean' && options.tolerant) {\n\t                extra.errors = [];\n\t            }\n\t            if (extra.attachComment) {\n\t                extra.range = true;\n\t                extra.comments = [];\n\t                extra.bottomRightStack = [];\n\t                extra.trailingComments = [];\n\t                extra.leadingComments = [];\n\t            }\n\t        }\n\t\n\t        try {\n\t            program = parseProgram();\n\t            if (typeof extra.comments !== 'undefined') {\n\t                program.comments = extra.comments;\n\t            }\n\t            if (typeof extra.tokens !== 'undefined') {\n\t                filterTokenLocation();\n\t                program.tokens = extra.tokens;\n\t            }\n\t            if (typeof extra.errors !== 'undefined') {\n\t                program.errors = extra.errors;\n\t            }\n\t        } catch (e) {\n\t            throw e;\n\t        } finally {\n\t            extra = {};\n\t        }\n\t\n\t        return program;\n\t    }\n\t\n\t    // Sync with *.json manifests.\n\t    exports.version = '1.2.5';\n\t\n\t    exports.tokenize = tokenize;\n\t\n\t    exports.parse = parse;\n\t\n\t    // Deep copy.\n\t   /* istanbul ignore next */\n\t    exports.Syntax = (function () {\n\t        var name, types = {};\n\t\n\t        if (typeof Object.create === 'function') {\n\t            types = Object.create(null);\n\t        }\n\t\n\t        for (name in Syntax) {\n\t            if (Syntax.hasOwnProperty(name)) {\n\t                types[name] = Syntax[name];\n\t            }\n\t        }\n\t\n\t        if (typeof Object.freeze === 'function') {\n\t            Object.freeze(types);\n\t        }\n\t\n\t        return types;\n\t    }());\n\t\n\t}));\n\t/* vim: set sw=4 ts=4 et tw=80 : */\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t\"use strict\"\n\t\n\tfunction unique_pred(list, compare) {\n\t  var ptr = 1\n\t    , len = list.length\n\t    , a=list[0], b=list[0]\n\t  for(var i=1; i<len; ++i) {\n\t    b = a\n\t    a = list[i]\n\t    if(compare(a, b)) {\n\t      if(i === ptr) {\n\t        ptr++\n\t        continue\n\t      }\n\t      list[ptr++] = a\n\t    }\n\t  }\n\t  list.length = ptr\n\t  return list\n\t}\n\t\n\tfunction unique_eq(list) {\n\t  var ptr = 1\n\t    , len = list.length\n\t    , a=list[0], b = list[0]\n\t  for(var i=1; i<len; ++i, b=a) {\n\t    b = a\n\t    a = list[i]\n\t    if(a !== b) {\n\t      if(i === ptr) {\n\t        ptr++\n\t        continue\n\t      }\n\t      list[ptr++] = a\n\t    }\n\t  }\n\t  list.length = ptr\n\t  return list\n\t}\n\t\n\tfunction unique(list, compare, sorted) {\n\t  if(list.length === 0) {\n\t    return list\n\t  }\n\t  if(compare) {\n\t    if(!sorted) {\n\t      list.sort(compare)\n\t    }\n\t    return unique_pred(list, compare)\n\t  }\n\t  if(!sorted) {\n\t    list.sort()\n\t  }\n\t  return unique_eq(list)\n\t}\n\t\n\tmodule.exports = unique\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\"\r\n\t\r\n\tvar createThunk = __webpack_require__(9)\r\n\t\r\n\tfunction Procedure() {\r\n\t  this.argTypes = []\r\n\t  this.shimArgs = []\r\n\t  this.arrayArgs = []\r\n\t  this.arrayBlockIndices = []\r\n\t  this.scalarArgs = []\r\n\t  this.offsetArgs = []\r\n\t  this.offsetArgIndex = []\r\n\t  this.indexArgs = []\r\n\t  this.shapeArgs = []\r\n\t  this.funcName = \"\"\r\n\t  this.pre = null\r\n\t  this.body = null\r\n\t  this.post = null\r\n\t  this.debug = false\r\n\t}\r\n\t\r\n\tfunction compileCwise(user_args) {\r\n\t  //Create procedure\r\n\t  var proc = new Procedure()\r\n\t  \r\n\t  //Parse blocks\r\n\t  proc.pre    = user_args.pre\r\n\t  proc.body   = user_args.body\r\n\t  proc.post   = user_args.post\r\n\t\r\n\t  //Parse arguments\r\n\t  var proc_args = user_args.args.slice(0)\r\n\t  proc.argTypes = proc_args\r\n\t  for(var i=0; i<proc_args.length; ++i) {\r\n\t    var arg_type = proc_args[i]\r\n\t    if(arg_type === \"array\" || (typeof arg_type === \"object\" && arg_type.blockIndices)) {\r\n\t      proc.argTypes[i] = \"array\"\r\n\t      proc.arrayArgs.push(i)\r\n\t      proc.arrayBlockIndices.push(arg_type.blockIndices ? arg_type.blockIndices : 0)\r\n\t      proc.shimArgs.push(\"array\" + i)\r\n\t      if(i < proc.pre.args.length && proc.pre.args[i].count>0) {\r\n\t        throw new Error(\"cwise: pre() block may not reference array args\")\r\n\t      }\r\n\t      if(i < proc.post.args.length && proc.post.args[i].count>0) {\r\n\t        throw new Error(\"cwise: post() block may not reference array args\")\r\n\t      }\r\n\t    } else if(arg_type === \"scalar\") {\r\n\t      proc.scalarArgs.push(i)\r\n\t      proc.shimArgs.push(\"scalar\" + i)\r\n\t    } else if(arg_type === \"index\") {\r\n\t      proc.indexArgs.push(i)\r\n\t      if(i < proc.pre.args.length && proc.pre.args[i].count > 0) {\r\n\t        throw new Error(\"cwise: pre() block may not reference array index\")\r\n\t      }\r\n\t      if(i < proc.body.args.length && proc.body.args[i].lvalue) {\r\n\t        throw new Error(\"cwise: body() block may not write to array index\")\r\n\t      }\r\n\t      if(i < proc.post.args.length && proc.post.args[i].count > 0) {\r\n\t        throw new Error(\"cwise: post() block may not reference array index\")\r\n\t      }\r\n\t    } else if(arg_type === \"shape\") {\r\n\t      proc.shapeArgs.push(i)\r\n\t      if(i < proc.pre.args.length && proc.pre.args[i].lvalue) {\r\n\t        throw new Error(\"cwise: pre() block may not write to array shape\")\r\n\t      }\r\n\t      if(i < proc.body.args.length && proc.body.args[i].lvalue) {\r\n\t        throw new Error(\"cwise: body() block may not write to array shape\")\r\n\t      }\r\n\t      if(i < proc.post.args.length && proc.post.args[i].lvalue) {\r\n\t        throw new Error(\"cwise: post() block may not write to array shape\")\r\n\t      }\r\n\t    } else if(typeof arg_type === \"object\" && arg_type.offset) {\r\n\t      proc.argTypes[i] = \"offset\"\r\n\t      proc.offsetArgs.push({ array: arg_type.array, offset:arg_type.offset })\r\n\t      proc.offsetArgIndex.push(i)\r\n\t    } else {\r\n\t      throw new Error(\"cwise: Unknown argument type \" + proc_args[i])\r\n\t    }\r\n\t  }\r\n\t  \r\n\t  //Make sure at least one array argument was specified\r\n\t  if(proc.arrayArgs.length <= 0) {\r\n\t    throw new Error(\"cwise: No array arguments specified\")\r\n\t  }\r\n\t  \r\n\t  //Make sure arguments are correct\r\n\t  if(proc.pre.args.length > proc_args.length) {\r\n\t    throw new Error(\"cwise: Too many arguments in pre() block\")\r\n\t  }\r\n\t  if(proc.body.args.length > proc_args.length) {\r\n\t    throw new Error(\"cwise: Too many arguments in body() block\")\r\n\t  }\r\n\t  if(proc.post.args.length > proc_args.length) {\r\n\t    throw new Error(\"cwise: Too many arguments in post() block\")\r\n\t  }\r\n\t\r\n\t  //Check debug flag\r\n\t  proc.debug = !!user_args.printCode || !!user_args.debug\r\n\t  \r\n\t  //Retrieve name\r\n\t  proc.funcName = user_args.funcName || \"cwise\"\r\n\t  \r\n\t  //Read in block size\r\n\t  proc.blockSize = user_args.blockSize || 64\r\n\t\r\n\t  return createThunk(proc)\r\n\t}\r\n\t\r\n\tmodule.exports = compileCwise\r\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\"\r\n\t\r\n\t// The function below is called when constructing a cwise function object, and does the following:\r\n\t// A function object is constructed which accepts as argument a compilation function and returns another function.\r\n\t// It is this other function that is eventually returned by createThunk, and this function is the one that actually\r\n\t// checks whether a certain pattern of arguments has already been used before and compiles new loops as needed.\r\n\t// The compilation passed to the first function object is used for compiling new functions.\r\n\t// Once this function object is created, it is called with compile as argument, where the first argument of compile\r\n\t// is bound to \"proc\" (essentially containing a preprocessed version of the user arguments to cwise).\r\n\t// So createThunk roughly works like this:\r\n\t// function createThunk(proc) {\r\n\t//   var thunk = function(compileBound) {\r\n\t//     var CACHED = {}\r\n\t//     return function(arrays and scalars) {\r\n\t//       if (dtype and order of arrays in CACHED) {\r\n\t//         var func = CACHED[dtype and order of arrays]\r\n\t//       } else {\r\n\t//         var func = CACHED[dtype and order of arrays] = compileBound(dtype and order of arrays)\r\n\t//       }\r\n\t//       return func(arrays and scalars)\r\n\t//     }\r\n\t//   }\r\n\t//   return thunk(compile.bind1(proc))\r\n\t// }\r\n\t\r\n\tvar compile = __webpack_require__(10)\r\n\t\r\n\tfunction createThunk(proc) {\r\n\t  var code = [\"'use strict'\", \"var CACHED={}\"]\r\n\t  var vars = []\r\n\t  var thunkName = proc.funcName + \"_cwise_thunk\"\r\n\t  \r\n\t  //Build thunk\r\n\t  code.push([\"return function \", thunkName, \"(\", proc.shimArgs.join(\",\"), \"){\"].join(\"\"))\r\n\t  var typesig = []\r\n\t  var string_typesig = []\r\n\t  var proc_args = [[\"array\",proc.arrayArgs[0],\".shape.slice(\", // Slice shape so that we only retain the shape over which we iterate (which gets passed to the cwise operator as SS).\r\n\t                    Math.max(0,proc.arrayBlockIndices[0]),proc.arrayBlockIndices[0]<0?(\",\"+proc.arrayBlockIndices[0]+\")\"):\")\"].join(\"\")]\r\n\t  var shapeLengthConditions = [], shapeConditions = []\r\n\t  // Process array arguments\r\n\t  for(var i=0; i<proc.arrayArgs.length; ++i) {\r\n\t    var j = proc.arrayArgs[i]\r\n\t    vars.push([\"t\", j, \"=array\", j, \".dtype,\",\r\n\t               \"r\", j, \"=array\", j, \".order\"].join(\"\"))\r\n\t    typesig.push(\"t\" + j)\r\n\t    typesig.push(\"r\" + j)\r\n\t    string_typesig.push(\"t\"+j)\r\n\t    string_typesig.push(\"r\"+j+\".join()\")\r\n\t    proc_args.push(\"array\" + j + \".data\")\r\n\t    proc_args.push(\"array\" + j + \".stride\")\r\n\t    proc_args.push(\"array\" + j + \".offset|0\")\r\n\t    if (i>0) { // Gather conditions to check for shape equality (ignoring block indices)\r\n\t      shapeLengthConditions.push(\"array\" + proc.arrayArgs[0] + \".shape.length===array\" + j + \".shape.length+\" + (Math.abs(proc.arrayBlockIndices[0])-Math.abs(proc.arrayBlockIndices[i])))\r\n\t      shapeConditions.push(\"array\" + proc.arrayArgs[0] + \".shape[shapeIndex+\" + Math.max(0,proc.arrayBlockIndices[0]) + \"]===array\" + j + \".shape[shapeIndex+\" + Math.max(0,proc.arrayBlockIndices[i]) + \"]\")\r\n\t    }\r\n\t  }\r\n\t  // Check for shape equality\r\n\t  if (proc.arrayArgs.length > 1) {\r\n\t    code.push(\"if (!(\" + shapeLengthConditions.join(\" && \") + \")) throw new Error('cwise: Arrays do not all have the same dimensionality!')\")\r\n\t    code.push(\"for(var shapeIndex=array\" + proc.arrayArgs[0] + \".shape.length-\" + Math.abs(proc.arrayBlockIndices[0]) + \"; shapeIndex-->0;) {\")\r\n\t    code.push(\"if (!(\" + shapeConditions.join(\" && \") + \")) throw new Error('cwise: Arrays do not all have the same shape!')\")\r\n\t    code.push(\"}\")\r\n\t  }\r\n\t  // Process scalar arguments\r\n\t  for(var i=0; i<proc.scalarArgs.length; ++i) {\r\n\t    proc_args.push(\"scalar\" + proc.scalarArgs[i])\r\n\t  }\r\n\t  // Check for cached function (and if not present, generate it)\r\n\t  vars.push([\"type=[\", string_typesig.join(\",\"), \"].join()\"].join(\"\"))\r\n\t  vars.push(\"proc=CACHED[type]\")\r\n\t  code.push(\"var \" + vars.join(\",\"))\r\n\t  \r\n\t  code.push([\"if(!proc){\",\r\n\t             \"CACHED[type]=proc=compile([\", typesig.join(\",\"), \"])}\",\r\n\t             \"return proc(\", proc_args.join(\",\"), \")}\"].join(\"\"))\r\n\t\r\n\t  if(proc.debug) {\r\n\t    console.log(\"-----Generated thunk:\\n\" + code.join(\"\\n\") + \"\\n----------\")\r\n\t  }\r\n\t  \r\n\t  //Compile thunk\r\n\t  var thunk = new Function(\"compile\", code.join(\"\\n\"))\r\n\t  return thunk(compile.bind(undefined, proc))\r\n\t}\r\n\t\r\n\tmodule.exports = createThunk\r\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\"\r\n\t\r\n\tvar uniq = __webpack_require__(7)\r\n\t\r\n\t// This function generates very simple loops analogous to how you typically traverse arrays (the outermost loop corresponds to the slowest changing index, the innermost loop to the fastest changing index)\r\n\t// TODO: If two arrays have the same strides (and offsets) there is potential for decreasing the number of \"pointers\" and related variables. The drawback is that the type signature would become more specific and that there would thus be less potential for caching, but it might still be worth it, especially when dealing with large numbers of arguments.\r\n\tfunction innerFill(order, proc, body) {\r\n\t  var dimension = order.length\r\n\t    , nargs = proc.arrayArgs.length\r\n\t    , has_index = proc.indexArgs.length>0\r\n\t    , code = []\r\n\t    , vars = []\r\n\t    , idx=0, pidx=0, i, j\r\n\t  for(i=0; i<dimension; ++i) { // Iteration variables\r\n\t    vars.push([\"i\",i,\"=0\"].join(\"\"))\r\n\t  }\r\n\t  //Compute scan deltas\r\n\t  for(j=0; j<nargs; ++j) {\r\n\t    for(i=0; i<dimension; ++i) {\r\n\t      pidx = idx\r\n\t      idx = order[i]\r\n\t      if(i === 0) { // The innermost/fastest dimension's delta is simply its stride\r\n\t        vars.push([\"d\",j,\"s\",i,\"=t\",j,\"p\",idx].join(\"\"))\r\n\t      } else { // For other dimensions the delta is basically the stride minus something which essentially \"rewinds\" the previous (more inner) dimension\r\n\t        vars.push([\"d\",j,\"s\",i,\"=(t\",j,\"p\",idx,\"-s\",pidx,\"*t\",j,\"p\",pidx,\")\"].join(\"\"))\r\n\t      }\r\n\t    }\r\n\t  }\r\n\t  code.push(\"var \" + vars.join(\",\"))\r\n\t  //Scan loop\r\n\t  for(i=dimension-1; i>=0; --i) { // Start at largest stride and work your way inwards\r\n\t    idx = order[i]\r\n\t    code.push([\"for(i\",i,\"=0;i\",i,\"<s\",idx,\";++i\",i,\"){\"].join(\"\"))\r\n\t  }\r\n\t  //Push body of inner loop\r\n\t  code.push(body)\r\n\t  //Advance scan pointers\r\n\t  for(i=0; i<dimension; ++i) {\r\n\t    pidx = idx\r\n\t    idx = order[i]\r\n\t    for(j=0; j<nargs; ++j) {\r\n\t      code.push([\"p\",j,\"+=d\",j,\"s\",i].join(\"\"))\r\n\t    }\r\n\t    if(has_index) {\r\n\t      if(i > 0) {\r\n\t        code.push([\"index[\",pidx,\"]-=s\",pidx].join(\"\"))\r\n\t      }\r\n\t      code.push([\"++index[\",idx,\"]\"].join(\"\"))\r\n\t    }\r\n\t    code.push(\"}\")\r\n\t  }\r\n\t  return code.join(\"\\n\")\r\n\t}\r\n\t\r\n\t// Generate \"outer\" loops that loop over blocks of data, applying \"inner\" loops to the blocks by manipulating the local variables in such a way that the inner loop only \"sees\" the current block.\r\n\t// TODO: If this is used, then the previous declaration (done by generateCwiseOp) of s* is essentially unnecessary.\r\n\t//       I believe the s* are not used elsewhere (in particular, I don't think they're used in the pre/post parts and \"shape\" is defined independently), so it would be possible to make defining the s* dependent on what loop method is being used.\r\n\tfunction outerFill(matched, order, proc, body) {\r\n\t  var dimension = order.length\r\n\t    , nargs = proc.arrayArgs.length\r\n\t    , blockSize = proc.blockSize\r\n\t    , has_index = proc.indexArgs.length > 0\r\n\t    , code = []\r\n\t  for(var i=0; i<nargs; ++i) {\r\n\t    code.push([\"var offset\",i,\"=p\",i].join(\"\"))\r\n\t  }\r\n\t  //Generate loops for unmatched dimensions\r\n\t  // The order in which these dimensions are traversed is fairly arbitrary (from small stride to large stride, for the first argument)\r\n\t  // TODO: It would be nice if the order in which these loops are placed would also be somehow \"optimal\" (at the very least we should check that it really doesn't hurt us if they're not).\r\n\t  for(var i=matched; i<dimension; ++i) {\r\n\t    code.push([\"for(var j\"+i+\"=SS[\", order[i], \"]|0;j\", i, \">0;){\"].join(\"\")) // Iterate back to front\r\n\t    code.push([\"if(j\",i,\"<\",blockSize,\"){\"].join(\"\")) // Either decrease j by blockSize (s = blockSize), or set it to zero (after setting s = j).\r\n\t    code.push([\"s\",order[i],\"=j\",i].join(\"\"))\r\n\t    code.push([\"j\",i,\"=0\"].join(\"\"))\r\n\t    code.push([\"}else{s\",order[i],\"=\",blockSize].join(\"\"))\r\n\t    code.push([\"j\",i,\"-=\",blockSize,\"}\"].join(\"\"))\r\n\t    if(has_index) {\r\n\t      code.push([\"index[\",order[i],\"]=j\",i].join(\"\"))\r\n\t    }\r\n\t  }\r\n\t  for(var i=0; i<nargs; ++i) {\r\n\t    var indexStr = [\"offset\"+i]\r\n\t    for(var j=matched; j<dimension; ++j) {\r\n\t      indexStr.push([\"j\",j,\"*t\",i,\"p\",order[j]].join(\"\"))\r\n\t    }\r\n\t    code.push([\"p\",i,\"=(\",indexStr.join(\"+\"),\")\"].join(\"\"))\r\n\t  }\r\n\t  code.push(innerFill(order, proc, body))\r\n\t  for(var i=matched; i<dimension; ++i) {\r\n\t    code.push(\"}\")\r\n\t  }\r\n\t  return code.join(\"\\n\")\r\n\t}\r\n\t\r\n\t//Count the number of compatible inner orders\r\n\t// This is the length of the longest common prefix of the arrays in orders.\r\n\t// Each array in orders lists the dimensions of the correspond ndarray in order of increasing stride.\r\n\t// This is thus the maximum number of dimensions that can be efficiently traversed by simple nested loops for all arrays.\r\n\tfunction countMatches(orders) {\r\n\t  var matched = 0, dimension = orders[0].length\r\n\t  while(matched < dimension) {\r\n\t    for(var j=1; j<orders.length; ++j) {\r\n\t      if(orders[j][matched] !== orders[0][matched]) {\r\n\t        return matched\r\n\t      }\r\n\t    }\r\n\t    ++matched\r\n\t  }\r\n\t  return matched\r\n\t}\r\n\t\r\n\t//Processes a block according to the given data types\r\n\t// Replaces variable names by different ones, either \"local\" ones (that are then ferried in and out of the given array) or ones matching the arguments that the function performing the ultimate loop will accept.\r\n\tfunction processBlock(block, proc, dtypes) {\r\n\t  var code = block.body\r\n\t  var pre = []\r\n\t  var post = []\r\n\t  for(var i=0; i<block.args.length; ++i) {\r\n\t    var carg = block.args[i]\r\n\t    if(carg.count <= 0) {\r\n\t      continue\r\n\t    }\r\n\t    var re = new RegExp(carg.name, \"g\")\r\n\t    var ptrStr = \"\"\r\n\t    var arrNum = proc.arrayArgs.indexOf(i)\r\n\t    switch(proc.argTypes[i]) {\r\n\t      case \"offset\":\r\n\t        var offArgIndex = proc.offsetArgIndex.indexOf(i)\r\n\t        var offArg = proc.offsetArgs[offArgIndex]\r\n\t        arrNum = offArg.array\r\n\t        ptrStr = \"+q\" + offArgIndex // Adds offset to the \"pointer\" in the array\r\n\t      case \"array\":\r\n\t        ptrStr = \"p\" + arrNum + ptrStr\r\n\t        var localStr = \"l\" + i\r\n\t        var arrStr = \"a\" + arrNum\r\n\t        if (proc.arrayBlockIndices[arrNum] === 0) { // Argument to body is just a single value from this array\r\n\t          if(carg.count === 1) { // Argument/array used only once(?)\r\n\t            if(dtypes[arrNum] === \"generic\") {\r\n\t              if(carg.lvalue) {\r\n\t                pre.push([\"var \", localStr, \"=\", arrStr, \".get(\", ptrStr, \")\"].join(\"\")) // Is this necessary if the argument is ONLY used as an lvalue? (keep in mind that we can have a += something, so we would actually need to check carg.rvalue)\r\n\t                code = code.replace(re, localStr)\r\n\t                post.push([arrStr, \".set(\", ptrStr, \",\", localStr,\")\"].join(\"\"))\r\n\t              } else {\r\n\t                code = code.replace(re, [arrStr, \".get(\", ptrStr, \")\"].join(\"\"))\r\n\t              }\r\n\t            } else {\r\n\t              code = code.replace(re, [arrStr, \"[\", ptrStr, \"]\"].join(\"\"))\r\n\t            }\r\n\t          } else if(dtypes[arrNum] === \"generic\") {\r\n\t            pre.push([\"var \", localStr, \"=\", arrStr, \".get(\", ptrStr, \")\"].join(\"\")) // TODO: Could we optimize by checking for carg.rvalue?\r\n\t            code = code.replace(re, localStr)\r\n\t            if(carg.lvalue) {\r\n\t              post.push([arrStr, \".set(\", ptrStr, \",\", localStr,\")\"].join(\"\"))\r\n\t            }\r\n\t          } else {\r\n\t            pre.push([\"var \", localStr, \"=\", arrStr, \"[\", ptrStr, \"]\"].join(\"\")) // TODO: Could we optimize by checking for carg.rvalue?\r\n\t            code = code.replace(re, localStr)\r\n\t            if(carg.lvalue) {\r\n\t              post.push([arrStr, \"[\", ptrStr, \"]=\", localStr].join(\"\"))\r\n\t            }\r\n\t          }\r\n\t        } else { // Argument to body is a \"block\"\r\n\t          var reStrArr = [carg.name], ptrStrArr = [ptrStr]\r\n\t          for(var j=0; j<Math.abs(proc.arrayBlockIndices[arrNum]); j++) {\r\n\t            reStrArr.push(\"\\\\s*\\\\[([^\\\\]]+)\\\\]\")\r\n\t            ptrStrArr.push(\"$\" + (j+1) + \"*t\" + arrNum + \"b\" + j) // Matched index times stride\r\n\t          }\r\n\t          re = new RegExp(reStrArr.join(\"\"), \"g\")\r\n\t          ptrStr = ptrStrArr.join(\"+\")\r\n\t          if(dtypes[arrNum] === \"generic\") {\r\n\t            /*if(carg.lvalue) {\r\n\t              pre.push([\"var \", localStr, \"=\", arrStr, \".get(\", ptrStr, \")\"].join(\"\")) // Is this necessary if the argument is ONLY used as an lvalue? (keep in mind that we can have a += something, so we would actually need to check carg.rvalue)\r\n\t              code = code.replace(re, localStr)\r\n\t              post.push([arrStr, \".set(\", ptrStr, \",\", localStr,\")\"].join(\"\"))\r\n\t            } else {\r\n\t              code = code.replace(re, [arrStr, \".get(\", ptrStr, \")\"].join(\"\"))\r\n\t            }*/\r\n\t            throw new Error(\"cwise: Generic arrays not supported in combination with blocks!\")\r\n\t          } else {\r\n\t            // This does not produce any local variables, even if variables are used multiple times. It would be possible to do so, but it would complicate things quite a bit.\r\n\t            code = code.replace(re, [arrStr, \"[\", ptrStr, \"]\"].join(\"\"))\r\n\t          }\r\n\t        }\r\n\t      break\r\n\t      case \"scalar\":\r\n\t        code = code.replace(re, \"Y\" + proc.scalarArgs.indexOf(i))\r\n\t      break\r\n\t      case \"index\":\r\n\t        code = code.replace(re, \"index\")\r\n\t      break\r\n\t      case \"shape\":\r\n\t        code = code.replace(re, \"shape\")\r\n\t      break\r\n\t    }\r\n\t  }\r\n\t  return [pre.join(\"\\n\"), code, post.join(\"\\n\")].join(\"\\n\").trim()\r\n\t}\r\n\t\r\n\tfunction typeSummary(dtypes) {\r\n\t  var summary = new Array(dtypes.length)\r\n\t  var allEqual = true\r\n\t  for(var i=0; i<dtypes.length; ++i) {\r\n\t    var t = dtypes[i]\r\n\t    var digits = t.match(/\\d+/)\r\n\t    if(!digits) {\r\n\t      digits = \"\"\r\n\t    } else {\r\n\t      digits = digits[0]\r\n\t    }\r\n\t    if(t.charAt(0) === 0) {\r\n\t      summary[i] = \"u\" + t.charAt(1) + digits\r\n\t    } else {\r\n\t      summary[i] = t.charAt(0) + digits\r\n\t    }\r\n\t    if(i > 0) {\r\n\t      allEqual = allEqual && summary[i] === summary[i-1]\r\n\t    }\r\n\t  }\r\n\t  if(allEqual) {\r\n\t    return summary[0]\r\n\t  }\r\n\t  return summary.join(\"\")\r\n\t}\r\n\t\r\n\t//Generates a cwise operator\r\n\tfunction generateCWiseOp(proc, typesig) {\r\n\t\r\n\t  //Compute dimension\r\n\t  // Arrays get put first in typesig, and there are two entries per array (dtype and order), so this gets the number of dimensions in the first array arg.\r\n\t  var dimension = (typesig[1].length - Math.abs(proc.arrayBlockIndices[0]))|0\r\n\t  var orders = new Array(proc.arrayArgs.length)\r\n\t  var dtypes = new Array(proc.arrayArgs.length)\r\n\t  for(var i=0; i<proc.arrayArgs.length; ++i) {\r\n\t    dtypes[i] = typesig[2*i]\r\n\t    orders[i] = typesig[2*i+1]\r\n\t  }\r\n\t  \r\n\t  //Determine where block and loop indices start and end\r\n\t  var blockBegin = [], blockEnd = [] // These indices are exposed as blocks\r\n\t  var loopBegin = [], loopEnd = [] // These indices are iterated over\r\n\t  var loopOrders = [] // orders restricted to the loop indices\r\n\t  for(var i=0; i<proc.arrayArgs.length; ++i) {\r\n\t    if (proc.arrayBlockIndices[i]<0) {\r\n\t      loopBegin.push(0)\r\n\t      loopEnd.push(dimension)\r\n\t      blockBegin.push(dimension)\r\n\t      blockEnd.push(dimension+proc.arrayBlockIndices[i])\r\n\t    } else {\r\n\t      loopBegin.push(proc.arrayBlockIndices[i]) // Non-negative\r\n\t      loopEnd.push(proc.arrayBlockIndices[i]+dimension)\r\n\t      blockBegin.push(0)\r\n\t      blockEnd.push(proc.arrayBlockIndices[i])\r\n\t    }\r\n\t    var newOrder = []\r\n\t    for(var j=0; j<orders[i].length; j++) {\r\n\t      if (loopBegin[i]<=orders[i][j] && orders[i][j]<loopEnd[i]) {\r\n\t        newOrder.push(orders[i][j]-loopBegin[i]) // If this is a loop index, put it in newOrder, subtracting loopBegin, to make sure that all loopOrders are using a common set of indices.\r\n\t      }\r\n\t    }\r\n\t    loopOrders.push(newOrder)\r\n\t  }\r\n\t\r\n\t  //First create arguments for procedure\r\n\t  var arglist = [\"SS\"] // SS is the overall shape over which we iterate\r\n\t  var code = [\"'use strict'\"]\r\n\t  var vars = []\r\n\t  \r\n\t  for(var j=0; j<dimension; ++j) {\r\n\t    vars.push([\"s\", j, \"=SS[\", j, \"]\"].join(\"\")) // The limits for each dimension.\r\n\t  }\r\n\t  for(var i=0; i<proc.arrayArgs.length; ++i) {\r\n\t    arglist.push(\"a\"+i) // Actual data array\r\n\t    arglist.push(\"t\"+i) // Strides\r\n\t    arglist.push(\"p\"+i) // Offset in the array at which the data starts (also used for iterating over the data)\r\n\t    \r\n\t    for(var j=0; j<dimension; ++j) { // Unpack the strides into vars for looping\r\n\t      vars.push([\"t\",i,\"p\",j,\"=t\",i,\"[\",loopBegin[i]+j,\"]\"].join(\"\"))\r\n\t    }\r\n\t    \r\n\t    for(var j=0; j<Math.abs(proc.arrayBlockIndices[i]); ++j) { // Unpack the strides into vars for block iteration\r\n\t      vars.push([\"t\",i,\"b\",j,\"=t\",i,\"[\",blockBegin[i]+j,\"]\"].join(\"\"))\r\n\t    }\r\n\t  }\r\n\t  for(var i=0; i<proc.scalarArgs.length; ++i) {\r\n\t    arglist.push(\"Y\" + i)\r\n\t  }\r\n\t  if(proc.shapeArgs.length > 0) {\r\n\t    vars.push(\"shape=SS.slice(0)\") // Makes the shape over which we iterate available to the user defined functions (so you can use width/height for example)\r\n\t  }\r\n\t  if(proc.indexArgs.length > 0) {\r\n\t    // Prepare an array to keep track of the (logical) indices, initialized to dimension zeroes.\r\n\t    var zeros = new Array(dimension)\r\n\t    for(var i=0; i<dimension; ++i) {\r\n\t      zeros[i] = \"0\"\r\n\t    }\r\n\t    vars.push([\"index=[\", zeros.join(\",\"), \"]\"].join(\"\"))\r\n\t  }\r\n\t  for(var i=0; i<proc.offsetArgs.length; ++i) { // Offset arguments used for stencil operations\r\n\t    var off_arg = proc.offsetArgs[i]\r\n\t    var init_string = []\r\n\t    for(var j=0; j<off_arg.offset.length; ++j) {\r\n\t      if(off_arg.offset[j] === 0) {\r\n\t        continue\r\n\t      } else if(off_arg.offset[j] === 1) {\r\n\t        init_string.push([\"t\", off_arg.array, \"p\", j].join(\"\"))      \r\n\t      } else {\r\n\t        init_string.push([off_arg.offset[j], \"*t\", off_arg.array, \"p\", j].join(\"\"))\r\n\t      }\r\n\t    }\r\n\t    if(init_string.length === 0) {\r\n\t      vars.push(\"q\" + i + \"=0\")\r\n\t    } else {\r\n\t      vars.push([\"q\", i, \"=\", init_string.join(\"+\")].join(\"\"))\r\n\t    }\r\n\t  }\r\n\t\r\n\t  //Prepare this variables\r\n\t  var thisVars = uniq([].concat(proc.pre.thisVars)\r\n\t                      .concat(proc.body.thisVars)\r\n\t                      .concat(proc.post.thisVars))\r\n\t  vars = vars.concat(thisVars)\r\n\t  code.push(\"var \" + vars.join(\",\"))\r\n\t  for(var i=0; i<proc.arrayArgs.length; ++i) {\r\n\t    code.push(\"p\"+i+\"|=0\")\r\n\t  }\r\n\t  \r\n\t  //Inline prelude\r\n\t  if(proc.pre.body.length > 3) {\r\n\t    code.push(processBlock(proc.pre, proc, dtypes))\r\n\t  }\r\n\t\r\n\t  //Process body\r\n\t  var body = processBlock(proc.body, proc, dtypes)\r\n\t  var matched = countMatches(loopOrders)\r\n\t  if(matched < dimension) {\r\n\t    code.push(outerFill(matched, loopOrders[0], proc, body)) // TODO: Rather than passing loopOrders[0], it might be interesting to look at passing an order that represents the majority of the arguments for example.\r\n\t  } else {\r\n\t    code.push(innerFill(loopOrders[0], proc, body))\r\n\t  }\r\n\t\r\n\t  //Inline epilog\r\n\t  if(proc.post.body.length > 3) {\r\n\t    code.push(processBlock(proc.post, proc, dtypes))\r\n\t  }\r\n\t  \r\n\t  if(proc.debug) {\r\n\t    console.log(\"-----Generated cwise routine for \", typesig, \":\\n\" + code.join(\"\\n\") + \"\\n----------\")\r\n\t  }\r\n\t  \r\n\t  var loopName = [(proc.funcName||\"unnamed\"), \"_cwise_loop_\", orders[0].join(\"s\"),\"m\",matched,typeSummary(dtypes)].join(\"\")\r\n\t  var f = new Function([\"function \",loopName,\"(\", arglist.join(\",\"),\"){\", code.join(\"\\n\"),\"} return \", loopName].join(\"\"))\r\n\t  return f()\r\n\t}\r\n\tmodule.exports = generateCWiseOp\r\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function (global, factory) {\n\t   true ? factory(exports) :\n\t  typeof define === 'function' && define.amd ? define('d3-array', ['exports'], factory) :\n\t  factory((global.d3_array = {}));\n\t}(this, function (exports) { 'use strict';\n\t\n\t  function ascending(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  };\n\t\n\t  function bisector(compare) {\n\t    if (compare.length === 1) compare = ascendingComparator(compare);\n\t    return {\n\t      left: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) < 0) lo = mid + 1;\n\t          else hi = mid;\n\t        }\n\t        return lo;\n\t      },\n\t      right: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) > 0) hi = mid;\n\t          else lo = mid + 1;\n\t        }\n\t        return lo;\n\t      }\n\t    };\n\t  };\n\t\n\t  function ascendingComparator(f) {\n\t    return function(d, x) {\n\t      return ascending(f(d), x);\n\t    };\n\t  }\n\t\n\t  var ascendingBisect = bisector(ascending);\n\t  var bisectRight = ascendingBisect.right;\n\t  var bisectLeft = ascendingBisect.left;\n\t\n\t  function descending(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  };\n\t\n\t  function number$1(x) {\n\t    return x === null ? NaN : +x;\n\t  };\n\t\n\t  function variance(array, f) {\n\t    var n = array.length,\n\t        m = 0,\n\t        a,\n\t        d,\n\t        s = 0,\n\t        i = -1,\n\t        j = 0;\n\t\n\t    if (arguments.length === 1) {\n\t      while (++i < n) {\n\t        if (!isNaN(a = number$1(array[i]))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    }\n\t\n\t    else {\n\t      while (++i < n) {\n\t        if (!isNaN(a = number$1(f(array[i], i, array)))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    }\n\t\n\t    if (j > 1) return s / (j - 1);\n\t  };\n\t\n\t  function deviation() {\n\t    var v = variance.apply(this, arguments);\n\t    return v ? Math.sqrt(v) : v;\n\t  };\n\t\n\t  function extent(array, f) {\n\t    var i = -1,\n\t        n = array.length,\n\t        a,\n\t        b,\n\t        c;\n\t\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n\t      while (++i < n) if ((b = array[i]) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t\n\t    else {\n\t      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n\t      while (++i < n) if ((b = f(array[i], i, array)) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t\n\t    return [a, c];\n\t  };\n\t\n\t  function constant(x) {\n\t    return function() {\n\t      return x;\n\t    };\n\t  };\n\t\n\t  function identity(x) {\n\t    return x;\n\t  };\n\t\n\t  function range(start, stop, step) {\n\t    if ((n = arguments.length) < 3) {\n\t      step = 1;\n\t      if (n < 2) {\n\t        stop = start;\n\t        start = 0;\n\t      }\n\t    }\n\t\n\t    var i = -1,\n\t        n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n\t        range = new Array(n);\n\t\n\t    while (++i < n) {\n\t      range[i] = start + i * step;\n\t    }\n\t\n\t    return range;\n\t  };\n\t\n\t  var e10 = Math.sqrt(50);\n\t  var e5 = Math.sqrt(10);\n\t  var e2 = Math.sqrt(2);\n\t  function ticks(start, stop, count) {\n\t    var step = tickStep(start, stop, count);\n\t    return range(\n\t      Math.ceil(start / step) * step,\n\t      Math.floor(stop / step) * step + step / 2, // inclusive\n\t      step\n\t    );\n\t  };\n\t\n\t  function tickStep(start, stop, count) {\n\t    var step0 = Math.abs(stop - start) / Math.max(0, count),\n\t        step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n\t        error = step0 / step1;\n\t    if (error >= e10) step1 *= 10;\n\t    else if (error >= e5) step1 *= 5;\n\t    else if (error >= e2) step1 *= 2;\n\t    return stop < start ? -step1 : step1;\n\t  };\n\t\n\t  function sturges(values) {\n\t    return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n\t  };\n\t\n\t  function number(x) {\n\t    return +x;\n\t  }\n\t\n\t  function histogram() {\n\t    var value = identity,\n\t        domain = extent,\n\t        threshold = sturges;\n\t\n\t    function histogram(data) {\n\t      var i,\n\t          n = data.length,\n\t          x,\n\t          values = new Array(n);\n\t\n\t      // Coerce values to numbers.\n\t      for (i = 0; i < n; ++i) {\n\t        values[i] = +value(data[i], i, data);\n\t      }\n\t\n\t      var xz = domain(values),\n\t          x0 = +xz[0],\n\t          x1 = +xz[1],\n\t          tz = threshold(values, x0, x1);\n\t\n\t      // Convert number of thresholds into uniform thresholds.\n\t      if (!Array.isArray(tz)) tz = ticks(x0, x1, +tz);\n\t\n\t      // Coerce thresholds to numbers, ignoring any outside the domain.\n\t      var m = tz.length;\n\t      for (i = 0; i < m; ++i) tz[i] = +tz[i];\n\t      while (tz[0] <= x0) tz.shift(), --m;\n\t      while (tz[m - 1] >= x1) tz.pop(), --m;\n\t\n\t      var bins = new Array(m + 1),\n\t          bin;\n\t\n\t      // Initialize bins.\n\t      for (i = 0; i <= m; ++i) {\n\t        bin = bins[i] = [];\n\t        bin.x0 = i > 0 ? tz[i - 1] : x0;\n\t        bin.x1 = i < m ? tz[i] : x1;\n\t      }\n\t\n\t      // Assign data to bins by value, ignoring any outside the domain.\n\t      for (i = 0; i < n; ++i) {\n\t        x = values[i];\n\t        if (x0 <= x && x <= x1) {\n\t          bins[bisectRight(tz, x, 0, m)].push(data[i]);\n\t        }\n\t      }\n\t\n\t      return bins;\n\t    }\n\t\n\t    histogram.value = function(_) {\n\t      return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), histogram) : value;\n\t    };\n\t\n\t    histogram.domain = function(_) {\n\t      return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), histogram) : domain;\n\t    };\n\t\n\t    histogram.thresholds = function(_) {\n\t      if (!arguments.length) return threshold;\n\t      threshold = typeof _ === \"function\" ? _\n\t          : Array.isArray(_) ? constant(Array.prototype.map.call(_, number))\n\t          : constant(+_);\n\t      return histogram;\n\t    };\n\t\n\t    return histogram;\n\t  };\n\t\n\t  function quantile(array, p, f) {\n\t    if (arguments.length < 3) f = number$1;\n\t    if (!(n = array.length)) return;\n\t    if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n\t    if (p >= 1) return +f(array[n - 1], n - 1, array);\n\t    var n,\n\t        h = (n - 1) * p,\n\t        i = Math.floor(h),\n\t        a = +f(array[i], i, array),\n\t        b = +f(array[i + 1], i + 1, array);\n\t    return a + (b - a) * (h - i);\n\t  };\n\t\n\t  function freedmanDiaconis(values, min, max) {\n\t    values.sort(ascending);\n\t    return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n\t  };\n\t\n\t  function scott(values, min, max) {\n\t    return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n\t  };\n\t\n\t  function max(array, f) {\n\t    var i = -1,\n\t        n = array.length,\n\t        a,\n\t        b;\n\t\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n\t      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t    }\n\t\n\t    else {\n\t      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n\t      while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n\t    }\n\t\n\t    return a;\n\t  };\n\t\n\t  function mean(array, f) {\n\t    var s = 0,\n\t        n = array.length,\n\t        a,\n\t        i = -1,\n\t        j = n;\n\t\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (!isNaN(a = number$1(array[i]))) s += a; else --j;\n\t    }\n\t\n\t    else {\n\t      while (++i < n) if (!isNaN(a = number$1(f(array[i], i, array)))) s += a; else --j;\n\t    }\n\t\n\t    if (j) return s / j;\n\t  };\n\t\n\t  function median(array, f) {\n\t    var numbers = [],\n\t        n = array.length,\n\t        a,\n\t        i = -1;\n\t\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (!isNaN(a = number$1(array[i]))) numbers.push(a);\n\t    }\n\t\n\t    else {\n\t      while (++i < n) if (!isNaN(a = number$1(f(array[i], i, array)))) numbers.push(a);\n\t    }\n\t\n\t    return quantile(numbers.sort(ascending), 0.5);\n\t  };\n\t\n\t  function merge(arrays) {\n\t    var n = arrays.length,\n\t        m,\n\t        i = -1,\n\t        j = 0,\n\t        merged,\n\t        array;\n\t\n\t    while (++i < n) j += arrays[i].length;\n\t    merged = new Array(j);\n\t\n\t    while (--n >= 0) {\n\t      array = arrays[n];\n\t      m = array.length;\n\t      while (--m >= 0) {\n\t        merged[--j] = array[m];\n\t      }\n\t    }\n\t\n\t    return merged;\n\t  };\n\t\n\t  function min(array, f) {\n\t    var i = -1,\n\t        n = array.length,\n\t        a,\n\t        b;\n\t\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n\t      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t    }\n\t\n\t    else {\n\t      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n\t      while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n\t    }\n\t\n\t    return a;\n\t  };\n\t\n\t  function pairs(array) {\n\t    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t    while (i < n) pairs[i] = [p0 = p1, p1 = array[++i]];\n\t    return pairs;\n\t  };\n\t\n\t  function permute(array, indexes) {\n\t    var i = indexes.length, permutes = new Array(i);\n\t    while (i--) permutes[i] = array[indexes[i]];\n\t    return permutes;\n\t  };\n\t\n\t  function scan(array, compare) {\n\t    if (!(n = array.length)) return;\n\t    var i = 0,\n\t        n,\n\t        j = 0,\n\t        xi,\n\t        xj = array[j];\n\t\n\t    if (!compare) compare = ascending;\n\t\n\t    while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\t\n\t    if (compare(xj, xj) === 0) return j;\n\t  };\n\t\n\t  function shuffle(array, i0, i1) {\n\t    if ((m = arguments.length) < 3) {\n\t      i1 = array.length;\n\t      if (m < 2) i0 = 0;\n\t    }\n\t\n\t    var m = i1 - i0,\n\t        t,\n\t        i;\n\t\n\t    while (m) {\n\t      i = Math.random() * m-- | 0;\n\t      t = array[m + i0];\n\t      array[m + i0] = array[i + i0];\n\t      array[i + i0] = t;\n\t    }\n\t\n\t    return array;\n\t  };\n\t\n\t  function sum(array, f) {\n\t    var s = 0,\n\t        n = array.length,\n\t        a,\n\t        i = -1;\n\t\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n\t    }\n\t\n\t    else {\n\t      while (++i < n) if (a = +f(array[i], i, array)) s += a;\n\t    }\n\t\n\t    return s;\n\t  };\n\t\n\t  function transpose(matrix) {\n\t    if (!(n = matrix.length)) return [];\n\t    for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n\t      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n\t        row[j] = matrix[j][i];\n\t      }\n\t    }\n\t    return transpose;\n\t  };\n\t\n\t  function length(d) {\n\t    return d.length;\n\t  }\n\t\n\t  function zip() {\n\t    return transpose(arguments);\n\t  };\n\t\n\t  var version = \"0.7.0\";\n\t\n\t  exports.version = version;\n\t  exports.bisect = bisectRight;\n\t  exports.bisectRight = bisectRight;\n\t  exports.bisectLeft = bisectLeft;\n\t  exports.ascending = ascending;\n\t  exports.bisector = bisector;\n\t  exports.descending = descending;\n\t  exports.deviation = deviation;\n\t  exports.extent = extent;\n\t  exports.histogram = histogram;\n\t  exports.thresholdFreedmanDiaconis = freedmanDiaconis;\n\t  exports.thresholdScott = scott;\n\t  exports.thresholdSturges = sturges;\n\t  exports.max = max;\n\t  exports.mean = mean;\n\t  exports.median = median;\n\t  exports.merge = merge;\n\t  exports.min = min;\n\t  exports.pairs = pairs;\n\t  exports.permute = permute;\n\t  exports.quantile = quantile;\n\t  exports.range = range;\n\t  exports.scan = scan;\n\t  exports.shuffle = shuffle;\n\t  exports.sum = sum;\n\t  exports.ticks = ticks;\n\t  exports.tickStep = tickStep;\n\t  exports.transpose = transpose;\n\t  exports.variance = variance;\n\t  exports.zip = zip;\n\t\n\t}));\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function (global, factory) {\n\t   true ? factory(exports, __webpack_require__(13)) :\n\t  typeof define === 'function' && define.amd ? define('d3-interpolate', ['exports', 'd3-color'], factory) :\n\t  factory((global.d3_interpolate = {}),global.d3_color);\n\t}(this, function (exports,d3Color) { 'use strict';\n\t\n\t  function rgb(a, b) {\n\t    a = d3Color.rgb(a);\n\t    b = d3Color.rgb(b);\n\t    var ar = a.r,\n\t        ag = a.g,\n\t        ab = a.b,\n\t        br = b.r - ar,\n\t        bg = b.g - ag,\n\t        bb = b.b - ab;\n\t    return function(t) {\n\t      a.r = ar + br * t;\n\t      a.g = ag + bg * t;\n\t      a.b = ab + bb * t;\n\t      return a + \"\";\n\t    };\n\t  };\n\t\n\t  // TODO sparse arrays?\n\t  function array(a, b) {\n\t    var x = [],\n\t        c = [],\n\t        na = a ? a.length : 0,\n\t        nb = b ? b.length : 0,\n\t        n0 = Math.min(na, nb),\n\t        i;\n\t\n\t    for (i = 0; i < n0; ++i) x.push(value(a[i], b[i]));\n\t    for (; i < na; ++i) c[i] = a[i];\n\t    for (; i < nb; ++i) c[i] = b[i];\n\t\n\t    return function(t) {\n\t      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n\t      return c;\n\t    };\n\t  };\n\t\n\t  function number(a, b) {\n\t    return a = +a, b -= a, function(t) {\n\t      return a + b * t;\n\t    };\n\t  };\n\t\n\t  function object(a, b) {\n\t    var i = {},\n\t        c = {},\n\t        k;\n\t\n\t    if (a === null || typeof a !== \"object\") a = {};\n\t    if (b === null || typeof b !== \"object\") b = {};\n\t\n\t    for (k in a) {\n\t      if (k in b) {\n\t        i[k] = value(a[k], b[k]);\n\t      } else {\n\t        c[k] = a[k];\n\t      }\n\t    }\n\t\n\t    for (k in b) {\n\t      if (!(k in a)) {\n\t        c[k] = b[k];\n\t      }\n\t    }\n\t\n\t    return function(t) {\n\t      for (k in i) c[k] = i[k](t);\n\t      return c;\n\t    };\n\t  };\n\t\n\t  var reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n\t  var reB = new RegExp(reA.source, \"g\");\n\t  function zero(b) {\n\t    return function() {\n\t      return b;\n\t    };\n\t  }\n\t\n\t  function one(b) {\n\t    return function(t) {\n\t      return b(t) + \"\";\n\t    };\n\t  }\n\t\n\t  function string(a, b) {\n\t    var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n\t        am, // current match in a\n\t        bm, // current match in b\n\t        bs, // string preceding current number in b, if any\n\t        i = -1, // index in s\n\t        s = [], // string constants and placeholders\n\t        q = []; // number interpolators\n\t\n\t    // Coerce inputs to strings.\n\t    a = a + \"\", b = b + \"\";\n\t\n\t    // Interpolate pairs of numbers in a & b.\n\t    while ((am = reA.exec(a))\n\t        && (bm = reB.exec(b))) {\n\t      if ((bs = bm.index) > bi) { // a string precedes the next number in b\n\t        bs = b.slice(bi, bs);\n\t        if (s[i]) s[i] += bs; // coalesce with previous string\n\t        else s[++i] = bs;\n\t      }\n\t      if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n\t        if (s[i]) s[i] += bm; // coalesce with previous string\n\t        else s[++i] = bm;\n\t      } else { // interpolate non-matching numbers\n\t        s[++i] = null;\n\t        q.push({i: i, x: number(am, bm)});\n\t      }\n\t      bi = reB.lastIndex;\n\t    }\n\t\n\t    // Add remains of b.\n\t    if (bi < b.length) {\n\t      bs = b.slice(bi);\n\t      if (s[i]) s[i] += bs; // coalesce with previous string\n\t      else s[++i] = bs;\n\t    }\n\t\n\t    // Special optimization for only a single match.\n\t    // Otherwise, interpolate each of the numbers and rejoin the string.\n\t    return s.length < 2 ? (q[0]\n\t        ? one(q[0].x)\n\t        : zero(b))\n\t        : (b = q.length, function(t) {\n\t            for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t            return s.join(\"\");\n\t          });\n\t  };\n\t\n\t  var values = [\n\t    function(a, b) {\n\t      var t = typeof b, c;\n\t      return (t === \"string\" ? ((c = d3Color.color(b)) ? (b = c, rgb) : string)\n\t          : b instanceof d3Color.color ? rgb\n\t          : Array.isArray(b) ? array\n\t          : t === \"object\" && isNaN(b) ? object\n\t          : number)(a, b);\n\t    }\n\t  ];\n\t\n\t  function value(a, b) {\n\t    var i = values.length, f;\n\t    while (--i >= 0 && !(f = values[i](a, b)));\n\t    return f;\n\t  };\n\t\n\t  function round(a, b) {\n\t    return a = +a, b -= a, function(t) {\n\t      return Math.round(a + b * t);\n\t    };\n\t  };\n\t\n\t  var rad2deg = 180 / Math.PI;\n\t  var identity = {a: 1, b: 0, c: 0, d: 1, e: 0, f: 0};\n\t  var g;\n\t  // Compute x-scale and normalize the first row.\n\t  // Compute shear and make second row orthogonal to first.\n\t  // Compute y-scale and normalize the second row.\n\t  // Finally, compute the rotation.\n\t  function Transform(string) {\n\t    if (!g) g = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\t    if (string) g.setAttribute(\"transform\", string), t = g.transform.baseVal.consolidate();\n\t\n\t    var t,\n\t        m = t ? t.matrix : identity,\n\t        r0 = [m.a, m.b],\n\t        r1 = [m.c, m.d],\n\t        kx = normalize(r0),\n\t        kz = dot(r0, r1),\n\t        ky = normalize(combine(r1, r0, -kz)) || 0;\n\t\n\t    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n\t      r0[0] *= -1;\n\t      r0[1] *= -1;\n\t      kx *= -1;\n\t      kz *= -1;\n\t    }\n\t\n\t    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * rad2deg;\n\t    this.translate = [m.e, m.f];\n\t    this.scale = [kx, ky];\n\t    this.skew = ky ? Math.atan2(kz, ky) * rad2deg : 0;\n\t  }\n\t\n\t  function dot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1];\n\t  }\n\t\n\t  function normalize(a) {\n\t    var k = Math.sqrt(dot(a, a));\n\t    if (k) a[0] /= k, a[1] /= k;\n\t    return k;\n\t  }\n\t\n\t  function combine(a, b, k) {\n\t    a[0] += k * b[0];\n\t    a[1] += k * b[1];\n\t    return a;\n\t  }\n\t\n\t  function pop(s) {\n\t    return s.length ? s.pop() + \",\" : \"\";\n\t  }\n\t\n\t  function translate(ta, tb, s, q) {\n\t    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n\t      var i = s.push(\"translate(\", null, \",\", null, \")\");\n\t      q.push({i: i - 4, x: number(ta[0], tb[0])}, {i: i - 2, x: number(ta[1], tb[1])});\n\t    } else if (tb[0] || tb[1]) {\n\t      s.push(\"translate(\" + tb + \")\");\n\t    }\n\t  }\n\t\n\t  function rotate(ra, rb, s, q) {\n\t    if (ra !== rb) {\n\t      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360; // shortest path\n\t      q.push({i: s.push(pop(s) + \"rotate(\", null, \")\") - 2, x: number(ra, rb)});\n\t    } else if (rb) {\n\t      s.push(pop(s) + \"rotate(\" + rb + \")\");\n\t    }\n\t  }\n\t\n\t  function skew(wa, wb, s, q) {\n\t    if (wa !== wb) {\n\t      q.push({i: s.push(pop(s) + \"skewX(\", null, \")\") - 2, x: number(wa, wb)});\n\t    } else if (wb) {\n\t      s.push(pop(s) + \"skewX(\" + wb + \")\");\n\t    }\n\t  }\n\t\n\t  function scale(ka, kb, s, q) {\n\t    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n\t      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({i: i - 4, x: number(ka[0], kb[0])}, {i: i - 2, x: number(ka[1], kb[1])});\n\t    } else if (kb[0] !== 1 || kb[1] !== 1) {\n\t      s.push(pop(s) + \"scale(\" + kb + \")\");\n\t    }\n\t  }\n\t\n\t  function transform(a, b) {\n\t    var s = [], // string constants and placeholders\n\t        q = []; // number interpolators\n\t    a = new Transform(a), b = new Transform(b);\n\t    translate(a.translate, b.translate, s, q);\n\t    rotate(a.rotate, b.rotate, s, q);\n\t    skew(a.skew, b.skew, s, q);\n\t    scale(a.scale, b.scale, s, q);\n\t    a = b = null; // gc\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  };\n\t\n\t  var rho = Math.SQRT2;\n\t  var rho2 = 2;\n\t  var rho4 = 4;\n\t  var epsilon2 = 1e-12;\n\t  function cosh(x) {\n\t    return ((x = Math.exp(x)) + 1 / x) / 2;\n\t  }\n\t\n\t  function sinh(x) {\n\t    return ((x = Math.exp(x)) - 1 / x) / 2;\n\t  }\n\t\n\t  function tanh(x) {\n\t    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t  }\n\t\n\t  // p0 = [ux0, uy0, w0]\n\t  // p1 = [ux1, uy1, w1]\n\t  function zoom(p0, p1) {\n\t    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n\t        ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n\t        dx = ux1 - ux0,\n\t        dy = uy1 - uy0,\n\t        d2 = dx * dx + dy * dy,\n\t        i,\n\t        S;\n\t\n\t    // Special case for u0 ≅ u1.\n\t    if (d2 < epsilon2) {\n\t      S = Math.log(w1 / w0) / rho;\n\t      i = function(t) {\n\t        return [\n\t          ux0 + t * dx,\n\t          uy0 + t * dy,\n\t          w0 * Math.exp(rho * t * S)\n\t        ];\n\t      }\n\t    }\n\t\n\t    // General case.\n\t    else {\n\t      var d1 = Math.sqrt(d2),\n\t          b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n\t          b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n\t          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n\t          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t      S = (r1 - r0) / rho;\n\t      i = function(t) {\n\t        var s = t * S,\n\t            coshr0 = cosh(r0),\n\t            u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n\t        return [\n\t          ux0 + u * dx,\n\t          uy0 + u * dy,\n\t          w0 * coshr0 / cosh(rho * s + r0)\n\t        ];\n\t      }\n\t    }\n\t\n\t    i.duration = S * 1000;\n\t\n\t    return i;\n\t  };\n\t\n\t  function deltaHue(h1, h0) {\n\t    var delta = h1 - h0;\n\t    return delta > 180 || delta < -180\n\t        ? delta - 360 * Math.round(delta / 360)\n\t        : delta;\n\t  };\n\t\n\t  function hsl(a, b) {\n\t    a = d3Color.hsl(a);\n\t    b = d3Color.hsl(b);\n\t    var ah = isNaN(a.h) ? b.h : a.h,\n\t        as = isNaN(a.s) ? b.s : a.s,\n\t        al = a.l,\n\t        bh = isNaN(b.h) ? 0 : deltaHue(b.h, ah),\n\t        bs = isNaN(b.s) ? 0 : b.s - as,\n\t        bl = b.l - al;\n\t    return function(t) {\n\t      a.h = ah + bh * t;\n\t      a.s = as + bs * t;\n\t      a.l = al + bl * t;\n\t      return a + \"\";\n\t    };\n\t  };\n\t\n\t  function hslLong(a, b) {\n\t    a = d3Color.hsl(a);\n\t    b = d3Color.hsl(b);\n\t    var ah = isNaN(a.h) ? b.h : a.h,\n\t        as = isNaN(a.s) ? b.s : a.s,\n\t        al = a.l,\n\t        bh = isNaN(b.h) ? 0 : b.h - ah,\n\t        bs = isNaN(b.s) ? 0 : b.s - as,\n\t        bl = b.l - al;\n\t    return function(t) {\n\t      a.h = ah + bh * t;\n\t      a.s = as + bs * t;\n\t      a.l = al + bl * t;\n\t      return a + \"\";\n\t    };\n\t  };\n\t\n\t  function lab(a, b) {\n\t    a = d3Color.lab(a);\n\t    b = d3Color.lab(b);\n\t    var al = a.l,\n\t        aa = a.a,\n\t        ab = a.b,\n\t        bl = b.l - al,\n\t        ba = b.a - aa,\n\t        bb = b.b - ab;\n\t    return function(t) {\n\t      a.l = al + bl * t;\n\t      a.a = aa + ba * t;\n\t      a.b = ab + bb * t;\n\t      return a + \"\";\n\t    };\n\t  };\n\t\n\t  function hcl(a, b) {\n\t    a = d3Color.hcl(a);\n\t    b = d3Color.hcl(b);\n\t    var ah = isNaN(a.h) ? b.h : a.h,\n\t        ac = isNaN(a.c) ? b.c : a.c,\n\t        al = a.l,\n\t        bh = isNaN(b.h) ? 0 : deltaHue(b.h, ah),\n\t        bc = isNaN(b.c) ? 0 : b.c - ac,\n\t        bl = b.l - al;\n\t    return function(t) {\n\t      a.h = ah + bh * t;\n\t      a.c = ac + bc * t;\n\t      a.l = al + bl * t;\n\t      return a + \"\";\n\t    };\n\t  };\n\t\n\t  function hclLong(a, b) {\n\t    a = d3Color.hcl(a);\n\t    b = d3Color.hcl(b);\n\t    var ah = isNaN(a.h) ? b.h : a.h,\n\t        ac = isNaN(a.c) ? b.c : a.c,\n\t        al = a.l,\n\t        bh = isNaN(b.h) ? 0 : b.h - ah,\n\t        bc = isNaN(b.c) ? 0 : b.c - ac,\n\t        bl = b.l - al;\n\t    return function(t) {\n\t      a.h = ah + bh * t;\n\t      a.c = ac + bc * t;\n\t      a.l = al + bl * t;\n\t      return a + \"\";\n\t    };\n\t  };\n\t\n\t  function cubehelix(a, b, gamma) {\n\t    if (arguments.length < 3) gamma = 1;\n\t    a = d3Color.cubehelix(a);\n\t    b = d3Color.cubehelix(b);\n\t    var ah = isNaN(a.h) ? b.h : a.h,\n\t        as = isNaN(a.s) ? b.s : a.s,\n\t        al = a.l,\n\t        bh = isNaN(b.h) ? 0 : deltaHue(b.h, ah),\n\t        bs = isNaN(b.s) ? 0 : b.s - as,\n\t        bl = b.l - al;\n\t    return function(t) {\n\t      a.h = ah + bh * t;\n\t      a.s = as + bs * t;\n\t      a.l = al + bl * Math.pow(t, gamma);\n\t      return a + \"\";\n\t    };\n\t  };\n\t\n\t  function cubehelixLong(a, b, gamma) {\n\t    if (arguments.length < 3) gamma = 1;\n\t    a = d3Color.cubehelix(a);\n\t    b = d3Color.cubehelix(b);\n\t    var ah = isNaN(a.h) ? b.h : a.h,\n\t        as = isNaN(a.s) ? b.s : a.s,\n\t        al = a.l,\n\t        bh = isNaN(b.h) ? 0 : b.h - ah,\n\t        bs = isNaN(b.s) ? 0 : b.s - as,\n\t        bl = b.l - al;\n\t    return function(t) {\n\t      a.h = ah + bh * t;\n\t      a.s = as + bs * t;\n\t      a.l = al + bl * Math.pow(t, gamma);\n\t      return a + \"\";\n\t    };\n\t  };\n\t\n\t  var slice = Array.prototype.slice;\n\t\n\t  function bindN(type, args) {\n\t    args = slice.call(args);\n\t    args[0] = null;\n\t    args.unshift(null);\n\t    return function(a, b) {\n\t      args[0] = a;\n\t      args[1] = b;\n\t      return type.apply(null, args);\n\t    };\n\t  }\n\t\n\t  function bind(type) {\n\t    return arguments.length === 1 ? type : bindN(type, arguments);\n\t  };\n\t\n\t  var version = \"0.4.0\";\n\t\n\t  exports.version = version;\n\t  exports.interpolate = value;\n\t  exports.interpolators = values;\n\t  exports.interpolateArray = array;\n\t  exports.interpolateNumber = number;\n\t  exports.interpolateObject = object;\n\t  exports.interpolateRound = round;\n\t  exports.interpolateString = string;\n\t  exports.interpolateTransform = transform;\n\t  exports.interpolateZoom = zoom;\n\t  exports.interpolateRgb = rgb;\n\t  exports.interpolateHsl = hsl;\n\t  exports.interpolateHslLong = hslLong;\n\t  exports.interpolateLab = lab;\n\t  exports.interpolateHcl = hcl;\n\t  exports.interpolateHclLong = hclLong;\n\t  exports.interpolateCubehelix = cubehelix;\n\t  exports.interpolateCubehelixLong = cubehelixLong;\n\t  exports.interpolateBind = bind;\n\t\n\t}));\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function (global, factory) {\n\t   true ? factory(exports) :\n\t  typeof define === 'function' && define.amd ? define('d3-color', ['exports'], factory) :\n\t  factory((global.d3_color = {}));\n\t}(this, function (exports) { 'use strict';\n\t\n\t  function Color() {};\n\t\n\t  var darker = 0.7;\n\t  var brighter = 1 / darker;\n\t\n\t  var reHex3 = /^#([0-9a-f]{3})$/;\n\t  var reHex6 = /^#([0-9a-f]{6})$/;\n\t  var reRgbInteger = /^rgb\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*\\)$/;\n\t  var reRgbPercent = /^rgb\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n\t  var reHslPercent = /^hsl\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n\t  var named = {\n\t    aliceblue: 0xf0f8ff,\n\t    antiquewhite: 0xfaebd7,\n\t    aqua: 0x00ffff,\n\t    aquamarine: 0x7fffd4,\n\t    azure: 0xf0ffff,\n\t    beige: 0xf5f5dc,\n\t    bisque: 0xffe4c4,\n\t    black: 0x000000,\n\t    blanchedalmond: 0xffebcd,\n\t    blue: 0x0000ff,\n\t    blueviolet: 0x8a2be2,\n\t    brown: 0xa52a2a,\n\t    burlywood: 0xdeb887,\n\t    cadetblue: 0x5f9ea0,\n\t    chartreuse: 0x7fff00,\n\t    chocolate: 0xd2691e,\n\t    coral: 0xff7f50,\n\t    cornflowerblue: 0x6495ed,\n\t    cornsilk: 0xfff8dc,\n\t    crimson: 0xdc143c,\n\t    cyan: 0x00ffff,\n\t    darkblue: 0x00008b,\n\t    darkcyan: 0x008b8b,\n\t    darkgoldenrod: 0xb8860b,\n\t    darkgray: 0xa9a9a9,\n\t    darkgreen: 0x006400,\n\t    darkgrey: 0xa9a9a9,\n\t    darkkhaki: 0xbdb76b,\n\t    darkmagenta: 0x8b008b,\n\t    darkolivegreen: 0x556b2f,\n\t    darkorange: 0xff8c00,\n\t    darkorchid: 0x9932cc,\n\t    darkred: 0x8b0000,\n\t    darksalmon: 0xe9967a,\n\t    darkseagreen: 0x8fbc8f,\n\t    darkslateblue: 0x483d8b,\n\t    darkslategray: 0x2f4f4f,\n\t    darkslategrey: 0x2f4f4f,\n\t    darkturquoise: 0x00ced1,\n\t    darkviolet: 0x9400d3,\n\t    deeppink: 0xff1493,\n\t    deepskyblue: 0x00bfff,\n\t    dimgray: 0x696969,\n\t    dimgrey: 0x696969,\n\t    dodgerblue: 0x1e90ff,\n\t    firebrick: 0xb22222,\n\t    floralwhite: 0xfffaf0,\n\t    forestgreen: 0x228b22,\n\t    fuchsia: 0xff00ff,\n\t    gainsboro: 0xdcdcdc,\n\t    ghostwhite: 0xf8f8ff,\n\t    gold: 0xffd700,\n\t    goldenrod: 0xdaa520,\n\t    gray: 0x808080,\n\t    green: 0x008000,\n\t    greenyellow: 0xadff2f,\n\t    grey: 0x808080,\n\t    honeydew: 0xf0fff0,\n\t    hotpink: 0xff69b4,\n\t    indianred: 0xcd5c5c,\n\t    indigo: 0x4b0082,\n\t    ivory: 0xfffff0,\n\t    khaki: 0xf0e68c,\n\t    lavender: 0xe6e6fa,\n\t    lavenderblush: 0xfff0f5,\n\t    lawngreen: 0x7cfc00,\n\t    lemonchiffon: 0xfffacd,\n\t    lightblue: 0xadd8e6,\n\t    lightcoral: 0xf08080,\n\t    lightcyan: 0xe0ffff,\n\t    lightgoldenrodyellow: 0xfafad2,\n\t    lightgray: 0xd3d3d3,\n\t    lightgreen: 0x90ee90,\n\t    lightgrey: 0xd3d3d3,\n\t    lightpink: 0xffb6c1,\n\t    lightsalmon: 0xffa07a,\n\t    lightseagreen: 0x20b2aa,\n\t    lightskyblue: 0x87cefa,\n\t    lightslategray: 0x778899,\n\t    lightslategrey: 0x778899,\n\t    lightsteelblue: 0xb0c4de,\n\t    lightyellow: 0xffffe0,\n\t    lime: 0x00ff00,\n\t    limegreen: 0x32cd32,\n\t    linen: 0xfaf0e6,\n\t    magenta: 0xff00ff,\n\t    maroon: 0x800000,\n\t    mediumaquamarine: 0x66cdaa,\n\t    mediumblue: 0x0000cd,\n\t    mediumorchid: 0xba55d3,\n\t    mediumpurple: 0x9370db,\n\t    mediumseagreen: 0x3cb371,\n\t    mediumslateblue: 0x7b68ee,\n\t    mediumspringgreen: 0x00fa9a,\n\t    mediumturquoise: 0x48d1cc,\n\t    mediumvioletred: 0xc71585,\n\t    midnightblue: 0x191970,\n\t    mintcream: 0xf5fffa,\n\t    mistyrose: 0xffe4e1,\n\t    moccasin: 0xffe4b5,\n\t    navajowhite: 0xffdead,\n\t    navy: 0x000080,\n\t    oldlace: 0xfdf5e6,\n\t    olive: 0x808000,\n\t    olivedrab: 0x6b8e23,\n\t    orange: 0xffa500,\n\t    orangered: 0xff4500,\n\t    orchid: 0xda70d6,\n\t    palegoldenrod: 0xeee8aa,\n\t    palegreen: 0x98fb98,\n\t    paleturquoise: 0xafeeee,\n\t    palevioletred: 0xdb7093,\n\t    papayawhip: 0xffefd5,\n\t    peachpuff: 0xffdab9,\n\t    peru: 0xcd853f,\n\t    pink: 0xffc0cb,\n\t    plum: 0xdda0dd,\n\t    powderblue: 0xb0e0e6,\n\t    purple: 0x800080,\n\t    rebeccapurple: 0x663399,\n\t    red: 0xff0000,\n\t    rosybrown: 0xbc8f8f,\n\t    royalblue: 0x4169e1,\n\t    saddlebrown: 0x8b4513,\n\t    salmon: 0xfa8072,\n\t    sandybrown: 0xf4a460,\n\t    seagreen: 0x2e8b57,\n\t    seashell: 0xfff5ee,\n\t    sienna: 0xa0522d,\n\t    silver: 0xc0c0c0,\n\t    skyblue: 0x87ceeb,\n\t    slateblue: 0x6a5acd,\n\t    slategray: 0x708090,\n\t    slategrey: 0x708090,\n\t    snow: 0xfffafa,\n\t    springgreen: 0x00ff7f,\n\t    steelblue: 0x4682b4,\n\t    tan: 0xd2b48c,\n\t    teal: 0x008080,\n\t    thistle: 0xd8bfd8,\n\t    tomato: 0xff6347,\n\t    turquoise: 0x40e0d0,\n\t    violet: 0xee82ee,\n\t    wheat: 0xf5deb3,\n\t    white: 0xffffff,\n\t    whitesmoke: 0xf5f5f5,\n\t    yellow: 0xffff00,\n\t    yellowgreen: 0x9acd32\n\t  };\n\t\n\t  color.prototype = Color.prototype = {\n\t    displayable: function() {\n\t      return this.rgb().displayable();\n\t    },\n\t    toString: function() {\n\t      return this.rgb() + \"\";\n\t    }\n\t  };\n\t\n\t  function color(format) {\n\t    var m;\n\t    format = (format + \"\").trim().toLowerCase();\n\t    return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf))) // #f00\n\t        : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n\t        : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3]) // rgb(255,0,0)\n\t        : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100) // rgb(100%,0%,0%)\n\t        : (m = reHslPercent.exec(format)) ? new Hsl(m[1], m[2] / 100, m[3] / 100) // hsl(120,50%,50%)\n\t        : named.hasOwnProperty(format) ? rgbn(named[format])\n\t        : null;\n\t  };\n\t\n\t  function rgbn(n) {\n\t    return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff);\n\t  }\n\t\n\t  function rgb(r, g, b) {\n\t    if (arguments.length === 1) {\n\t      if (!(r instanceof Color)) r = color(r);\n\t      if (r) {\n\t        r = r.rgb();\n\t        b = r.b;\n\t        g = r.g;\n\t        r = r.r;\n\t      } else {\n\t        r = g = b = NaN;\n\t      }\n\t    }\n\t    return new Rgb(r, g, b);\n\t  };\n\t\n\t  function Rgb(r, g, b) {\n\t    this.r = +r;\n\t    this.g = +g;\n\t    this.b = +b;\n\t  };\n\t\n\t  var _rgb = rgb.prototype = Rgb.prototype = new Color;\n\t\n\t  _rgb.brighter = function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k);\n\t  };\n\t\n\t  _rgb.darker = function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k);\n\t  };\n\t\n\t  _rgb.rgb = function() {\n\t    return this;\n\t  };\n\t\n\t  _rgb.displayable = function() {\n\t    return (0 <= this.r && this.r <= 255)\n\t        && (0 <= this.g && this.g <= 255)\n\t        && (0 <= this.b && this.b <= 255);\n\t  };\n\t\n\t  _rgb.toString = function() {\n\t    var r = Math.round(this.r),\n\t        g = Math.round(this.g),\n\t        b = Math.round(this.b);\n\t    return \"#\"\n\t        + (isNaN(r) || r <= 0 ? \"00\" : r < 16 ? \"0\" + r.toString(16) : r >= 255 ? \"ff\" : r.toString(16))\n\t        + (isNaN(g) || g <= 0 ? \"00\" : g < 16 ? \"0\" + g.toString(16) : g >= 255 ? \"ff\" : g.toString(16))\n\t        + (isNaN(b) || b <= 0 ? \"00\" : b < 16 ? \"0\" + b.toString(16) : b >= 255 ? \"ff\" : b.toString(16));\n\t  };\n\t\n\t  function hsl(h, s, l) {\n\t    if (arguments.length === 1) {\n\t      if (h instanceof Hsl) {\n\t        l = h.l;\n\t        s = h.s;\n\t        h = h.h;\n\t      } else {\n\t        if (!(h instanceof Color)) h = color(h);\n\t        if (h) {\n\t          if (h instanceof Hsl) return h;\n\t          h = h.rgb();\n\t          var r = h.r / 255,\n\t              g = h.g / 255,\n\t              b = h.b / 255,\n\t              min = Math.min(r, g, b),\n\t              max = Math.max(r, g, b),\n\t              range = max - min;\n\t          l = (max + min) / 2;\n\t          if (range) {\n\t            s = l < 0.5 ? range / (max + min) : range / (2 - max - min);\n\t            if (r === max) h = (g - b) / range + (g < b) * 6;\n\t            else if (g === max) h = (b - r) / range + 2;\n\t            else h = (r - g) / range + 4;\n\t            h *= 60;\n\t          } else {\n\t            h = NaN;\n\t            s = l > 0 && l < 1 ? 0 : h;\n\t          }\n\t        } else {\n\t          h = s = l = NaN;\n\t        }\n\t      }\n\t    }\n\t    return new Hsl(h, s, l);\n\t  };\n\t\n\t  function Hsl(h, s, l) {\n\t    this.h = +h;\n\t    this.s = +s;\n\t    this.l = +l;\n\t  };\n\t\n\t  var _hsl = hsl.prototype = Hsl.prototype = new Color;\n\t\n\t  _hsl.brighter = function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Hsl(this.h, this.s, this.l * k);\n\t  };\n\t\n\t  _hsl.darker = function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Hsl(this.h, this.s, this.l * k);\n\t  };\n\t\n\t  _hsl.rgb = function() {\n\t    var h = this.h % 360 + (this.h < 0) * 360,\n\t        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n\t        l = this.l,\n\t        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n\t        m1 = 2 * l - m2;\n\t    return new Rgb(\n\t      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n\t      hsl2rgb(h, m1, m2),\n\t      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2)\n\t    );\n\t  };\n\t\n\t  _hsl.displayable = function() {\n\t    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n\t        && (0 <= this.l && this.l <= 1);\n\t  };\n\t\n\t  /* From FvD 13.37, CSS Color Module Level 3 */\n\t  function hsl2rgb(h, m1, m2) {\n\t    return (h < 60 ? m1 + (m2 - m1) * h / 60\n\t        : h < 180 ? m2\n\t        : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n\t        : m1) * 255;\n\t  }\n\t\n\t  var deg2rad = Math.PI / 180;\n\t  var rad2deg = 180 / Math.PI;\n\t\n\t  var Kn = 18;\n\t  var Xn = 0.950470;\n\t  var Yn = 1;\n\t  var Zn = 1.088830;\n\t  var t0 = 4 / 29;\n\t  var t1 = 6 / 29;\n\t  var t2 = 3 * t1 * t1;\n\t  var t3 = t1 * t1 * t1;\n\t  function lab(l, a, b) {\n\t    if (arguments.length === 1) {\n\t      if (l instanceof Lab) {\n\t        b = l.b;\n\t        a = l.a;\n\t        l = l.l;\n\t      } else if (l instanceof Hcl) {\n\t        var h = l.h * deg2rad;\n\t        b = Math.sin(h) * l.c;\n\t        a = Math.cos(h) * l.c;\n\t        l = l.l;\n\t      } else {\n\t        if (!(l instanceof Rgb)) l = rgb(l);\n\t        var r = rgb2xyz(l.r),\n\t            g = rgb2xyz(l.g),\n\t            b = rgb2xyz(l.b),\n\t            x = xyz2lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / Xn),\n\t            y = xyz2lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / Yn),\n\t            z = xyz2lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / Zn);\n\t        b = 200 * (y - z);\n\t        a = 500 * (x - y);\n\t        l = 116 * y - 16;\n\t      }\n\t    }\n\t    return new Lab(l, a, b);\n\t  };\n\t\n\t  function Lab(l, a, b) {\n\t    this.l = +l;\n\t    this.a = +a;\n\t    this.b = +b;\n\t  };\n\t\n\t  var _lab = lab.prototype = Lab.prototype = new Color;\n\t\n\t  _lab.brighter = function(k) {\n\t    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b);\n\t  };\n\t\n\t  _lab.darker = function(k) {\n\t    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b);\n\t  };\n\t\n\t  _lab.rgb = function() {\n\t    var y = (this.l + 16) / 116,\n\t        x = isNaN(this.a) ? y : y + this.a / 500,\n\t        z = isNaN(this.b) ? y : y - this.b / 200;\n\t    y = Yn * lab2xyz(y);\n\t    x = Xn * lab2xyz(x);\n\t    z = Zn * lab2xyz(z);\n\t    return new Rgb(\n\t      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n\t      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n\t      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z)\n\t    );\n\t  };\n\t\n\t  function xyz2lab(t) {\n\t    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n\t  }\n\t\n\t  function lab2xyz(t) {\n\t    return t > t1 ? t * t * t : t2 * (t - t0);\n\t  }\n\t\n\t  function xyz2rgb(x) {\n\t    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n\t  }\n\t\n\t  function rgb2xyz(x) {\n\t    return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n\t  }\n\t\n\t  function hcl(h, c, l) {\n\t    if (arguments.length === 1) {\n\t      if (h instanceof Hcl) {\n\t        l = h.l;\n\t        c = h.c;\n\t        h = h.h;\n\t      } else {\n\t        if (!(h instanceof Lab)) h = lab(h);\n\t        l = h.l;\n\t        c = Math.sqrt(h.a * h.a + h.b * h.b);\n\t        h = Math.atan2(h.b, h.a) * rad2deg;\n\t        if (h < 0) h += 360;\n\t      }\n\t    }\n\t    return new Hcl(h, c, l);\n\t  };\n\t\n\t  function Hcl(h, c, l) {\n\t    this.h = +h;\n\t    this.c = +c;\n\t    this.l = +l;\n\t  };\n\t\n\t  var _hcl = hcl.prototype = Hcl.prototype = new Color;\n\t\n\t  _hcl.brighter = function(k) {\n\t    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k));\n\t  };\n\t\n\t  _hcl.darker = function(k) {\n\t    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k));\n\t  };\n\t\n\t  _hcl.rgb = function() {\n\t    return lab(this).rgb();\n\t  };\n\t\n\t  var A = -0.14861;\n\t  var B = +1.78277;\n\t  var C = -0.29227;\n\t  var D = -0.90649;\n\t  var E = +1.97294;\n\t  var ED = E * D;\n\t  var EB = E * B;\n\t  var BC_DA = B * C - D * A;\n\t  function cubehelix(h, s, l) {\n\t    if (arguments.length === 1) {\n\t      if (h instanceof Cubehelix) {\n\t        l = h.l;\n\t        s = h.s;\n\t        h = h.h;\n\t      } else {\n\t        if (!(h instanceof Rgb)) h = rgb(h);\n\t        var r = h.r / 255, g = h.g / 255, b = h.b / 255;\n\t        l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB);\n\t        var bl = b - l, k = (E * (g - l) - C * bl) / D;\n\t        s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)); // NaN if l=0 or l=1\n\t        h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n\t        if (h < 0) h += 360;\n\t      }\n\t    }\n\t    return new Cubehelix(h, s, l);\n\t  };\n\t\n\t  function Cubehelix(h, s, l) {\n\t    this.h = +h;\n\t    this.s = +s;\n\t    this.l = +l;\n\t  };\n\t\n\t  var _cubehelix = cubehelix.prototype = Cubehelix.prototype = new Color;\n\t\n\t  _cubehelix.brighter = function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k);\n\t  };\n\t\n\t  _cubehelix.darker = function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k);\n\t  };\n\t\n\t  _cubehelix.rgb = function() {\n\t    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n\t        l = +this.l,\n\t        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n\t        cosh = Math.cos(h),\n\t        sinh = Math.sin(h);\n\t    return new Rgb(\n\t      255 * (l + a * (A * cosh + B * sinh)),\n\t      255 * (l + a * (C * cosh + D * sinh)),\n\t      255 * (l + a * (E * cosh))\n\t    );\n\t  };\n\t\n\t  var version = \"0.3.3\";\n\t\n\t  exports.version = version;\n\t  exports.color = color;\n\t  exports.rgb = rgb;\n\t  exports.hsl = hsl;\n\t  exports.lab = lab;\n\t  exports.hcl = hcl;\n\t  exports.cubehelix = cubehelix;\n\t\n\t}));\n\n/***/ }\n/******/ ])\n});\n;\n//# sourceMappingURL=ndarray-heatmap.js.map"],"sourceRoot":"/source/"}