{"version":3,"sources":["ndarray-heatmap.min.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","heatmap","render","_","canvas","document","createElement","width","data","shape","height","ctx","getContext","imgData","getImageData","imgArray","_extent","_d3Array","extent","_extent2","_slicedToArray","min","max","colorScale","_d3Interpolate","interpolateLab","apply","undefined","colorRange","colors","colorSteps","push","_d3Color","rgb","renderToCanvas","putImageData","_ndarray2","Float64Array","arguments","_ndarrayPack2","Error","sliceIterator","_arr","_n","_d","_e","_s","_i","Symbol","iterator","next","done","value","err","Object","TypeError","defineProperty","_ndarray","_ndarrayPack","_cwise","_cwise2","args","body","imgWidth","colorIndex","Math","round","_colors$colorIndex","r","g","b","a","base","compare1st","order","stride","terms","abs","sort","result","compileConstructor","dtype","dimension","className","join","useGetters","code","procedure","Function","CACHED_CONSTRUCTORS","indices","iota","map","index_str","shapeArg","strideArg","a_vars","c_vars","tShape","tStride","n","idx","arrayDType","isBuffer","hasTypedArrays","prototype","toString","wrappedNDArrayCtor","offset","ctor","array","d","sz","ctor_list","float32","float64","int8","int16","int32","uint8","uint16","uint32","uint8_clamped","buffer","generic","_isBuffer","constructor","ndarray","do_convert","pre","thisVars","localVars","name","lvalue","rvalue","count","post","funcName","blockSize","Procedure","argTypes","shimArgs","arrayArgs","arrayBlockIndices","scalarArgs","offsetArgs","offsetArgIndex","indexArgs","shapeArgs","debug","compileCwise","user_args","proc","proc_args","slice","arg_type","blockIndices","printCode","createThunk","vars","thunkName","typesig","string_typesig","shapeLengthConditions","shapeConditions","j","console","log","thunk","compile","bind","innerFill","nargs","has_index","pidx","outerFill","matched","indexStr","countMatches","orders","processBlock","block","dtypes","carg","re","RegExp","ptrStr","arrNum","indexOf","offArgIndex","offArg","localStr","arrStr","replace","reStrArr","ptrStrArr","trim","typeSummary","summary","allEqual","t","digits","match","charAt","generateCWiseOp","blockBegin","blockEnd","loopBegin","loopEnd","loopOrders","newOrder","arglist","zeros","off_arg","init_string","uniq","concat","loopName","f","unique_pred","list","compare","ptr","len","unique_eq","unique","sorted","createCWise","REQUIRED_FIELDS","OPTIONAL_FIELDS","warn","parse","CompiledArgument","CompiledRoutine","isGlobal","identifier","window","GLOBAL","self","getArgNames","ast","params","expression","callee","names","preprocess","func","createLocal","nstr","prefix","createThisVar","rewrite","node","lo","range","hi","exploded","escapeString","str","source","getUsage","parent","type","left","operator","LVALUE","RVALUE","src","esprima","PREFIX_COUNTER","argNames","compiledArgs","visit","computed","object","property","argNo","usage","keys","routine","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","assert","condition","message","isDecimalDigit","ch","isHexDigit","isOctalDigit","isWhiteSpace","isLineTerminator","isIdentifierStart","Regex","NonAsciiIdentifierStart","test","String","fromCharCode","isIdentifierPart","NonAsciiIdentifierPart","isFutureReservedWord","isStrictModeReservedWord","isRestrictedWord","isKeyword","strict","addComment","start","end","loc","comment","state","lastCommentStart","extra","comments","attachComment","leadingComments","trailingComments","skipSingleLineComment","index","line","lineNumber","column","lineStart","charCodeAt","skipMultiLineComment","throwError","Messages","UnexpectedToken","skipComment","scanHexEscape","toLowerCase","getEscapedIdentifier","substr","getIdentifier","scanIdentifier","Token","Identifier","Keyword","NullLiteral","BooleanLiteral","scanPunctuator","code2","ch2","ch3","ch4","ch1","tokenize","openParenToken","tokens","openCurlyToken","Punctuator","scanHexLiteral","number","NumericLiteral","parseInt","scanOctalLiteral","octal","isImplicitOctalLiteral","scanNumericLiteral","parseFloat","scanStringLiteral","quote","unescaped","restore","startLineNumber","startLineStart","StringLiteral","testRegExp","pattern","flags","e","InvalidRegExp","scanRegExpBody","classMarker","terminated","UnterminatedRegExp","literal","scanRegExpFlags","throwErrorTolerant","scanRegExp","lookahead","RegularExpression","collectRegex","pos","regex","token","pop","isIdentifierName","advanceSlash","prevToken","checkToken","FnExprTokens","advance","EOF","collectToken","TokenName","lex","peek","Position","SourceLocation","startLine","startColumn","peekLineTerminator","found","messageFormat","error","msg","whole","description","errors","throwUnexpected","UnexpectedEOS","UnexpectedNumber","UnexpectedString","UnexpectedIdentifier","UnexpectedReserved","StrictReservedWord","expect","expectKeyword","keyword","matchKeyword","matchAssign","op","consumeSemicolon","oldIndex","oldLineNumber","oldLineStart","oldLookahead","isLeftHandSide","expr","Syntax","MemberExpression","parseArrayInitialiser","startToken","elements","parseAssignmentExpression","delegate","markEnd","createArrayExpression","parsePropertyFunction","param","first","previousStrict","parseFunctionSourceElements","StrictParamName","createFunctionExpression","parseObjectPropertyKey","StrictOctalLiteral","createLiteral","createIdentifier","parseObjectProperty","key","createProperty","parseVariableIdentifier","parseObjectInitialiser","kind","properties","PropertyKind","Data","Get","Set","hasOwnProperty","StrictDuplicateProperty","AccessorDataProperty","AccessorGetSet","createObjectExpression","parseGroupExpression","parseExpression","parsePrimaryExpression","parseFunctionExpression","createThisExpression","parseArguments","parseNonComputedProperty","parseNonComputedMember","parseComputedMember","parseNewExpression","parseLeftHandSideExpression","createNewExpression","parseLeftHandSideExpressionAllowCall","previousAllowIn","allowIn","createMemberExpression","createCallExpression","parsePostfixExpression","StrictLHSPostfix","InvalidLHSInAssignment","createPostfixExpression","parseUnaryExpression","StrictLHSPrefix","createUnaryExpression","argument","StrictDelete","binaryPrecedence","prec","parseBinaryExpression","marker","markers","stack","right","createBinaryExpression","parseConditionalExpression","consequent","alternate","createConditionalExpression","StrictLHSAssignment","createAssignmentExpression","createSequenceExpression","expressions","parseStatementList","statement","parseSourceElement","parseBlock","createBlockStatement","parseVariableDeclaration","init","StrictVarName","createVariableDeclarator","parseVariableDeclarationList","parseVariableStatement","declarations","createVariableDeclaration","parseConstLetDeclaration","parseEmptyStatement","createEmptyStatement","parseExpressionStatement","createExpressionStatement","parseIfStatement","parseStatement","createIfStatement","parseDoWhileStatement","oldInIteration","inIteration","createDoWhileStatement","parseWhileStatement","createWhileStatement","parseForVariableDeclaration","parseForStatement","update","InvalidLHSInForIn","createForStatement","createForInStatement","parseContinueStatement","label","IllegalContinue","createContinueStatement","labelSet","UnknownLabel","parseBreakStatement","inSwitch","IllegalBreak","createBreakStatement","parseReturnStatement","inFunctionBody","IllegalReturn","createReturnStatement","parseWithStatement","StrictModeWith","createWithStatement","parseSwitchCase","createSwitchCase","parseSwitchStatement","discriminant","cases","clause","oldInSwitch","defaultFound","createSwitchStatement","MultipleDefaultsInSwitch","parseThrowStatement","NewlineAfterThrow","createThrowStatement","parseCatchClause","StrictCatchVariable","createCatchClause","parseTryStatement","handlers","finalizer","NoCatchOrFinally","createTryStatement","parseDebuggerStatement","createDebuggerStatement","labeledBody","parseFunctionDeclaration","Redeclaration","createLabeledStatement","sourceElement","directive","firstRestricted","oldLabelSet","oldInFunctionBody","sourceElements","Literal","parseParams","stricted","paramSet","StrictParamDupe","tmp","StrictFunctionName","createFunctionDeclaration","parseSourceElements","parseProgram","createProgram","filterTokenLocation","entry","options","SyntaxTreeDelegate","tolerant","lexError","program","bottomRightStack","AssignmentExpression","ArrayExpression","BlockStatement","BinaryExpression","BreakStatement","CallExpression","CatchClause","ConditionalExpression","ContinueStatement","DoWhileStatement","DebuggerStatement","EmptyStatement","ExpressionStatement","ForStatement","ForInStatement","FunctionDeclaration","FunctionExpression","IfStatement","LabeledStatement","LogicalExpression","NewExpression","ObjectExpression","Program","Property","ReturnStatement","SequenceExpression","SwitchStatement","SwitchCase","ThisExpression","ThrowStatement","TryStatement","UnaryExpression","UpdateExpression","VariableDeclaration","VariableDeclarator","WhileStatement","WithStatement","processComment","lastChild","postProcess","each","defaults","rest","generator","raw","accessor","guardedHandlers","version","types","create","freeze","global","ascending","NaN","bisector","ascendingComparator","x","mid","descending","number$1","variance","s","isNaN","deviation","v","sqrt","constant","identity","stop","step","ceil","ticks","tickStep","floor","step0","step1","pow","LN10","e10","e5","e2","sturges","values","LN2","histogram","xz","domain","x0","x1","tz","threshold","shift","bin","bins","bisectRight","thresholds","quantile","h","freedmanDiaconis","scott","mean","median","numbers","merge","arrays","merged","pairs","p0","p1","permute","indexes","permutes","scan","xi","xj","shuffle","i0","i1","random","sum","transpose","matrix","row","zip","ascendingBisect","bisectLeft","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","d3Color","ar","ag","ab","br","bg","bb","na","nb","n0","k","zero","one","string","am","bm","bs","bi","reA","lastIndex","reB","q","exec","o","Transform","createElementNS","setAttribute","transform","baseVal","consolidate","r0","r1","kx","normalize","kz","dot","ky","combine","rotate","atan2","rad2deg","translate","scale","skew","ta","tb","ra","rb","wa","wb","ka","kb","cosh","exp","sinh","tanh","zoom","S","ux0","uy0","w0","ux1","uy1","w1","dx","dy","d2","epsilon2","rho","d1","b0","rho4","rho2","b1","coshr0","u","duration","deltaHue","h1","h0","delta","hsl","ah","as","al","l","bh","bl","hslLong","lab","aa","ba","hcl","ac","bc","hclLong","cubehelix","gamma","cubehelixLong","bindN","unshift","color","PI","SQRT2","interpolate","interpolators","interpolateArray","interpolateNumber","interpolateObject","interpolateRound","interpolateString","interpolateTransform","interpolateZoom","interpolateRgb","interpolateHsl","interpolateHslLong","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","interpolateBind","Color","format","reHex3","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reHslPercent","Hsl","named","hsl2rgb","m1","m2","Lab","Hcl","deg2rad","sin","cos","rgb2xyz","xyz2lab","Xn","y","Yn","z","Zn","t3","t2","t0","lab2xyz","t1","xyz2rgb","Cubehelix","BC_DA","ED","EB","E","C","D","darker","brighter","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","_rgb","_hsl","Kn","_lab","_hcl","A","B","_cubehelix"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,gBAAZC,UAA0C,gBAAXC,QACxCA,OAAOD,QAAUD,IACQ,kBAAXG,SAAyBA,OAAOC,IAC9CD,UAAWH,GACe,gBAAZC,SACdA,QAAiB,QAAID,IAErBD,EAAc,QAAIC,KACjBK,KAAM,WACT,MAAgB,UAAUC,GAKhB,QAASC,GAAoBC,GAG5B,GAAGC,EAAiBD,GACnB,MAAOC,GAAiBD,GAAUP,OAGnC,IAAIC,GAASO,EAAiBD,IAC7BP,WACAS,GAAIF,EACJG,QAAQ,EAUT,OANAL,GAAQE,GAAUI,KAAKV,EAAOD,QAASC,EAAQA,EAAOD,QAASM,GAG/DL,EAAOS,QAAS,EAGTT,EAAOD,QAvBf,GAAIQ,KAqCJ,OATAF,GAAoBM,EAAIP,EAGxBC,EAAoBO,EAAIL,EAGxBF,EAAoBQ,EAAI,GAGjBR,EAAoB,KAK/B,SAASL,EAAQD,EAASM,GAE/B,YA2BA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAEvF,QAASG,GAAmBC,GAAO,GAAIC,MAAMC,QAAQF,GAAM,CAAE,IAAK,GAAIG,GAAI,EAAGC,EAAOH,MAAMD,EAAIK,QAASF,EAAIH,EAAIK,OAAQF,IAAOC,EAAKD,GAAKH,EAAIG,EAAM,OAAOC,GAAe,MAAOH,OAAMK,KAAKN,GAoB1L,QAASO,KAKP,QAASC,GAAOC,GACd,GAAIC,GAASD,GAAKE,SAASC,cAAc,SACzCF,GAAOG,MAAQC,EAAKC,MAAM,GAC1BL,EAAOM,OAASF,EAAKC,MAAM,EAe3B,KAAK,GAbDE,GAAMP,EAAOQ,WAAW,MACxBC,EAAUF,EAAIG,aAAa,EAAG,EAAGV,EAAOG,MAAOH,EAAOM,QACtDK,EAAWF,EAAQL,KAEnBQ,GAAW,EAAGC,EAASC,QAAQV,EAAKA,MAEpCW,EAAWC,EAAeJ,EAAS,GAEnCK,EAAMF,EAAS,GACfG,EAAMH,EAAS,GAEfI,EAAaC,EAAeC,eAAeC,MAAMC,OAAWlC,EAAmBmC,IAC/EC,KACKhC,EAAI,EAAOiC,EAAJjC,IAAkBA,EAChCgC,EAAOE,MAAM,EAAGC,EAASC,KAAKV,EAAW1B,GAAKiC,EAAa,KAK7D,OAHAI,GAAe1B,EAAMO,EAAUc,EAAQR,EAAKC,EAAKlB,EAAOG,OACxDI,EAAIwB,aAAatB,EAAS,EAAG,GAEtBT,EA5BT,GAAII,IAAQ,EAAG4B,EAAAA,YAAmB,GAAIC,eAAc,KAAM,EAAG,IACzDP,EAAa,IACbF,GAAc,UAAW,UAgD7B,OAnBA1B,GAAOM,KAAO,SAAUL,GACtB,IAAKmC,UAAUvC,OAAQ,MAAOS,EAK9B,IAFAL,EAAIA,EAAEM,MAAQN,GAAK,EAAGoC,EAAAA,YAAuBpC,GAEtB,IAAnBA,EAAEM,MAAMV,OAAc,KAAM,IAAIyC,OAAM,iBAAmBrC,EAAEM,MAAMV,OAErE,OADAS,GAAOL,EACAD,GAGTA,EAAO4B,WAAa,SAAU3B,GAC5B,MAAOmC,WAAUvC,QAAU+B,EAAa3B,EAAGD,GAAU4B,GAGvD5B,EAAO0B,WAAa,SAAUzB,GAC5B,MAAOmC,WAAUvC,QAAU6B,EAAazB,EAAGD,GAAU0B,GAGhD1B,EAlGT,GAAIkB,GAAiB,WAAc,QAASqB,GAAc/C,EAAKG,GAAK,GAAI6C,MAAeC,GAAK,EAAUC,GAAK,EAAWC,EAAKlB,MAAW,KAAM,IAAK,GAAiCmB,GAA7BC,EAAKrD,EAAIsD,OAAOC,cAAmBN,GAAMG,EAAKC,EAAGG,QAAQC,QAAoBT,EAAKX,KAAKe,EAAGM,QAAYvD,GAAK6C,EAAK3C,SAAWF,GAA3D8C,GAAK,IAAoE,MAAOU,GAAOT,GAAK,EAAMC,EAAKQ,EAAO,QAAU,KAAWV,GAAMI,EAAG,WAAWA,EAAG,YAAe,QAAU,GAAIH,EAAI,KAAMC,IAAQ,MAAOH,GAAQ,MAAO,UAAUhD,EAAKG,GAAK,GAAIF,MAAMC,QAAQF,GAAQ,MAAOA,EAAY,IAAIsD,OAAOC,WAAYK,QAAO5D,GAAQ,MAAO+C,GAAc/C,EAAKG,EAAa,MAAM,IAAI0D,WAAU,2DAEtlBD,QAAOE,eAAelF,EAAS,cAC7B8E,OAAO,IAET9E,EAAQ2B,QAAU0B,MAElB,IAAI8B,GAAW7E,EAAoB,GAE/BwD,EAAY/C,EAAuBoE,GAEnCC,EAAe9E,EAAoB,GAEnC2D,EAAgBlD,EAAuBqE,GAEvCC,EAAS/E,EAAoB,IAE7BgF,EAAUvE,EAAuBsE,GAEjC1C,EAAWrC,EAAoB,IAE/B4C,EAAiB5C,EAAoB,IAErCoD,EAAWpD,EAAoB,IAM/BsD,GAAkB,EAAG0B,EAAAA,aACvBC,MAAO,QAAS,QAAS,SAAU,SAAU,SAAU,SAAU,UACjEC,KAAM,SAAcjE,EAAGuD,EAAOrC,EAAUc,EAAQR,EAAKC,EAAKyC,GACxD,GAAIC,GAAaC,KAAKC,OAAOd,EAAQ/B,IAAQC,EAAMD,IAAQQ,EAAO9B,OAAS,IACvEoE,EAAqBtC,EAAOmC,GAC5BI,EAAID,EAAmBC,EACvBC,EAAIF,EAAmBE,EACvBC,EAAIH,EAAmBG,EACvBC,EAAIJ,EAAmBI,EAEvBC,EAAkC,GAA1B3E,EAAE,GAAKkE,EAAWlE,EAAE,GAChCkB,GAASyD,GAAQJ,EACjBrD,IAAWyD,GAAQH,EACnBtD,IAAWyD,GAAQF,EACnBvD,IAAWyD,GAAQD,GAAK,MA0D5BjG,GAAQ2B,QAAUA,GAIb,SAAS1B,EAAQD,EAASM,GAO/B,QAAS6F,GAAWF,EAAGD,GACrB,MAAOC,GAAE,GAAKD,EAAE,GAGlB,QAASI,KACP,GAEI7E,GAFA8E,EAASjG,KAAKiG,OACdC,EAAQ,GAAIjF,OAAMgF,EAAO5E,OAE7B,KAAIF,EAAE,EAAGA,EAAE+E,EAAM7E,SAAUF,EACzB+E,EAAM/E,IAAMoE,KAAKY,IAAIF,EAAO9E,IAAKA,EAEnC+E,GAAME,KAAKL,EACX,IAAIM,GAAS,GAAIpF,OAAMiF,EAAM7E,OAC7B,KAAIF,EAAE,EAAGA,EAAEkF,EAAOhF,SAAUF,EAC1BkF,EAAOlF,GAAK+E,EAAM/E,GAAG,EAEvB,OAAOkF,GAGT,QAASC,GAAmBC,EAAOC,GACjC,GAAIC,IAAa,OAAQD,EAAW,IAAKD,GAAOG,KAAK,GACtC,GAAZF,IACDC,EAAY,WAAaF,EAE3B,IAAII,GAAwB,YAAVJ,CAElB,IAAiB,KAAdC,EAAkB,CAEnB,GAAII,GACF,YAAYH,EAAU,gCAChBA,EAAU,4BACPF,EAAM,wLAMGE,EAAU,kHAGNA,EAAU,kBAAkBA,EAAU,QAC1DI,EAAY,GAAIC,UAASF,EAC7B,OAAOC,KACF,GAAiB,IAAdL,EAAiB,CAEzB,GAAII,GACF,YAAYH,EAAU,uDAIhBA,EAAU,4BACPF,EAAM,uLAUCE,EAAU,wBACnBA,EAAU,kDAEDA,EAAU,gFAGGA,EAAU,mBACnCE,EAAa,6BAA+B,0BACtD,yBACqBF,EAAU,oBACrBE,EAAa,+BAAiC,4BAA4B,iCAExDF,EAAU,wBAAwBA,EAAU,SAChEI,EAAY,GAAIC,UAAS,eAAgBF,EAC7C,OAAOC,GAAUE,EAAoBR,GAAO,IAG9C,GAAIK,IAAQ,gBAGRI,EAAUC,EAAKT,GACfrB,EAAO6B,EAAQE,IAAI,SAAS/F,GAAK,MAAO,IAAIA,IAC5CgG,EAAY,eAAiBH,EAAQE,IAAI,SAAS/F,GAChD,MAAO,eAAiBA,EAAI,MAAQA,IACnCuF,KAAK,KACRU,EAAWJ,EAAQE,IAAI,SAAS/F,GAChC,MAAO,IAAIA,IACVuF,KAAK,KACNW,EAAYL,EAAQE,IAAI,SAAS/F,GACjC,MAAO,IAAIA,IACVuF,KAAK,IACVE,GAAKvD,KACH,YAAYoD,EAAU,MAAQW,EAAW,IAAMC,EAAY,kBACzD,eAAiBD,EAAW,IAC5B,gBAAkBC,EAAY,IAC9B,mBACF,aAAaZ,EAAU,aACvB,gBAAgBF,EAAM,IACtB,mBAAmBC,GAGrBI,EAAKvD,KAAK,oDAAoDoD,EAAU,mBACjEO,EAAQE,IAAI,SAAS/F,GAAK,MAAO,cAAcA,EAAE,MAAOuF,KAAK,KACtE,OAGmB,IAAdF,EACDI,EAAKvD,KAAK,oBAEVuD,EAAKvD,KAAK,6CACK,EAAZmD,GACDI,EAAKvD,KAAK,YAAYoD,EAAU,aACf,IAAdD,EACDI,EAAKvD,KAAK,6EACY,IAAdmD,GACRI,EAAKvD,KACb,2RAkBMuD,EAAKvD,KAAK,YAKduD,EAAKvD,KACP,sBAAsBoD,EAAU,QAAQtB,EAAKuB,KAAK,KAAK,QAClDC,EACDC,EAAKvD,KAAK,wBAAwB8D,EAAU,QAE5CP,EAAKvD,KAAK,oBAAoB8D,EAAU,QAI1CP,EAAKvD,KAAK,sBAAsBoD,EAAU,QAAQtB,EAAKuB,KAAK,KAAK,MAC9DC,EACDC,EAAKvD,KAAK,wBAAwB8D,EAAU,MAE5CP,EAAKvD,KAAK,oBAAoB8D,EAAU,MAI1CP,EAAKvD,KACH,wBAAwBoD,EAAU,UAAWtB,EAAKuB,OAAQ,YAAYS,EAAU,KAGlFP,EAAKvD,KAAK,qBAAqBoD,EAAU,OAAOtB,EAAKuB,KAAK,KAAK,gBAAgBD,EAAU,cACvFO,EAAQE,IAAI,SAAS/F,GACnB,OAAQ,YAAYA,EAAE,iBAAiBA,EAAE,kBAAmBA,EAAG,MAAOA,EAAE,MAAMuF,KAAK,MAClFA,KAAK,KAAK,IACbM,EAAQE,IAAI,SAAS/F,GACnB,MAAO,eAAeA,EAAI,MACzBuF,KAAK,KAAK,iBAGf,IAAIY,GAASN,EAAQE,IAAI,SAAS/F,GAAK,MAAO,IAAIA,EAAE,eAAeA,EAAE,MACjEoG,EAASP,EAAQE,IAAI,SAAS/F,GAAK,MAAO,IAAIA,EAAE,gBAAgBA,EAAE,KACtEyF,GAAKvD,KAAK,qBAAqBoD,EAAU,OAAOtB,EAAKuB,KAAK,KAAK,2BAA2BY,EAAOZ,KAAK,KAAK,IAAIa,EAAOb,KAAK,KAC3H,KAAI,GAAIvF,GAAE,EAAKqF,EAAFrF,IAAeA,EAC1ByF,EAAKvD,KACT,cAAclC,EAAE,iBAAiBA,EAAE,YAC9BA,EAAE,WACDA,EAAE,QACLA,EAAE,OAEHyF,GAAKvD,KAAK,cAAcoD,EAAU,cAChCO,EAAQE,IAAI,SAAS/F,GACnB,MAAO,IAAIA,IACVuF,KAAK,KAAK,IACbM,EAAQE,IAAI,SAAS/F,GACnB,MAAO,IAAIA,IACVuF,KAAK,KAAK,QAGfE,EAAKvD,KAAK,uBAAuBoD,EAAU,SAAStB,EAAKuB,KAAK,KAAK,SACjEM,EAAQE,IAAI,SAAS/F,GACnB,MAAO,IAAIA,EAAE,eAAeA,EAAE,MAC7BuF,KAAK,KAAK,IACbM,EAAQE,IAAI,SAAS/F,GACnB,MAAO,IAAIA,EAAE,gBAAgBA,EAAE,MAC9BuF,KAAK,KAAK,oCACf,KAAI,GAAIvF,GAAE,EAAKqF,EAAFrF,IAAeA,EAC1ByF,EAAKvD,KACT,cAAclC,EAAE,oBACXA,EAAE,oBAEDA,EAAE,MAAMA,EAAE,SACbA,EAAE,WAAWA,EAAE,eAEfA,EAAE,UAAUA,EAAE,UAEdA,EAAE,QAGHyF,GAAKvD,KAAK,cAAcoD,EAAU,cAChCO,EAAQE,IAAI,SAAS/F,GACnB,MAAO,IAAMA,IACZuF,KAAK,KAAK,IACbM,EAAQE,IAAI,SAAS/F,GACnB,MAAO,IAAMA,IACZuF,KAAK,KAAK,OAKf,KAAI,GAFAc,GAAS,GAAIvG,OAAMuF,GACnBiB,EAAU,GAAIxG,OAAMuF,GAChBrF,EAAE,EAAKqF,EAAFrF,IAAeA,EAC1BqG,EAAOrG,GAAK,MAAMA,EAAE,IACpBsG,EAAQtG,GAAK,MAAMA,EAAE,GAEvByF,GAAKvD,KAAK,4BAA4BoD,EAAU,cAActB,EAAK,KACjEA,EAAK+B,IAAI,SAASQ,EAAEC,GAAO,MAAOD,GAAI,KAAOA,EAAI,gBAAkBC,EAAM,IAAMD,EAAI,QAAQhB,KAAK,KAChG,6CAA6CD,EAAU,cAAce,EAAOd,KAAK,KAAK,IAAIe,EAAQf,KAAK,KAAK,kBAG9GE,EAAKvD,KAAK,uBAAuBoD,EAAU,SAAStB,EAAK,gCACzD,KAAI,GAAIhE,GAAE,EAAKqF,EAAFrF,IAAeA,EAC1ByF,EAAKvD,KAAK,cAAclC,EAAE,iBAAiBA,EAAE,yBAAyBA,EAAE,MAAMA,EAAE,8BAA8BA,EAAE,yBAAyBA,EAAE,MAE7IyF,GAAKvD,KAAK,gEAGVuD,EAAKvD,KAAK,6BAA6BoD,EAAU,yCAAyCA,EAAU,SAClGO,EAAQE,IAAI,SAAS/F,GACnB,MAAO,SAASA,EAAE,MACjBuF,KAAK,KAAK,IACbM,EAAQE,IAAI,SAAS/F,GACnB,MAAO,UAAUA,EAAE,MAClBuF,KAAK,KAAK,YAGf,IAAIG,GAAY,GAAIC,UAAS,YAAa,QAASF,EAAKF,KAAK,MAC7D,OAAOG,GAAUE,EAAoBR,GAAQP,GAG/C,QAAS4B,GAAW9F,GAClB,GAAG+F,EAAS/F,GACV,MAAO,QAET,IAAGgG,EACD,OAAOlD,OAAOmD,UAAUC,SAASzH,KAAKuB,IACpC,IAAK,wBACH,MAAO,SACT,KAAK,wBACH,MAAO,SACT,KAAK,qBACH,MAAO,MACT,KAAK,sBACH,MAAO,OACT,KAAK,sBACH,MAAO,OACT,KAAK,sBACH,MAAO,OACT,KAAK,uBACH,MAAO,QACT,KAAK,uBACH,MAAO,QACT,KAAK,6BACH,MAAO,gBAGb,MAAGb,OAAMC,QAAQY,GACR,QAEF,UAwBT,QAASmG,GAAmBnG,EAAMC,EAAOkE,EAAQiC,GAC/C,GAAYjF,SAATnB,EAAoB,CACrB,GAAIqG,GAAOpB,EAAoBqB,MAAM,EACrC,OAAOD,OACiB,gBAATrG,KACfA,GAAQA,IAEGmB,SAAVlB,IACDA,GAAUD,EAAKT,QAEjB,IAAIgH,GAAItG,EAAMV,MACd,IAAc4B,SAAXgD,EAAsB,CACvBA,EAAS,GAAIhF,OAAMoH,EACnB,KAAI,GAAIlH,GAAEkH,EAAE,EAAGC,EAAG,EAAGnH,GAAG,IAAKA,EAC3B8E,EAAO9E,GAAKmH,EACZA,GAAMvG,EAAMZ,GAGhB,GAAc8B,SAAXiF,EAAsB,CACvBA,EAAS,CACT,KAAI,GAAI/G,GAAE,EAAKkH,EAAFlH,IAAOA,EACf8E,EAAO9E,GAAK,IACb+G,IAAWnG,EAAMZ,GAAG,GAAG8E,EAAO9E,IAMpC,IAFA,GAAIoF,GAAQqB,EAAW9F,GACnByG,EAAYxB,EAAoBR,GAC9BgC,EAAUlH,QAAUgH,EAAE,GAC1BE,EAAUlF,KAAKiD,EAAmBC,EAAOgC,EAAUlH,OAAO,GAE5D,IAAI8G,GAAOI,EAAUF,EAAE,EACvB,OAAOF,GAAKrG,EAAMC,EAAOkE,EAAQiC,GAnVnC,GAAIjB,GAAO/G,EAAoB,GAC3B2H,EAAW3H,EAAoB,GAE/B4H,EAA6C,mBAAlBnE,cA2R3BoD,GACFyB,WACAC,WACAC,QACAC,SACAC,SACAC,SACAC,UACAC,UACAX,SACAY,iBACAC,UACAC,WA4CFrJ,GAAOD,QAAUqI,GAKZ,SAASpI,EAAQD,GAEtB,YAEA,SAASqH,GAAKS,GAEZ,IAAI,GADArB,GAAS,GAAIpF,OAAMyG,GACfvG,EAAE,EAAKuG,EAAFvG,IAAOA,EAClBkF,EAAOlF,GAAKA,CAEd,OAAOkF,GAGTxG,EAAOD,QAAUqH,GAIZ,SAASpH,EAAQD,GAWtBC,EAAOD,QAAU,SAAUgB,GACzB,QAAiB,MAAPA,KACPA,EAAIuI,WACFvI,EAAIwI,aAC+B,kBAA7BxI,GAAIwI,YAAYvB,UACvBjH,EAAIwI,YAAYvB,SAASjH,OAO1B,SAASf,EAAQD,EAASM,GAE/B,YAEA,IAAImJ,GAAUnJ,EAAoB,GAC9BoJ,EAAapJ,EAAoB,EAErCL,GAAOD,QAAU,SAAiBoB,EAAKqF,GAErC,IADA,GAAItE,MAAYtB,EAAIO,EAAKsH,EAAK,EACxB7H,YAAaQ,QACjBc,EAAMsB,KAAK5C,EAAEY,QACbiH,GAAM7H,EAAEY,OACRZ,EAAIA,EAAE,EAER,OAAoB,KAAjBsB,EAAMV,OACAgI,KAELhD,IACFA,EAASgD,EAAQ,GAAI1F,cAAa2E,GAAKvG,IAEzCuH,EAAWjD,EAAQrF,GACZqF,KAMJ,SAASxG,EAAQD,EAASM,GAE/BL,EAAOD,QAAQM,EAAoB,IAAIiF,MAAQ,QAAQ,SAAS,SAASoE,KAAOnE,KAAO,KAAKD,QAAUqE,YAAcC,cAAgBrE,MAAQA,KAAO,+PAA+PD,OAASuE,KAAO,kBAAkBC,QAAS,EAAKC,QAAS,EAAMC,MAAQ,IAAIH,KAAO,kBAAkBC,QAAS,EAAMC,QAAS,EAAKC,MAAQ,IAAIH,KAAO,kBAAkBC,QAAS,EAAMC,QAAS,EAAKC,MAAQ,IAAIL,YAAcC,WAAa,cAAc,gBAAgBK,MAAQ1E,KAAO,KAAKD,QAAUqE,YAAcC,cAAgBM,SAAW,UAAUC,UAAY,MAKlvB,SAASnK,EAAQD,EAASM,GAE/B,YAIA,SAAS+J,KACPjK,KAAKkK,YACLlK,KAAKmK,YACLnK,KAAKoK,aACLpK,KAAKqK,qBACLrK,KAAKsK,cACLtK,KAAKuK,cACLvK,KAAKwK,kBACLxK,KAAKyK,aACLzK,KAAK0K,aACL1K,KAAK+J,SAAW,GAChB/J,KAAKuJ,IAAM,KACXvJ,KAAKoF,KAAO,KACZpF,KAAK8J,KAAO,KACZ9J,KAAK2K,OAAQ,EAGf,QAASC,GAAaC,GAEpB,GAAIC,GAAO,GAAIb,EAGfa,GAAKvB,IAASsB,EAAUtB,IACxBuB,EAAK1F,KAASyF,EAAUzF,KACxB0F,EAAKhB,KAASe,EAAUf,IAGxB,IAAIiB,GAAYF,EAAU1F,KAAK6F,MAAM,EACrCF,GAAKZ,SAAWa,CAChB,KAAI,GAAI5J,GAAE,EAAGA,EAAE4J,EAAU1J,SAAUF,EAAG,CACpC,GAAI8J,GAAWF,EAAU5J,EACzB,IAAgB,UAAb8J,GAA6C,gBAAbA,IAAyBA,EAASC,aAAe,CAKlF,GAJAJ,EAAKZ,SAAS/I,GAAK,QACnB2J,EAAKV,UAAU/G,KAAKlC,GACpB2J,EAAKT,kBAAkBhH,KAAK4H,EAASC,aAAeD,EAASC,aAAe,GAC5EJ,EAAKX,SAAS9G,KAAK,QAAUlC,GAC1BA,EAAI2J,EAAKvB,IAAIpE,KAAK9D,QAAUyJ,EAAKvB,IAAIpE,KAAKhE,GAAG0I,MAAM,EACpD,KAAM,IAAI/F,OAAM,kDAElB,IAAG3C,EAAI2J,EAAKhB,KAAK3E,KAAK9D,QAAUyJ,EAAKhB,KAAK3E,KAAKhE,GAAG0I,MAAM,EACtD,KAAM,IAAI/F,OAAM,wDAEb,IAAgB,WAAbmH,EACRH,EAAKR,WAAWjH,KAAKlC,GACrB2J,EAAKX,SAAS9G,KAAK,SAAWlC,OACzB,IAAgB,UAAb8J,EAAsB,CAE9B,GADAH,EAAKL,UAAUpH,KAAKlC,GACjBA,EAAI2J,EAAKvB,IAAIpE,KAAK9D,QAAUyJ,EAAKvB,IAAIpE,KAAKhE,GAAG0I,MAAQ,EACtD,KAAM,IAAI/F,OAAM,mDAElB,IAAG3C,EAAI2J,EAAK1F,KAAKD,KAAK9D,QAAUyJ,EAAK1F,KAAKD,KAAKhE,GAAGwI,OAChD,KAAM,IAAI7F,OAAM,mDAElB,IAAG3C,EAAI2J,EAAKhB,KAAK3E,KAAK9D,QAAUyJ,EAAKhB,KAAK3E,KAAKhE,GAAG0I,MAAQ,EACxD,KAAM,IAAI/F,OAAM,yDAEb,IAAgB,UAAbmH,EAAsB,CAE9B,GADAH,EAAKJ,UAAUrH,KAAKlC,GACjBA,EAAI2J,EAAKvB,IAAIpE,KAAK9D,QAAUyJ,EAAKvB,IAAIpE,KAAKhE,GAAGwI,OAC9C,KAAM,IAAI7F,OAAM,kDAElB,IAAG3C,EAAI2J,EAAK1F,KAAKD,KAAK9D,QAAUyJ,EAAK1F,KAAKD,KAAKhE,GAAGwI,OAChD,KAAM,IAAI7F,OAAM,mDAElB,IAAG3C,EAAI2J,EAAKhB,KAAK3E,KAAK9D,QAAUyJ,EAAKhB,KAAK3E,KAAKhE,GAAGwI,OAChD,KAAM,IAAI7F,OAAM,wDAEb,CAAA,GAAuB,gBAAbmH,KAAyBA,EAAS/C,OAKjD,KAAM,IAAIpE,OAAM,gCAAkCiH,EAAU5J,GAJ5D2J,GAAKZ,SAAS/I,GAAK,SACnB2J,EAAKP,WAAWlH,MAAO+E,MAAO6C,EAAS7C,MAAOF,OAAO+C,EAAS/C,SAC9D4C,EAAKN,eAAenH,KAAKlC,IAO7B,GAAG2J,EAAKV,UAAU/I,QAAU,EAC1B,KAAM,IAAIyC,OAAM,sCAIlB,IAAGgH,EAAKvB,IAAIpE,KAAK9D,OAAS0J,EAAU1J,OAClC,KAAM,IAAIyC,OAAM,2CAElB,IAAGgH,EAAK1F,KAAKD,KAAK9D,OAAS0J,EAAU1J,OACnC,KAAM,IAAIyC,OAAM,4CAElB,IAAGgH,EAAKhB,KAAK3E,KAAK9D,OAAS0J,EAAU1J,OACnC,KAAM,IAAIyC,OAAM,4CAYlB,OARAgH,GAAKH,QAAUE,EAAUM,aAAeN,EAAUF,MAGlDG,EAAKf,SAAWc,EAAUd,UAAY,QAGtCe,EAAKd,UAAYa,EAAUb,WAAa,GAEjCoB,EAAYN,GAvGrB,GAAIM,GAAclL,EAAoB,EA0GtCL,GAAOD,QAAUgL,GAKZ,SAAS/K,EAAQD,EAASM,GAE/B,YA2BA,SAASkL,GAAYN,GACnB,GAAIlE,IAAQ,eAAgB,iBACxByE,KACAC,EAAYR,EAAKf,SAAW,cAGhCnD,GAAKvD,MAAM,mBAAoBiI,EAAW,IAAKR,EAAKX,SAASzD,KAAK,KAAM,MAAMA,KAAK,IAOnF,KAAI,GANA6E,MACAC,KACAT,IAAc,QAAQD,EAAKV,UAAU,GAAG,gBAC1B7E,KAAK3C,IAAI,EAAEkI,EAAKT,kBAAkB,IAAIS,EAAKT,kBAAkB,GAAG,EAAG,IAAIS,EAAKT,kBAAkB,GAAG,IAAK,KAAK3D,KAAK,KAC9H+E,KAA4BC,KAExBvK,EAAE,EAAGA,EAAE2J,EAAKV,UAAU/I,SAAUF,EAAG,CACzC,GAAIwK,GAAIb,EAAKV,UAAUjJ,EACvBkK,GAAKhI,MAAM,IAAKsI,EAAG,SAAUA,EAAG,UACrB,IAAKA,EAAG,SAAUA,EAAG,UAAUjF,KAAK,KAC/C6E,EAAQlI,KAAK,IAAMsI,GACnBJ,EAAQlI,KAAK,IAAMsI,GACnBH,EAAenI,KAAK,IAAIsI,GACxBH,EAAenI,KAAK,IAAIsI,EAAE,WAC1BZ,EAAU1H,KAAK,QAAUsI,EAAI,SAC7BZ,EAAU1H,KAAK,QAAUsI,EAAI,WAC7BZ,EAAU1H,KAAK,QAAUsI,EAAI,aACzBxK,EAAE,IACJsK,EAAsBpI,KAAK,QAAUyH,EAAKV,UAAU,GAAK,wBAA0BuB,EAAI,kBAAoBpG,KAAKY,IAAI2E,EAAKT,kBAAkB,IAAI9E,KAAKY,IAAI2E,EAAKT,kBAAkBlJ,MAC/KuK,EAAgBrI,KAAK,QAAUyH,EAAKV,UAAU,GAAK,qBAAuB7E,KAAK3C,IAAI,EAAEkI,EAAKT,kBAAkB,IAAM,YAAcsB,EAAI,qBAAuBpG,KAAK3C,IAAI,EAAEkI,EAAKT,kBAAkBlJ,IAAM,MAInM2J,EAAKV,UAAU/I,OAAS,IAC1BuF,EAAKvD,KAAK,SAAWoI,EAAsB/E,KAAK,QAAU,gFAC1DE,EAAKvD,KAAK,2BAA6ByH,EAAKV,UAAU,GAAK,iBAAmB7E,KAAKY,IAAI2E,EAAKT,kBAAkB,IAAM,wBACpHzD,EAAKvD,KAAK,SAAWqI,EAAgBhF,KAAK,QAAU,uEACpDE,EAAKvD,KAAK,KAGZ,KAAI,GAAIlC,GAAE,EAAGA,EAAE2J,EAAKR,WAAWjJ,SAAUF,EACvC4J,EAAU1H,KAAK,SAAWyH,EAAKR,WAAWnJ,GAG5CkK,GAAKhI,MAAM,SAAUmI,EAAe9E,KAAK,KAAM,YAAYA,KAAK,KAChE2E,EAAKhI,KAAK,qBACVuD,EAAKvD,KAAK,OAASgI,EAAK3E,KAAK,MAE7BE,EAAKvD,MAAM,aACA,8BAA+BkI,EAAQ7E,KAAK,KAAM,MAClD,eAAgBqE,EAAUrE,KAAK,KAAM,MAAMA,KAAK,KAExDoE,EAAKH,OACNiB,QAAQC,IAAI,0BAA4BjF,EAAKF,KAAK,MAAQ,eAI5D,IAAIoF,GAAQ,GAAIhF,UAAS,UAAWF,EAAKF,KAAK,MAC9C,OAAOoF,GAAMC,EAAQC,KAAK/I,OAAW6H,IAzDvC,GAAIiB,GAAU7L,EAAoB,EA4DlCL,GAAOD,QAAUwL,GAKZ,SAASvL,EAAQD,EAASM,GAE/B,YAMA,SAAS+L,GAAUjG,EAAO8E,EAAM1F,GAC9B,GAKmBjE,GAAGwK,EALlBnF,EAAYR,EAAM3E,OAClB6K,EAAQpB,EAAKV,UAAU/I,OACvB8K,EAAYrB,EAAKL,UAAUpJ,OAAO,EAClCuF,KACAyE,KACA1D,EAAI,EAAGyE,EAAK,CAChB,KAAIjL,EAAE,EAAKqF,EAAFrF,IAAeA,EACtBkK,EAAKhI,MAAM,IAAIlC,EAAE,MAAMuF,KAAK,IAG9B,KAAIiF,EAAE,EAAKO,EAAFP,IAAWA,EAClB,IAAIxK,EAAE,EAAKqF,EAAFrF,IAAeA,EACtBiL,EAAOzE,EACPA,EAAM3B,EAAM7E,GACH,IAANA,EACDkK,EAAKhI,MAAM,IAAIsI,EAAE,IAAIxK,EAAE,KAAKwK,EAAE,IAAIhE,GAAKjB,KAAK,KAE5C2E,EAAKhI,MAAM,IAAIsI,EAAE,IAAIxK,EAAE,MAAMwK,EAAE,IAAIhE,EAAI,KAAKyE,EAAK,KAAKT,EAAE,IAAIS,EAAK,KAAK1F,KAAK,IAMjF,KAFAE,EAAKvD,KAAK,OAASgI,EAAK3E,KAAK,MAEzBvF,EAAEqF,EAAU,EAAGrF,GAAG,IAAKA,EACzBwG,EAAM3B,EAAM7E,GACZyF,EAAKvD,MAAM,QAAQlC,EAAE,OAAOA,EAAE,KAAKwG,EAAI,OAAOxG,EAAE,MAAMuF,KAAK,IAK7D,KAFAE,EAAKvD,KAAK+B,GAENjE,EAAE,EAAKqF,EAAFrF,IAAeA,EAAG,CAGzB,IAFAiL,EAAOzE,EACPA,EAAM3B,EAAM7E,GACRwK,EAAE,EAAKO,EAAFP,IAAWA,EAClB/E,EAAKvD,MAAM,IAAIsI,EAAE,MAAMA,EAAE,IAAIxK,GAAGuF,KAAK,IAEpCyF,KACEhL,EAAI,GACLyF,EAAKvD,MAAM,SAAS+I,EAAK,OAAOA,GAAM1F,KAAK,KAE7CE,EAAKvD,MAAM,WAAWsE,EAAI,KAAKjB,KAAK,MAEtCE,EAAKvD,KAAK,KAEZ,MAAOuD,GAAKF,KAAK,MAMnB,QAAS2F,GAAUC,EAAStG,EAAO8E,EAAM1F,GAMvC,IAAI,GALAoB,GAAYR,EAAM3E,OAClB6K,EAAQpB,EAAKV,UAAU/I,OACvB2I,EAAYc,EAAKd,UACjBmC,EAAYrB,EAAKL,UAAUpJ,OAAS,EACpCuF,KACIzF,EAAE,EAAK+K,EAAF/K,IAAWA,EACtByF,EAAKvD,MAAM,aAAalC,EAAE,KAAKA,GAAGuF,KAAK,IAKzC,KAAI,GAAIvF,GAAEmL,EAAW9F,EAAFrF,IAAeA,EAChCyF,EAAKvD,MAAM,YAAYlC,EAAE,OAAQ6E,EAAM7E,GAAI,QAASA,EAAG,SAASuF,KAAK,KACrEE,EAAKvD,MAAM,OAAOlC,EAAE,IAAI6I,EAAU,MAAMtD,KAAK,KAC7CE,EAAKvD,MAAM,IAAI2C,EAAM7E,GAAG,KAAKA,GAAGuF,KAAK,KACrCE,EAAKvD,MAAM,IAAIlC,EAAE,MAAMuF,KAAK,KAC5BE,EAAKvD,MAAM,UAAU2C,EAAM7E,GAAG,IAAI6I,GAAWtD,KAAK,KAClDE,EAAKvD,MAAM,IAAIlC,EAAE,KAAK6I,EAAU,KAAKtD,KAAK,KACvCyF,GACDvF,EAAKvD,MAAM,SAAS2C,EAAM7E,GAAG,MAAMA,GAAGuF,KAAK,IAG/C,KAAI,GAAIvF,GAAE,EAAK+K,EAAF/K,IAAWA,EAAG,CAEzB,IAAI,GADAoL,IAAY,SAASpL,GACjBwK,EAAEW,EAAW9F,EAAFmF,IAAeA,EAChCY,EAASlJ,MAAM,IAAIsI,EAAE,KAAKxK,EAAE,IAAI6E,EAAM2F,IAAIjF,KAAK,IAEjDE,GAAKvD,MAAM,IAAIlC,EAAE,KAAKoL,EAAS7F,KAAK,KAAK,KAAKA,KAAK,KAErDE,EAAKvD,KAAK4I,EAAUjG,EAAO8E,EAAM1F,GACjC,KAAI,GAAIjE,GAAEmL,EAAW9F,EAAFrF,IAAeA,EAChCyF,EAAKvD,KAAK,IAEZ,OAAOuD,GAAKF,KAAK,MAOnB,QAAS8F,GAAaC,GAEpB,IADA,GAAIH,GAAU,EAAG9F,EAAYiG,EAAO,GAAGpL,OACvBmF,EAAV8F,GAAqB,CACzB,IAAI,GAAIX,GAAE,EAAGA,EAAEc,EAAOpL,SAAUsK,EAC9B,GAAGc,EAAOd,GAAGW,KAAaG,EAAO,GAAGH,GAClC,MAAOA,KAGTA,EAEJ,MAAOA,GAKT,QAASI,GAAaC,EAAO7B,EAAM8B,GAIjC,IAAI,GAHAhG,GAAO+F,EAAMvH,KACbmE,KACAO,KACI3I,EAAE,EAAGA,EAAEwL,EAAMxH,KAAK9D,SAAUF,EAAG,CACrC,GAAI0L,GAAOF,EAAMxH,KAAKhE,EACtB,MAAG0L,EAAKhD,OAAS,GAAjB,CAGA,GAAIiD,GAAK,GAAIC,QAAOF,EAAKnD,KAAM,KAC3BsD,EAAS,GACTC,EAASnC,EAAKV,UAAU8C,QAAQ/L,EACpC,QAAO2J,EAAKZ,SAAS/I,IACnB,IAAK,SACH,GAAIgM,GAAcrC,EAAKN,eAAe0C,QAAQ/L,GAC1CiM,EAAStC,EAAKP,WAAW4C,EAC7BF,GAASG,EAAOhF,MAChB4E,EAAS,KAAOG,CAClB,KAAK,QACHH,EAAS,IAAMC,EAASD,CACxB,IAAIK,GAAW,IAAMlM,EACjBmM,EAAS,IAAML,CACnB,IAAuC,IAAnCnC,EAAKT,kBAAkB4C,GACP,IAAfJ,EAAKhD,MACgB,YAAnB+C,EAAOK,GACLJ,EAAKlD,QACNJ,EAAIlG,MAAM,OAAQgK,EAAU,IAAKC,EAAQ,QAASN,EAAQ,KAAKtG,KAAK,KACpEE,EAAOA,EAAK2G,QAAQT,EAAIO,GACxBvD,EAAKzG,MAAMiK,EAAQ,QAASN,EAAQ,IAAKK,EAAS,KAAK3G,KAAK,MAE5DE,EAAOA,EAAK2G,QAAQT,GAAKQ,EAAQ,QAASN,EAAQ,KAAKtG,KAAK,KAG9DE,EAAOA,EAAK2G,QAAQT,GAAKQ,EAAQ,IAAKN,EAAQ,KAAKtG,KAAK,KAE/B,YAAnBkG,EAAOK,IACf1D,EAAIlG,MAAM,OAAQgK,EAAU,IAAKC,EAAQ,QAASN,EAAQ,KAAKtG,KAAK,KACpEE,EAAOA,EAAK2G,QAAQT,EAAIO,GACrBR,EAAKlD,QACNG,EAAKzG,MAAMiK,EAAQ,QAASN,EAAQ,IAAKK,EAAS,KAAK3G,KAAK,OAG9D6C,EAAIlG,MAAM,OAAQgK,EAAU,IAAKC,EAAQ,IAAKN,EAAQ,KAAKtG,KAAK,KAChEE,EAAOA,EAAK2G,QAAQT,EAAIO,GACrBR,EAAKlD,QACNG,EAAKzG,MAAMiK,EAAQ,IAAKN,EAAQ,KAAMK,GAAU3G,KAAK,UAGpD,CAEL,IAAI,GADA8G,IAAYX,EAAKnD,MAAO+D,GAAaT,GACjCrB,EAAE,EAAGA,EAAEpG,KAAKY,IAAI2E,EAAKT,kBAAkB4C,IAAUtB,IACvD6B,EAASnK,KAAK,uBACdoK,EAAUpK,KAAK,KAAOsI,EAAE,GAAK,KAAOsB,EAAS,IAAMtB,EAIrD,IAFAmB,EAAK,GAAIC,QAAOS,EAAS9G,KAAK,IAAK,KACnCsG,EAASS,EAAU/G,KAAK,KACF,YAAnBkG,EAAOK,GAQR,KAAM,IAAInJ,OAAM,kEAGhB8C,GAAOA,EAAK2G,QAAQT,GAAKQ,EAAQ,IAAKN,EAAQ,KAAKtG,KAAK,KAG9D,KACA,KAAK,SACHE,EAAOA,EAAK2G,QAAQT,EAAI,IAAMhC,EAAKR,WAAW4C,QAAQ/L,GACxD,MACA,KAAK,QACHyF,EAAOA,EAAK2G,QAAQT,EAAI,QAC1B,MACA,KAAK,QACHlG,EAAOA,EAAK2G,QAAQT,EAAI,WAI9B,OAAQvD,EAAI7C,KAAK,MAAOE,EAAMkD,EAAKpD,KAAK,OAAOA,KAAK,MAAMgH,OAG5D,QAASC,GAAYf,GAGnB,IAAI,GAFAgB,GAAU,GAAI3M,OAAM2L,EAAOvL,QAC3BwM,GAAW,EACP1M,EAAE,EAAGA,EAAEyL,EAAOvL,SAAUF,EAAG,CACjC,GAAI2M,GAAIlB,EAAOzL,GACX4M,EAASD,EAAEE,MAAM,MAInBD,GAHEA,EAGOA,EAAO,GAFP,GAIQ,IAAhBD,EAAEG,OAAO,GACVL,EAAQzM,GAAK,IAAM2M,EAAEG,OAAO,GAAKF,EAEjCH,EAAQzM,GAAK2M,EAAEG,OAAO,GAAKF,EAE1B5M,EAAI,IACL0M,EAAWA,GAAYD,EAAQzM,KAAOyM,EAAQzM,EAAE,IAGpD,MAAG0M,GACMD,EAAQ,GAEVA,EAAQlH,KAAK,IAItB,QAASwH,GAAgBpD,EAAMS,GAO7B,IAAI,GAHA/E,GAAa+E,EAAQ,GAAGlK,OAASkE,KAAKY,IAAI2E,EAAKT,kBAAkB,IAAK,EACtEoC,EAAS,GAAIxL,OAAM6J,EAAKV,UAAU/I,QAClCuL,EAAS,GAAI3L,OAAM6J,EAAKV,UAAU/I,QAC9BF,EAAE,EAAGA,EAAE2J,EAAKV,UAAU/I,SAAUF,EACtCyL,EAAOzL,GAAKoK,EAAQ,EAAEpK,GACtBsL,EAAOtL,GAAKoK,EAAQ,EAAEpK,EAAE,EAO1B,KAAI,GAHAgN,MAAiBC,KACjBC,KAAgBC,KAChBC,KACIpN,EAAE,EAAGA,EAAE2J,EAAKV,UAAU/I,SAAUF,EAAG,CACrC2J,EAAKT,kBAAkBlJ,GAAG,GAC5BkN,EAAUhL,KAAK,GACfiL,EAAQjL,KAAKmD,GACb2H,EAAW9K,KAAKmD,GAChB4H,EAAS/K,KAAKmD,EAAUsE,EAAKT,kBAAkBlJ,MAE/CkN,EAAUhL,KAAKyH,EAAKT,kBAAkBlJ,IACtCmN,EAAQjL,KAAKyH,EAAKT,kBAAkBlJ,GAAGqF,GACvC2H,EAAW9K,KAAK,GAChB+K,EAAS/K,KAAKyH,EAAKT,kBAAkBlJ,IAGvC,KAAI,GADAqN,MACI7C,EAAE,EAAGA,EAAEc,EAAOtL,GAAGE,OAAQsK,IAC3B0C,EAAUlN,IAAIsL,EAAOtL,GAAGwK,IAAMc,EAAOtL,GAAGwK,GAAG2C,EAAQnN,IACrDqN,EAASnL,KAAKoJ,EAAOtL,GAAGwK,GAAG0C,EAAUlN,GAGzCoN,GAAWlL,KAAKmL,GAQlB,IAAI,GAJAC,IAAW,MACX7H,GAAQ,gBACRyE,KAEIM,EAAE,EAAKnF,EAAFmF,IAAeA,EAC1BN,EAAKhI,MAAM,IAAKsI,EAAG,OAAQA,EAAG,KAAKjF,KAAK,IAE1C,KAAI,GAAIvF,GAAE,EAAGA,EAAE2J,EAAKV,UAAU/I,SAAUF,EAAG,CACzCsN,EAAQpL,KAAK,IAAIlC,GACjBsN,EAAQpL,KAAK,IAAIlC,GACjBsN,EAAQpL,KAAK,IAAIlC,EAEjB,KAAI,GAAIwK,GAAE,EAAKnF,EAAFmF,IAAeA,EAC1BN,EAAKhI,MAAM,IAAIlC,EAAE,IAAIwK,EAAE,KAAKxK,EAAE,IAAIkN,EAAUlN,GAAGwK,EAAE,KAAKjF,KAAK,IAG7D,KAAI,GAAIiF,GAAE,EAAGA,EAAEpG,KAAKY,IAAI2E,EAAKT,kBAAkBlJ,MAAOwK,EACpDN,EAAKhI,MAAM,IAAIlC,EAAE,IAAIwK,EAAE,KAAKxK,EAAE,IAAIgN,EAAWhN,GAAGwK,EAAE,KAAKjF,KAAK,KAGhE,IAAI,GAAIvF,GAAE,EAAGA,EAAE2J,EAAKR,WAAWjJ,SAAUF,EACvCsN,EAAQpL,KAAK,IAAMlC,EAKrB,IAHG2J,EAAKJ,UAAUrJ,OAAS,GACzBgK,EAAKhI,KAAK,qBAETyH,EAAKL,UAAUpJ,OAAS,EAAG,CAG5B,IAAI,GADAqN,GAAQ,GAAIzN,OAAMuF,GACdrF,EAAE,EAAKqF,EAAFrF,IAAeA,EAC1BuN,EAAMvN,GAAK,GAEbkK,GAAKhI,MAAM,UAAWqL,EAAMhI,KAAK,KAAM,KAAKA,KAAK,KAEnD,IAAI,GAAIvF,GAAE,EAAGA,EAAE2J,EAAKP,WAAWlJ,SAAUF,EAAG,CAG1C,IAAI,GAFAwN,GAAU7D,EAAKP,WAAWpJ,GAC1ByN,KACIjD,EAAE,EAAGA,EAAEgD,EAAQzG,OAAO7G,SAAUsK,EACb,IAAtBgD,EAAQzG,OAAOyD,KAEc,IAAtBgD,EAAQzG,OAAOyD,GACvBiD,EAAYvL,MAAM,IAAKsL,EAAQvG,MAAO,IAAKuD,GAAGjF,KAAK,KAEnDkI,EAAYvL,MAAMsL,EAAQzG,OAAOyD,GAAI,KAAMgD,EAAQvG,MAAO,IAAKuD,GAAGjF,KAAK,KAGjD,KAAvBkI,EAAYvN,OACbgK,EAAKhI,KAAK,IAAMlC,EAAI,MAEpBkK,EAAKhI,MAAM,IAAKlC,EAAG,IAAKyN,EAAYlI,KAAK,MAAMA,KAAK,KAKxD,GAAI8C,GAAWqF,KAAQC,OAAOhE,EAAKvB,IAAIC,UAClBsF,OAAOhE,EAAK1F,KAAKoE,UACjBsF,OAAOhE,EAAKhB,KAAKN,UACtC6B,GAAOA,EAAKyD,OAAOtF,GACnB5C,EAAKvD,KAAK,OAASgI,EAAK3E,KAAK,KAC7B,KAAI,GAAIvF,GAAE,EAAGA,EAAE2J,EAAKV,UAAU/I,SAAUF,EACtCyF,EAAKvD,KAAK,IAAIlC,EAAE,MAIf2J,GAAKvB,IAAInE,KAAK/D,OAAS,GACxBuF,EAAKvD,KAAKqJ,EAAa5B,EAAKvB,IAAKuB,EAAM8B,GAIzC,IAAIxH,GAAOsH,EAAa5B,EAAK1F,KAAM0F,EAAM8B,GACrCN,EAAUE,EAAa+B,EACd/H,GAAV8F,EACD1F,EAAKvD,KAAKgJ,EAAUC,EAASiC,EAAW,GAAIzD,EAAM1F,IAElDwB,EAAKvD,KAAK4I,EAAUsC,EAAW,GAAIzD,EAAM1F,IAIxC0F,EAAKhB,KAAK1E,KAAK/D,OAAS,GACzBuF,EAAKvD,KAAKqJ,EAAa5B,EAAKhB,KAAMgB,EAAM8B,IAGvC9B,EAAKH,OACNiB,QAAQC,IAAI,oCAAqCN,EAAS,MAAQ3E,EAAKF,KAAK,MAAQ,eAGtF,IAAIqI,IAAajE,EAAKf,UAAU,UAAY,eAAgB0C,EAAO,GAAG/F,KAAK,KAAK,IAAI4F,EAAQqB,EAAYf,IAASlG,KAAK,IAClHsI,EAAI,GAAIlI,WAAU,YAAYiI,EAAS,IAAKN,EAAQ/H,KAAK,KAAK,KAAME,EAAKF,KAAK,MAAM,YAAaqI,GAAUrI,KAAK,IACpH,OAAOsI,KA7VT,GAAIH,GAAO3O,EAAoB,EA+V/BL,GAAOD,QAAUsO,GAKZ,SAASrO,EAAQD,GAEtB,YAEA,SAASqP,GAAYC,EAAMC,GAIzB,IAAI,GAHAC,GAAM,EACNC,EAAMH,EAAK7N,OACXwE,EAAEqJ,EAAK,GAAItJ,EAAEsJ,EAAK,GACd/N,EAAE,EAAKkO,EAAFlO,IAASA,EAGpB,GAFAyE,EAAIC,EACJA,EAAIqJ,EAAK/N,GACNgO,EAAQtJ,EAAGD,GAAI,CAChB,GAAGzE,IAAMiO,EAAK,CACZA,GACA,UAEFF,EAAKE,KAASvJ,EAIlB,MADAqJ,GAAK7N,OAAS+N,EACPF,EAGT,QAASI,GAAUJ,GAIjB,IAAI,GAHAE,GAAM,EACNC,EAAMH,EAAK7N,OACXwE,EAAEqJ,EAAK,GAAItJ,EAAIsJ,EAAK,GAChB/N,EAAE,EAAKkO,EAAFlO,IAASA,EAAGyE,EAAEC,EAGzB,GAFAD,EAAIC,EACJA,EAAIqJ,EAAK/N,GACN0E,IAAMD,EAAG,CACV,GAAGzE,IAAMiO,EAAK,CACZA,GACA,UAEFF,EAAKE,KAASvJ,EAIlB,MADAqJ,GAAK7N,OAAS+N,EACPF,EAGT,QAASK,GAAOL,EAAMC,EAASK,GAC7B,MAAmB,KAAhBN,EAAK7N,OACC6N,EAENC,GACGK,GACFN,EAAK9I,KAAK+I,GAELF,EAAYC,EAAMC,KAEvBK,GACFN,EAAK9I,OAEAkJ,EAAUJ,IAGnBrP,EAAOD,QAAU2P,GAKZ,SAAS1P,EAAQD,EAASM,GAE/B,YAQA,SAASuP,GAAY5E,GAEnB,IAAI,GAAIxK,KAAMwK,GACT6E,EAAgBxC,QAAQ7M,GAAM,GAC9BsP,EAAgBzC,QAAQ7M,GAAM,GAC/BuL,QAAQgE,KAAK,4BAA4BvP,EAAG,kCAGhD,KAAI,GAAIc,GAAE,EAAGA,EAAEuO,EAAgBrO,SAAUF,EACvC,IAAI0J,EAAU6E,EAAgBvO,IAC5B,KAAM,IAAI2C,OAAM,4BAA8B4L,EAAgBvO,GAKlE,OAAO4K,IACL5G,KAAY0F,EAAU1F,KACtBoE,IAAYsG,EAAMhF,EAAUtB,KAAO,cACnCnE,KAAYyK,EAAMhF,EAAUzF,MAC5B0E,KAAY+F,EAAMhF,EAAUf,MAAQ,cACpCa,QAAcE,EAAUM,UACxBpB,SAAYc,EAAUd,UAAYc,EAAUzF,KAAKsE,MAAQ,QACzDM,UAAYa,EAAUb,WAAa,KA5BvC,GAAI6F,GAAU3P,EAAoB,IAC9B6L,EAAU7L,EAAoB,GAE9BwP,GAAoB,OAAQ,QAC5BC,GAAoB,MAAO,OAAQ,YAAa,WAAY,YA4BhE9P,GAAOD,QAAU6P,GAKZ,SAAS5P,EAAQD,EAASM,GAE/B,YAOA,SAAS4P,GAAiBpG,EAAMC,EAAQC,GACtC5J,KAAK0J,KAAOA,EACZ1J,KAAK2J,OAASA,EACd3J,KAAK4J,OAASA,EACd5J,KAAK6J,MAAQ,EAGf,QAASkG,GAAgB3K,EAAMD,EAAMqE,EAAUC,GAC7CzJ,KAAKoF,KAAOA,EACZpF,KAAKmF,KAAOA,EACZnF,KAAKwJ,SAAWA,EAChBxJ,KAAKyJ,UAAYA,EAGnB,QAASuG,GAASC,GAChB,GAAkB,SAAfA,EACD,KAAM,IAAInM,OAAM,mCAElB,OAAqB,mBAAXoM,QACDD,IAAcC,QACK,mBAAXC,QACRF,IAAcE,QACG,mBAATC,MACRH,IAAcG,OAEd,EAIX,QAASC,GAAYC,GAGnB,IAAI,GAFAC,GAASD,EAAIlL,KAAK,GAAGoL,WAAWC,OAAOF,OACvCG,EAAQ,GAAIzP,OAAMsP,EAAOlP,QACrBF,EAAE,EAAGA,EAAEoP,EAAOlP,SAAUF,EAC9BuP,EAAMvP,GAAKoP,EAAOpP,GAAGuI,IAEvB,OAAOgH,GAGT,QAASC,GAAWC,GA0BlB,QAASC,GAAYxQ,GACnB,GAAIyQ,GAAOC,EAAS1Q,EAAGkN,QAAQ,MAAO,KAEtC,OADA9D,GAAUpG,KAAKyN,GACRA,EAIT,QAASE,GAAc3Q,GACrB,GAAIyQ,GAAO,QAAUzQ,EAAGkN,QAAQ,MAAO,KAEvC,OADA/D,GAASnG,KAAKyN,GACPA,EAIT,QAASG,GAAQC,EAAMJ,GAErB,IAAI,GADAK,GAAKD,EAAKE,MAAM,GAAIC,EAAKH,EAAKE,MAAM,GAChCjQ,EAAEgQ,EAAG,EAAKE,EAAFlQ,IAAQA,EACtBmQ,EAASnQ,GAAK,EAEhBmQ,GAASH,GAAML,EAIjB,QAASS,GAAaC,GACpB,MAAO,IAAKA,EAAIjE,QAAQ,MAAO,OAAOA,QAAQ,MAAO,KAAO,IAI9D,QAASkE,GAAOP,GACd,MAAOI,GAAStG,MAAMkG,EAAKE,MAAM,GAAIF,EAAKE,MAAM,IAAI1K,KAAK,IAM3D,QAASgL,GAASR,GAChB,MAAwB,yBAArBA,EAAKS,OAAOC,MACVV,EAAKS,OAAOE,OAASX,EACM,MAAzBA,EAAKS,OAAOG,SACNC,EAEFA,EAAOC,EAGM,qBAArBd,EAAKS,OAAOC,KACNG,EAAOC,EAETA,EA/DT,IAAI,GATAC,IAAO,IAAKrB,EAAM,OAAOlK,KAAK,IAC9B4J,EAAM4B,EAAQrC,MAAMoC,GAAOb,OAAO,IAGlCL,EAAS,WAAcoB,KAAoB,IAG3CC,EAAW/B,EAAYC,GACvB+B,EAAe,GAAIpR,OAAMmR,EAAS/Q,QAC9BF,EAAE,EAAGA,EAAEiR,EAAS/Q,SAAUF,EAChCkR,EAAalR,GAAK,GAAI2O,IAAkBiB,EAAQ,MAAO5P,EAAG,KAAKuF,KAAK,KAAK,GAAO,EAKlF,KAAI,GADA4K,GAAW,GAAIrQ,OAAMgR,EAAI5Q,QACrBF,EAAE,EAAGuG,EAAEuK,EAAI5Q,OAAUqG,EAAFvG,IAAOA,EAChCmQ,EAASnQ,GAAK8Q,EAAIhE,OAAO9M,EAI3B,IAAIsI,MACAD,KAqCAuI,EAAS,EACTC,EAAS,GAiBb,QAAUM,GAAMpB,EAAMS,GAEpB,GADAT,EAAKS,OAASA,EACG,qBAAdT,EAAKU,KAEHV,EAAKqB,UACND,EAAMpB,EAAKsB,OAAQtB,GACnBoB,EAAMpB,EAAKuB,SAAUvB,IACQ,mBAArBA,EAAKsB,OAAOZ,KACpBX,EAAQC,EAAMF,EAAcE,EAAKuB,SAAS/I,OAE1C4I,EAAMpB,EAAKsB,OAAQtB,OAEhB,CAAA,GAAiB,mBAAdA,EAAKU,KACb,KAAM,IAAI9N,OAAM,6CACX,IAAiB,eAAdoN,EAAKU,KAAuB,CAEpC,GAAIlI,GAAOwH,EAAKxH,KACZgJ,EAAQN,EAASlF,QAAQxD,EAC7B,IAAGgJ,GAAS,EAAG,CACb,GAAI7F,GAAOwF,EAAaK,GACpBC,EAAQjB,EAASR,EAClByB,GAAQZ,IACTlF,EAAKlD,QAAS,GAEbgJ,EAAQX,IACTnF,EAAKjD,QAAS,KAEdiD,EAAKhD,MACPoH,EAAQC,EAAMrE,EAAKnD,UACXsG,GAAStG,IAGjBuH,EAAQC,EAAML,EAAYnH,QAEvB,IAAiB,YAAdwH,EAAKU,KACY,gBAAfV,GAAKxM,OACbuM,EAAQC,EAAMK,EAAaL,EAAKxM,YAE7B,CAAA,GAAiB,kBAAdwM,EAAKU,KACb,KAAM,IAAI9N,OAAM,8CAIhB,KAAI,GADA8O,GAAOhO,OAAOgO,KAAK1B,GACf/P,EAAE,EAAGuG,EAAEkL,EAAKvR,OAAUqG,EAAFvG,IAAOA,EACjC,GAAe,WAAZyR,EAAKzR,GAAR,CAGA,GAAIuD,GAAQwM,EAAK0B,EAAKzR,GACtB,IAAGuD,EACD,GAAGA,YAAiBzD,OAClB,IAAI,GAAI0K,GAAE,EAAGA,EAAEjH,EAAMrD,SAAUsK,EAC1BjH,EAAMiH,IAA+B,gBAAlBjH,GAAMiH,GAAGiG,MAC7BU,EAAM5N,EAAMiH,GAAIuF,OAGU,gBAAfxM,GAAMkN,MACrBU,EAAM5N,EAAOwM,OAKpBZ,EAAIlL,KAAK,GAAGoL,WAAWC,OAAOrL,KAAMnC,QAGvC4L,EAAKpF,GACLoF,EAAKrF,EAGL,IAAIqJ,GAAU,GAAI9C,GAAgB0B,EAAOnB,EAAIlL,KAAK,GAAGoL,WAAWC,OAAOrL,MAAOiN,EAAc7I,EAAUC,EACtG,OAAOoJ,GA7LT,GAAIX,GAAUhS,EAAoB,IAC9B2O,EAAO3O,EAAoB,GAE3BiS,EAAiB,CA6LrBtS,GAAOD,QAAU+Q,GAIZ,SAAS9Q,EAAQD,EAASM,GAE/B,GAAI4S,GAAgCC,EAA8BC,GA4CjE,SAAUtT,EAAMC,GACb,YAOMoT,IAAgCnT,GAAUkT,EAAiC,EAAWE,EAA2E,kBAAnCF,GAAiDA,EAA+B9P,MAAMpD,EAASmT,GAAiCD,IAAmE7P,SAAlC+P,IAAgDnT,EAAOD,QAAUoT,KAMxWhT,KAAM,SAAUJ,GACd,YAwJA,SAASqT,GAAOC,EAAWC,GAEvB,IAAKD,EACD,KAAM,IAAIpP,OAAM,WAAaqP,GAIrC,QAASC,GAAeC,GACpB,MAAQA,IAAM,IAAY,IAANA,EAGxB,QAASC,GAAWD,GAChB,MAAO,yBAAyBnG,QAAQmG,IAAO,EAGnD,QAASE,GAAaF,GAClB,MAAO,WAAWnG,QAAQmG,IAAO,EAMrC,QAASG,GAAaH,GAClB,MAAe,MAAPA,GAAwB,IAAPA,GAAwB,KAAPA,GAAwB,KAAPA,GAAwB,MAAPA,GACvEA,GAAM,OAAW,KAAQ,KAAQ,KAAQ,KAAQ,KAAQ,KAAQ,KAAQ,KAAQ,KAAQ,KAAQ,KAAQ,KAAQ,KAAQ,KAAQ,KAAQ,MAAQ,OAAQnG,QAAQmG,IAAO,EAKjL,QAASI,GAAiBJ,GACtB,MAAe,MAAPA,GAAwB,KAAPA,GAAwB,OAAPA,GAA0B,OAAPA,EAKjE,QAASK,GAAkBL,GACvB,MAAe,MAAPA,GAAwB,KAAPA,GACpBA,GAAM,IAAc,IAANA,GACdA,GAAM,IAAc,KAANA,GACP,KAAPA,GACCA,GAAM,KAASM,GAAMC,wBAAwBC,KAAKC,OAAOC,aAAaV,IAGhF,QAASW,GAAiBX,GACtB,MAAe,MAAPA,GAAwB,KAAPA,GACpBA,GAAM,IAAc,IAANA,GACdA,GAAM,IAAc,KAANA,GACdA,GAAM,IAAc,IAANA,GACP,KAAPA,GACCA,GAAM,KAASM,GAAMM,uBAAuBJ,KAAKC,OAAOC,aAAaV,IAK/E,QAASa,GAAqB7T,GAC1B,OAAQA,GACR,IAAK,QACL,IAAK,OACL,IAAK,SACL,IAAK,UACL,IAAK,SACL,IAAK,QACD,OAAO,CACX,SACI,OAAO,GAIf,QAAS8T,GAAyB9T,GAC9B,OAAQA,GACR,IAAK,aACL,IAAK,YACL,IAAK,UACL,IAAK,UACL,IAAK,YACL,IAAK,SACL,IAAK,SACL,IAAK,QACL,IAAK,MACD,OAAO,CACX,SACI,OAAO,GAIf,QAAS+T,GAAiB/T,GACtB,MAAc,SAAPA,GAAwB,cAAPA,EAK5B,QAASgU,GAAUhU,GACf,GAAIiU,IAAUH,EAAyB9T,GACnC,OAAO,CAOX,QAAQA,EAAGgB,QACX,IAAK,GACD,MAAe,OAAPhB,GAAwB,OAAPA,GAAwB,OAAPA,CAC9C,KAAK,GACD,MAAe,QAAPA,GAAyB,QAAPA,GAAyB,QAAPA,GAChC,QAAPA,GAAyB,QAAPA,CAC3B,KAAK,GACD,MAAe,SAAPA,GAA0B,SAAPA,GAA0B,SAAPA,GAClC,SAAPA,GAA0B,SAAPA,GAA0B,SAAPA,CAC/C,KAAK,GACD,MAAe,UAAPA,GAA2B,UAAPA,GAA2B,UAAPA,GACpC,UAAPA,GAA2B,UAAPA,GAA2B,UAAPA,GACjC,UAAPA,GAA2B,UAAPA,CAC7B,KAAK,GACD,MAAe,WAAPA,GAA4B,WAAPA,GAA4B,WAAPA,GACtC,WAAPA,GAA4B,WAAPA,GAA4B,WAAPA,CACnD,KAAK,GACD,MAAe,YAAPA,GAA6B,YAAPA,GAA6B,YAAPA,CACxD,KAAK,GACD,MAAe,aAAPA,GAA8B,aAAPA,GAA8B,aAAPA,CAC1D,KAAK,IACD,MAAe,eAAPA,CACZ,SACI,OAAO,GAMf,QAASkU,GAAW3C,EAAMlN,EAAO8P,EAAOC,EAAKC,GACzC,GAAIC,EAEJ1B,GAAwB,gBAAVuB,GAAoB,oCAM9BI,GAAMC,kBAAoBL,IAG9BI,GAAMC,iBAAmBL,EAEzBG,GACI/C,KAAMA,EACNlN,MAAOA,GAEPoQ,GAAM1D,QACNuD,EAAQvD,OAASoD,EAAOC,IAExBK,GAAMJ,MACNC,EAAQD,IAAMA,GAElBI,GAAMC,SAAS1R,KAAKsR,GAChBG,GAAME,gBACNF,GAAMG,gBAAgB5R,KAAKsR,GAC3BG,GAAMI,iBAAiB7R,KAAKsR,KAIpC,QAASQ,GAAsBjN,GAC3B,GAAIsM,GAAOE,EAAKrB,EAAIsB,CAUpB,KARAH,EAAQY,GAAQlN,EAChBwM,GACIF,OACIa,KAAMC,GACNC,OAAQH,GAAQI,GAAYtN,IAIrB7G,GAAR+T,IAGH,GAFA/B,EAAK5B,GAAOgE,WAAWL,MACrBA,GACE3B,EAAiBJ,GAcjB,MAbIyB,IAAMC,WACNJ,EAAUlD,GAAOzG,MAAMwJ,EAAQtM,EAAQkN,GAAQ,GAC/CV,EAAID,KACAY,KAAMC,GACNC,OAAQH,GAAQI,GAAY,GAEhCjB,EAAW,OAAQI,EAASH,EAAOY,GAAQ,EAAGV,IAEvC,KAAPrB,GAA0C,KAA7B5B,GAAOgE,WAAWL,OAC7BA,KAEJE,QACFE,GAAYJ,GAKhBN,IAAMC,WACNJ,EAAUlD,GAAOzG,MAAMwJ,EAAQtM,EAAQkN,IACvCV,EAAID,KACAY,KAAMC,GACNC,OAAQH,GAAQI,IAEpBjB,EAAW,OAAQI,EAASH,EAAOY,GAAOV,IAIlD,QAASgB,KACL,GAAIlB,GAAOE,EAAKrB,EAAIsB,CAYpB,KAVIG,GAAMC,WACNP,EAAQY,GAAQ,EAChBV,GACIF,OACIa,KAAMC,GACNC,OAAQH,GAAQI,GAAY,KAKzBnU,GAAR+T,IAEH,GADA/B,EAAK5B,GAAOgE,WAAWL,IACnB3B,EAAiBJ,GACN,KAAPA,GAAgD,KAAjC5B,GAAOgE,WAAWL,GAAQ,MACvCA,KAEJE,KACAF,GACFI,GAAYJ,GACRA,IAAS/T,IACTsU,KAAeC,GAASC,gBAAiB,eAE1C,IAAW,KAAPxC,EAAa,CAEpB,GAAqC,KAAjC5B,GAAOgE,WAAWL,GAAQ,GAW1B,QAVEA,KACAA,QACEN,GAAMC,WACNJ,EAAUlD,GAAOzG,MAAMwJ,EAAQ,EAAGY,GAAQ,GAC1CV,EAAID,KACAY,KAAMC,GACNC,OAAQH,GAAQI,IAEpBjB,EAAW,QAASI,EAASH,EAAOY,GAAOV,OAIjDU,SAEAA,EAIVO,MAAeC,GAASC,gBAAiB,WAG7C,QAASC,KACL,GAAIzC,GAAImB,CAGR,KADAA,EAAmB,IAAVY,GACM/T,GAAR+T,IAGH,GAFA/B,EAAK5B,GAAOgE,WAAWL,IAEnB5B,EAAaH,KACX+B,OACC,IAAI3B,EAAiBJ,KACtB+B,GACS,KAAP/B,GAA4C,KAA7B5B,GAAOgE,WAAWL,OAC/BA,KAEJE,GACFE,GAAYJ,GACZZ,GAAQ,MACL,IAAW,KAAPnB,EAEP,GADAA,EAAK5B,GAAOgE,WAAWL,GAAQ,GACpB,KAAP/B,IACE+B,KACAA,GACFD,EAAsB,GACtBX,GAAQ,MACL,CAAA,GAAW,KAAPnB,EAKP,QAJE+B,KACAA,GACFM,QAID,IAAIlB,GAAgB,KAAPnB,EAAa,CAE7B,GAAsC,KAAjC5B,GAAOgE,WAAWL,GAAQ,IAAkD,KAAjC3D,GAAOgE,WAAWL,GAAQ,GAKtE,KAHAA,KAAS,EACTD,EAAsB,OAIvB,CAAA,GAAW,KAAP9B,EAWP,KAVA,IAA2C,QAAvC5B,GAAOzG,MAAMoK,GAAQ,EAAGA,GAAQ,GAOhC,QANEA,KACAA,KACAA,KACAA,GACFD,EAAsB,IAUtC,QAASY,GAAchF,GACnB,GAAI5P,GAAGkO,EAAKgE,EAAIzM,EAAO,CAGvB,KADAyI,EAAkB,MAAX0B,EAAkB,EAAI,EACxB5P,EAAI,EAAOkO,EAAJlO,IAAWA,EAAG,CACtB,KAAYE,GAAR+T,IAAkB9B,EAAW7B,GAAO2D,MAIpC,MAAO,EAHP/B,GAAK5B,GAAO2D,MACZxO,EAAc,GAAPA,EAAY,mBAAmBsG,QAAQmG,EAAG2C,eAKzD,MAAOlC,QAAOC,aAAanN,GAG/B,QAASqP,KACL,GAAI5C,GAAIhT,CAkBR,KAhBAgT,EAAK5B,GAAOgE,WAAWL,MACvB/U,EAAKyT,OAAOC,aAAaV,GAGd,KAAPA,IACiC,MAA7B5B,GAAOgE,WAAWL,KAClBO,KAAeC,GAASC,gBAAiB,aAE3CT,GACF/B,EAAK0C,EAAc,KACd1C,GAAa,OAAPA,GAAgBK,EAAkBL,EAAGoC,WAAW,KACvDE,KAAeC,GAASC,gBAAiB,WAE7CxV,EAAKgT,GAGMhS,GAAR+T,KACH/B,EAAK5B,GAAOgE,WAAWL,IAClBpB,EAAiBX,OAGpB+B,GACF/U,GAAMyT,OAAOC,aAAaV,GAGf,KAAPA,IACAhT,EAAKA,EAAG6V,OAAO,EAAG7V,EAAGgB,OAAS,GACG,MAA7BoQ,GAAOgE,WAAWL,KAClBO,KAAeC,GAASC,gBAAiB,aAE3CT,GACF/B,EAAK0C,EAAc,KACd1C,GAAa,OAAPA,GAAgBW,EAAiBX,EAAGoC,WAAW,KACtDE,KAAeC,GAASC,gBAAiB,WAE7CxV,GAAMgT,EAId,OAAOhT,GAGX,QAAS8V,KACL,GAAI3B,GAAOnB,CAGX,KADAmB,EAAQY,KACO/T,GAAR+T,IAAgB,CAEnB,GADA/B,EAAK5B,GAAOgE,WAAWL,IACZ,KAAP/B,EAGA,MADA+B,IAAQZ,EACDyB,GAEX,KAAIjC,EAAiBX,GAGjB,QAFE+B,GAMV,MAAO3D,IAAOzG,MAAMwJ,EAAOY,IAG/B,QAASgB,KACL,GAAI5B,GAAOnU,EAAIuR,CAqBf,OAnBA4C,GAAQY,GAGR/U,EAAmC,KAA7BoR,GAAOgE,WAAWL,IAAmBa,IAAyBE,IAKhEvE,EADc,IAAdvR,EAAGgB,OACIgV,GAAMC,WACNjC,EAAUhU,GACVgW,GAAME,QACC,SAAPlW,EACAgW,GAAMG,YACC,SAAPnW,GAAwB,UAAPA,EACjBgW,GAAMI,eAENJ,GAAMC,YAIb1E,KAAMA,EACNlN,MAAOrE,EACPiV,WAAYA,GACZE,UAAWA,GACXhB,MAAOA,EACPC,IAAKW,IAOb,QAASsB,KACL,GAEIC,GAEAC,EACAC,EACAC,EANAtC,EAAQY,GACRxO,EAAO6K,GAAOgE,WAAWL,IAEzB2B,EAAMtF,GAAO2D,GAKjB,QAAQxO,GAGR,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KACL,IAAK,KACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KASD,QAREwO,GACEN,GAAMkC,WACO,KAATpQ,EACAkO,GAAMmC,eAAiBnC,GAAMoC,OAAO7V,OACpB,MAATuF,IACPkO,GAAMqC,eAAiBrC,GAAMoC,OAAO7V,UAIxCuQ,KAAMyE,GAAMe,WACZ1S,MAAOoP,OAAOC,aAAanN,GAC3B0O,WAAYA,GACZE,UAAWA,GACXhB,MAAOA,EACPC,IAAKW,GAGb,SAII,GAHAuB,EAAQlF,GAAOgE,WAAWL,GAAQ,GAGpB,KAAVuB,EACA,OAAQ/P,GACR,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KACL,IAAK,IACL,IAAK,IACL,IAAK,IAED,MADAwO,KAAS,GAELxD,KAAMyE,GAAMe,WACZ1S,MAAOoP,OAAOC,aAAanN,GAAQkN,OAAOC,aAAa4C,GACvDrB,WAAYA,GACZE,UAAWA,GACXhB,MAAOA,EACPC,IAAKW,GAGb,KAAK,IACL,IAAK,IAOD,MANAA,KAAS,EAGwB,KAA7B3D,GAAOgE,WAAWL,OAChBA,IAGFxD,KAAMyE,GAAMe,WACZ1S,MAAO+M,GAAOzG,MAAMwJ,EAAOY,IAC3BE,WAAYA,GACZE,UAAWA,GACXhB,MAAOA,EACPC,IAAKW,KAUrB,MAFA0B,GAAMrF,GAAOyE,OAAOd,GAAO,GAEf,SAAR0B,GACA1B,IAAS,GAELxD,KAAMyE,GAAMe,WACZ1S,MAAOoS,EACPxB,WAAYA,GACZE,UAAWA,GACXhB,MAAOA,EACPC,IAAKW,MAMbyB,EAAMC,EAAIZ,OAAO,EAAG,GAER,QAARW,GAAyB,QAARA,GAAyB,QAARA,GAClCzB,IAAS,GAELxD,KAAMyE,GAAMe,WACZ1S,MAAOmS,EACPvB,WAAYA,GACZE,UAAWA,GACXhB,MAAOA,EACPC,IAAKW,MAKbwB,EAAMC,EAAIX,OAAO,EAAG,GAEfa,IAAQH,EAAI,IAAO,SAAS1J,QAAQ6J,IAAQ,GAAe,OAARH,GACpDxB,IAAS,GAELxD,KAAMyE,GAAMe,WACZ1S,MAAOkS,EACPtB,WAAYA,GACZE,UAAWA,GACXhB,MAAOA,EACPC,IAAKW,KAKT,eAAelI,QAAQ6J,IAAQ,KAC7B3B,IAEExD,KAAMyE,GAAMe,WACZ1S,MAAOqS,EACPzB,WAAYA,GACZE,UAAWA,GACXhB,MAAOA,EACPC,IAAKW,SAIbO,MAAeC,GAASC,gBAAiB,aAK7C,QAASwB,GAAe7C,GAGpB,IAFA,GAAI8C,GAAS,GAEEjW,GAAR+T,IACE9B,EAAW7B,GAAO2D,MAGvBkC,GAAU7F,GAAO2D,KAWrB,OARsB,KAAlBkC,EAAOjW,QACPsU,KAAeC,GAASC,gBAAiB,WAGzCnC,EAAkBjC,GAAOgE,WAAWL,MACpCO,KAAeC,GAASC,gBAAiB,YAIzCjE,KAAMyE,GAAMkB,eACZ7S,MAAO8S,SAAS,KAAOF,EAAQ,IAC/BhC,WAAYA,GACZE,UAAWA,GACXhB,MAAOA,EACPC,IAAKW,IAIb,QAASqC,GAAiBjD,GAEtB,IADA,GAAI8C,GAAS,IAAM7F,GAAO2D,MACX/T,GAAR+T,IACE7B,EAAa9B,GAAO2D,MAGzBkC,GAAU7F,GAAO2D,KAOrB,QAJI1B,EAAkBjC,GAAOgE,WAAWL,MAAWhC,EAAe3B,GAAOgE,WAAWL,OAChFO,KAAeC,GAASC,gBAAiB,YAIzCjE,KAAMyE,GAAMkB,eACZ7S,MAAO8S,SAASF,EAAQ,GACxBI,OAAO,EACPpC,WAAYA,GACZE,UAAWA,GACXhB,MAAOA,EACPC,IAAKW,IAIb,QAASuC,KACL,GAAIxW,GAAGkS,CAIP,KAAKlS,EAAIiU,GAAQ,EAAO/T,GAAJF,IAAcA,EAAG,CAEjC,GADAkS,EAAK5B,GAAOtQ,GACD,MAAPkS,GAAqB,MAAPA,EACd,OAAO,CAEX,KAAKE,EAAaF,GACd,OAAO,EAIf,OAAO,EAGX,QAASuE,KACL,GAAIN,GAAQ9C,EAAOnB,CAQnB,IANAA,EAAK5B,GAAO2D,IACZnC,EAAOG,EAAeC,EAAGoC,WAAW,KAAe,MAAPpC,EACxC,sEAEJmB,EAAQY,GACRkC,EAAS,GACE,MAAPjE,EAAY,CAMZ,GALAiE,EAAS7F,GAAO2D,MAChB/B,EAAK5B,GAAO2D,IAIG,MAAXkC,EAAgB,CAChB,GAAW,MAAPjE,GAAqB,MAAPA,EAEd,QADE+B,GACKiC,EAAe7C,EAE1B,IAAIjB,EAAaF,IACTsE,IACA,MAAOF,GAAiBjD,GAKpC,KAAOpB,EAAe3B,GAAOgE,WAAWL,MACpCkC,GAAU7F,GAAO2D,KAErB/B,GAAK5B,GAAO2D,IAGhB,GAAW,MAAP/B,EAAY,CAEZ,IADAiE,GAAU7F,GAAO2D,MACVhC,EAAe3B,GAAOgE,WAAWL,MACpCkC,GAAU7F,GAAO2D,KAErB/B,GAAK5B,GAAO2D,IAGhB,GAAW,MAAP/B,GAAqB,MAAPA,EAOd,GANAiE,GAAU7F,GAAO2D,MAEjB/B,EAAK5B,GAAO2D,KACD,MAAP/B,GAAqB,MAAPA,KACdiE,GAAU7F,GAAO2D,OAEjBhC,EAAe3B,GAAOgE,WAAWL,KACjC,KAAOhC,EAAe3B,GAAOgE,WAAWL,MACpCkC,GAAU7F,GAAO2D,UAGrBO,MAAeC,GAASC,gBAAiB,UAQjD,OAJInC,GAAkBjC,GAAOgE,WAAWL,MACpCO,KAAeC,GAASC,gBAAiB,YAIzCjE,KAAMyE,GAAMkB,eACZ7S,MAAOmT,WAAWP,GAClBhC,WAAYA,GACZE,UAAWA,GACXhB,MAAOA,EACPC,IAAKW,IAMb,QAAS0C,KACL,GAAcC,GAAOvD,EAAOnB,EAAIzM,EAAMoR,EAAWC,EAAwBC,EAAiBC,EAAtF3G,EAAM,GAAgDkG,GAAQ,CAWlE,KAVAQ,EAAkB5C,GAClB6C,EAAiB3C,GAEjBuC,EAAQtG,GAAO2D,IACfnC,EAAkB,MAAV8E,GAA4B,MAAVA,EACtB,2CAEJvD,EAAQY,KACNA,GAEa/T,GAAR+T,IAAgB,CAGnB,GAFA/B,EAAK5B,GAAO2D,MAER/B,IAAO0E,EAAO,CACdA,EAAQ,EACR,OACG,GAAW,OAAP1E,EAEP,GADAA,EAAK5B,GAAO2D,MACP/B,GAAOI,EAAiBJ,EAAGoC,WAAW,MA4DrCH,GACU,OAARjC,GAAkC,OAAlB5B,GAAO2D,OACrBA,GAENI,GAAYJ,OA/DZ,QAAQ/B,GACR,IAAK,IACL,IAAK,IACD4E,EAAU7C,GACV4C,EAAYjC,EAAc1C,GACtB2E,EACAxG,GAAOwG,GAEP5C,GAAQ6C,EACRzG,GAAO6B,EAEX,MACJ,KAAK,IACD7B,GAAO,IACP,MACJ,KAAK,IACDA,GAAO,IACP,MACJ,KAAK,IACDA,GAAO,GACP,MACJ,KAAK,IACDA,GAAO,IACP,MACJ,KAAK,IACDA,GAAO,IACP,MACJ,KAAK,IACDA,GAAO,MACP,MAEJ,SACQ+B,EAAaF,IACbzM,EAAO,WAAWsG,QAAQmG,GAGb,IAATzM,IACA8Q,GAAQ,GAGArW,GAAR+T,IAAkB7B,EAAa9B,GAAO2D,OACtCsC,GAAQ,EACR9Q,EAAc,EAAPA,EAAW,WAAWsG,QAAQuE,GAAO2D,OAIxC,OAAOlI,QAAQmG,IAAO,GACVhS,GAAR+T,IACA7B,EAAa9B,GAAO2D,OACxBxO,EAAc,EAAPA,EAAW,WAAWsG,QAAQuE,GAAO2D,SAGpD5D,GAAOsC,OAAOC,aAAanN,IAE3B4K,GAAO6B,MAWhB,CAAA,GAAII,EAAiBJ,EAAGoC,WAAW,IACtC,KAEAjE,IAAO6B,GAQf,MAJc,KAAV0E,GACApC,KAAeC,GAASC,gBAAiB,YAIzCjE,KAAMyE,GAAM+B,cACZ1T,MAAO8M,EACPkG,MAAOA,EACPQ,gBAAiBA,EACjBC,eAAgBA,EAChB7C,WAAYA,GACZE,UAAWA,GACXhB,MAAOA,EACPC,IAAKW,IAIb,QAASiD,GAAWC,EAASC,GACzB,GAAI7T,EACJ,KACIA,EAAQ,GAAIqI,QAAOuL,EAASC,GAC9B,MAAOC,GACL7C,KAAeC,GAAS6C,eAE5B,MAAO/T,GAGX,QAASgU,KACL,GAAIrF,GAAI7B,EAAKmH,EAAaC,EAAYxT,CAQtC,KANAiO,EAAK5B,GAAO2D,IACZnC,EAAc,MAAPI,EAAY,sDACnB7B,EAAMC,GAAO2D,MAEbuD,GAAc,EACdC,GAAa,EACEvX,GAAR+T,IAGH,GAFA/B,EAAK5B,GAAO2D,MACZ5D,GAAO6B,EACI,OAAPA,EACAA,EAAK5B,GAAO2D,MAER3B,EAAiBJ,EAAGoC,WAAW,KAC/BE,KAAeC,GAASiD,oBAE5BrH,GAAO6B,MACJ,IAAII,EAAiBJ,EAAGoC,WAAW,IACtCE,KAAeC,GAASiD,wBACrB,IAAIF,EACI,MAAPtF,IACAsF,GAAc,OAEf,CACH,GAAW,MAAPtF,EAAY,CACZuF,GAAa,CACb,OACc,MAAPvF,IACPsF,GAAc,GAW1B,MANKC,IACDjD,KAAeC,GAASiD,oBAI5BzT,EAAOoM,EAAI0E,OAAO,EAAG1E,EAAInQ,OAAS,IAE9BqD,MAAOU,EACP0T,QAAStH,GAIjB,QAASuH,KACL,GAAI1F,GAAI7B,EAAK+G,EAAON,CAIpB,KAFAzG,EAAM,GACN+G,EAAQ,GACOlX,GAAR+T,KACH/B,EAAK5B,GAAO2D,IACPpB,EAAiBX,EAAGoC,WAAW,MAKpC,KADEL,GACS,OAAP/B,GAAuBhS,GAAR+T,GAEf,GADA/B,EAAK5B,GAAO2D,IACD,MAAP/B,EAAY,CAIZ,KAHE+B,GACF6C,EAAU7C,GACV/B,EAAK0C,EAAc,KAGf,IADAwC,GAASlF,EACJ7B,GAAO,MAAiB4D,GAAV6C,IAAmBA,EAClCzG,GAAOC,GAAOwG,OAGlB7C,IAAQ6C,EACRM,GAAS,IACT/G,GAAO,KAEXwH,MAAuBpD,GAASC,gBAAiB,eAEjDrE,IAAO,KACPwH,KAAuBpD,GAASC,gBAAiB,eAGrD0C,IAASlF,EACT7B,GAAO6B,CAIf,QACI3O,MAAO6T,EACPO,QAAStH,GAIjB,QAASyH,KACL,GAAIzE,GAAOpP,EAAMmT,EAAgB7T,CAUjC,OARAwU,IAAY,KACZpD,IACAtB,EAAQY,GAERhQ,EAAOsT,IACPH,EAAQQ,IACRrU,EAAQ2T,EAAWjT,EAAKV,MAAO6T,EAAM7T,OAEjCoQ,GAAMkC,UAEFpF,KAAMyE,GAAM8C,kBACZzU,MAAOA,EACP4Q,WAAYA,GACZE,UAAWA,GACXhB,MAAOA,EACPC,IAAKW,KAKT0D,QAAS1T,EAAK0T,QAAUP,EAAMO,QAC9BpU,MAAOA,EACP8P,MAAOA,EACPC,IAAKW,IAIb,QAASgE,KACL,GAAIC,GAAK3E,EAAK4E,EAAOC,CAsCrB,OApCAzD,KAEAuD,EAAMjE,GACNV,GACIF,OACIa,KAAMC,GACNC,OAAQH,GAAQI,KAIxB8D,EAAQL,IACRvE,EAAID,KACAY,KAAMC,GACNC,OAAQH,GAAQI,IAIfV,GAAMkC,WAEHlC,GAAMoC,OAAO7V,OAAS,IACtBkY,EAAQzE,GAAMoC,OAAOpC,GAAMoC,OAAO7V,OAAS,GACvCkY,EAAMnI,MAAM,KAAOiI,GAAsB,eAAfE,EAAM3H,OACZ,MAAhB2H,EAAM7U,OAAiC,OAAhB6U,EAAM7U,QAC7BoQ,GAAMoC,OAAOsC,OAKzB1E,GAAMoC,OAAO7T,MACTuO,KAAM,oBACNlN,MAAO4U,EAAMR,QACb1H,OAAQiI,EAAKjE,IACbV,IAAKA,KAIN4E,EAGX,QAASG,GAAiBF,GACtB,MAAOA,GAAM3H,OAASyE,GAAMC,YACxBiD,EAAM3H,OAASyE,GAAME,SACrBgD,EAAM3H,OAASyE,GAAMI,gBACrB8C,EAAM3H,OAASyE,GAAMG,YAG7B,QAASkD,KACL,GAAIC,GACAC,CAIJ,IADAD,EAAY7E,GAAMoC,OAAOpC,GAAMoC,OAAO7V,OAAS,IAC1CsY,EAED,MAAOP,IAEX,IAAuB,eAAnBO,EAAU/H,KAAuB,CACjC,GAAwB,MAApB+H,EAAUjV,MACV,MAAOgS,IAEX,IAAwB,MAApBiD,EAAUjV,MAEV,MADAkV,GAAa9E,GAAMoC,OAAOpC,GAAMmC,eAAiB,IAC7C2C,GACwB,YAApBA,EAAWhI,MACW,OAArBgI,EAAWlV,OACU,UAArBkV,EAAWlV,OACU,QAArBkV,EAAWlV,OACU,SAArBkV,EAAWlV,MAGbgS,IAFI0C,GAIf,IAAwB,MAApBO,EAAUjV,MAAe,CAGzB,GAAIoQ,GAAMoC,OAAOpC,GAAMqC,eAAiB,IACgB,YAAhDrC,GAAMoC,OAAOpC,GAAMqC,eAAiB,GAAGvF,MAG3C,GADAgI,EAAa9E,GAAMoC,OAAOpC,GAAMqC,eAAiB,IAC5CyC,EACD,MAAOlD,SAER,CAAA,IAAI5B,GAAMoC,OAAOpC,GAAMqC,eAAiB,IACS,YAAhDrC,GAAMoC,OAAOpC,GAAMqC,eAAiB,GAAGvF,KAO3C,MAAO8E,IAJP,IADAkD,EAAa9E,GAAMoC,OAAOpC,GAAMqC,eAAiB,IAC5CyC,EACD,MAAOR,KAOf,MAAIS,IAAa3M,QAAQ0M,EAAWlV,QAAU,EAEnCgS,IAGJ0C,IAEX,MAAOA,KAEX,MAAuB,YAAnBO,EAAU/H,MAA0C,SAApB+H,EAAUjV,MACnC0U,IAEJ1C;CAGX,QAASoD,KACL,GAAIzG,EAIJ,OAFAyC,KAEIV,IAAS/T,IAELuQ,KAAMyE,GAAM0D,IACZzE,WAAYA,GACZE,UAAWA,GACXhB,MAAOY,GACPX,IAAKW,KAIb/B,EAAK5B,GAAOgE,WAAWL,IAEnB1B,EAAkBL,GACX+C,IAIA,KAAP/C,GAAsB,KAAPA,GAAsB,KAAPA,EACvBqD,IAIA,KAAPrD,GAAsB,KAAPA,EACRyE,IAMA,KAAPzE,EACID,EAAe3B,GAAOgE,WAAWL,GAAQ,IAClCwC,IAEJlB,IAGPtD,EAAeC,GACRuE,IAIP9C,GAAMkC,UAAmB,KAAP3D,EACXqG,IAGJhD,KAGX,QAASsD,KACL,GAAItF,GAAK6E,EAAc7U,CA0BvB,OAxBAoR,KACApB,GACIF,OACIa,KAAMC,GACNC,OAAQH,GAAQI,KAIxB+D,EAAQO,IACRpF,EAAID,KACAY,KAAMC,GACNC,OAAQH,GAAQI,IAGhB+D,EAAM3H,OAASyE,GAAM0D,MACrBrV,EAAQ+M,GAAOzG,MAAMuO,EAAM/E,MAAO+E,EAAM9E,KACxCK,GAAMoC,OAAO7T,MACTuO,KAAMqI,GAAUV,EAAM3H,MACtBlN,MAAOA,EACP0M,OAAQmI,EAAM/E,MAAO+E,EAAM9E,KAC3BC,IAAKA,KAIN6E,EAGX,QAASW,KACL,GAAIX,EAaJ,OAXAA,GAAQL,GACR9D,GAAQmE,EAAM9E,IACda,GAAaiE,EAAMjE,WACnBE,GAAY+D,EAAM/D,UAElB0D,GAAqC,mBAAjBpE,IAAMoC,OAA0B8C,IAAiBF,IAErE1E,GAAQmE,EAAM9E,IACda,GAAaiE,EAAMjE,WACnBE,GAAY+D,EAAM/D,UAEX+D,EAGX,QAASY,KACL,GAAId,GAAKhE,EAAMb,CAEf6E,GAAMjE,GACNC,EAAOC,GACPd,EAAQgB,GACR0D,GAAqC,mBAAjBpE,IAAMoC,OAA0B8C,IAAiBF,IACrE1E,GAAQiE,EACR/D,GAAaD,EACbG,GAAYhB,EAGhB,QAAS4F,GAAS/E,EAAME,GACpBvV,KAAKqV,KAAOA,EACZrV,KAAKuV,OAASA,EAGlB,QAAS8E,GAAeC,EAAWC,EAAalF,EAAME,GAClDvV,KAAKwU,MAAQ,GAAI4F,GAASE,EAAWC,GACrCva,KAAKyU,IAAM,GAAI2F,GAAS/E,EAAME,GA8ZlC,QAASiF,KACL,GAAInB,GAAKhE,EAAMb,EAAOiG,CAWtB,OATApB,GAAMjE,GACNC,EAAOC,GACPd,EAAQgB,GACRM,IACA2E,EAAQnF,KAAeD,EACvBD,GAAQiE,EACR/D,GAAaD,EACbG,GAAYhB,EAELiG,EAKX,QAAS9E,GAAW4D,EAAOmB,GACvB,GAAIC,GACAxV,EAAOlE,MAAM8G,UAAUiD,MAAMzK,KAAKqD,UAAW,GAC7CgX,EAAMF,EAAcnN,QAChB,SACA,SAAUsN,EAAOzF,GAEb,MADAnC,GAAOmC,EAAQjQ,EAAK9D,OAAQ,sCACrB8D,EAAKiQ,IAiBxB,MAbgC,gBAArBmE,GAAMjE,YACbqF,EAAQ,GAAI7W,OAAM,QAAUyV,EAAMjE,WAAa,KAAOsF,GACtDD,EAAMvF,MAAQmE,EAAM/E,MACpBmG,EAAMrF,WAAaiE,EAAMjE,WACzBqF,EAAMpF,OAASgE,EAAM/E,MAAQgB,GAAY,IAEzCmF,EAAQ,GAAI7W,OAAM,QAAUwR,GAAa,KAAOsF,GAChDD,EAAMvF,MAAQA,GACduF,EAAMrF,WAAaA,GACnBqF,EAAMpF,OAASH,GAAQI,GAAY,GAGvCmF,EAAMG,YAAcF,EACdD,EAGV,QAAS3B,KACL,IACIrD,EAAW3S,MAAM,KAAMY,WACzB,MAAO4U,GACL,IAAI1D,GAAMiG,OAGN,KAAMvC,EAFN1D,IAAMiG,OAAO1X,KAAKmV,IAU9B,QAASwC,GAAgBzB,GAiBrB,GAhBIA,EAAM3H,OAASyE,GAAM0D,KACrBpE,EAAW4D,EAAO3D,GAASqF,eAG3B1B,EAAM3H,OAASyE,GAAMkB,gBACrB5B,EAAW4D,EAAO3D,GAASsF,kBAG3B3B,EAAM3H,OAASyE,GAAM+B,eACrBzC,EAAW4D,EAAO3D,GAASuF,kBAG3B5B,EAAM3H,OAASyE,GAAMC,YACrBX,EAAW4D,EAAO3D,GAASwF,sBAG3B7B,EAAM3H,OAASyE,GAAME,QAAS,CAC9B,GAAIrC,EAAqBqF,EAAM7U,OAC3BiR,EAAW4D,EAAO3D,GAASyF,wBACxB,IAAI/G,IAAUH,EAAyBoF,EAAM7U,OAEhD,WADAsU,GAAmBO,EAAO3D,GAAS0F,mBAGvC3F,GAAW4D,EAAO3D,GAASC,gBAAiB0D,EAAM7U,OAItDiR,EAAW4D,EAAO3D,GAASC,gBAAiB0D,EAAM7U,OAMtD,QAAS6W,GAAO7W,GACZ,GAAI6U,GAAQW,KACRX,EAAM3H,OAASyE,GAAMe,YAAcmC,EAAM7U,QAAUA,IACnDsW,EAAgBzB,GAOxB,QAASiC,GAAcC,GACnB,GAAIlC,GAAQW,KACRX,EAAM3H,OAASyE,GAAME,SAAWgD,EAAM7U,QAAU+W,IAChDT,EAAgBzB,GAMxB,QAASvL,GAAMtJ,GACX,MAAOwU,IAAUtH,OAASyE,GAAMe,YAAc8B,GAAUxU,QAAUA,EAKtE,QAASgX,GAAaD,GAClB,MAAOvC,IAAUtH,OAASyE,GAAME,SAAW2C,GAAUxU,QAAU+W,EAKnE,QAASE,KACL,GAAIC,EAEJ,OAAI1C,IAAUtH,OAASyE,GAAMe,YAClB,GAEXwE,EAAK1C,GAAUxU,MACD,MAAPkX,GACI,OAAPA,GACO,OAAPA,GACO,OAAPA,GACO,OAAPA,GACO,OAAPA,GACO,QAAPA,GACO,QAAPA,GACO,SAAPA,GACO,OAAPA,GACO,OAAPA,GACO,OAAPA,GAGR,QAASC,KACL,GAAIxG,GAAMyG,EAAW1G,GAAO2G,EAAgBzG,GACxC0G,EAAexG,GAAWyG,EAAe/C,EAG7C,OAAiC,MAA7BzH,GAAOgE,WAAWL,KAAmBpH,EAAM,SAC3CkM,MAIJ7E,EAAOC,GACPQ,IACIR,KAAeD,GACfD,GAAQ0G,EACRxG,GAAayG,EACbvG,GAAYwG,OACZ9C,GAAY+C,SAIZ/C,GAAUtH,OAASyE,GAAM0D,KAAQ/L,EAAM,MACvCgN,EAAgB9B,MAMxB,QAASgD,GAAeC,GACpB,MAAOA,GAAKvK,OAASwK,GAAO9F,YAAc6F,EAAKvK,OAASwK,GAAOC,iBAKnE,QAASC,KACL,GAAmBC,GAAfC,IAKJ,KAHAD,EAAarD,GACbqC,EAAO,MAECvN,EAAM,MACNA,EAAM,MACNkM,IACAsC,EAASnZ,KAAK,QAEdmZ,EAASnZ,KAAKoZ,MAETzO,EAAM,MACPuN,EAAO,KAOnB,OAFArB,KAEOwC,GAASC,QAAQD,GAASE,sBAAsBJ,GAAWD,GAKtE,QAASM,GAAsBC,EAAOC,GAClC,GAAIC,GAAgB5X,EAAMmX,CAS1B,OAPAS,GAAiB1I,GACjBiI,EAAarD,GACb9T,EAAO6X,KACHF,GAASzI,IAAUF,EAAiB0I,EAAM,GAAGpT,OAC7CsP,EAAmB+D,EAAOnH,GAASsH,iBAEvC5I,GAAS0I,EACFN,GAASC,QAAQD,GAASS,yBAAyB,KAAML,KAAW1X,GAAOmX,GAGtF,QAASa,KACL,GAAI7D,GAAOgD,CAQX,OANAA,GAAarD,GACbK,EAAQW,IAKJX,EAAM3H,OAASyE,GAAM+B,eAAiBmB,EAAM3H,OAASyE,GAAMkB,gBACvDjD,IAAUiF,EAAM7B,OAChBsB,EAAmBO,EAAO3D,GAASyH,oBAEhCX,GAASC,QAAQD,GAASY,cAAc/D,GAAQgD,IAGpDG,GAASC,QAAQD,GAASa,iBAAiBhE,EAAM7U,OAAQ6X,GAGpE,QAASiB,MACL,GAAIjE,GAAOkE,EAAKpd,EAAIqE,EAAOoY,EAAOP,CAKlC,OAHAhD,GAAQL,GACRqD,EAAarD,GAETK,EAAM3H,OAASyE,GAAMC,YAErBjW,EAAK+c,IAIe,QAAhB7D,EAAM7U,OAAoBsJ,EAAM,KAOhB,QAAhBuL,EAAM7U,OAAoBsJ,EAAM,MAepCuN,EAAO,KACP7W,EAAQ+X,KACDC,GAASC,QAAQD,GAASgB,eAAe,OAAQrd,EAAIqE,GAAQ6X,KAhBhEkB,EAAML,IACN7B,EAAO,KACPhC,EAAQL,GACJK,EAAM3H,OAASyE,GAAMC,YACrBiF,EAAO,KACPvC,EAAmBO,EAAO3D,GAASC,gBAAiB0D,EAAM7U,OAC1DA,EAAQmY,QAERC,GAAUa,MACVpC,EAAO,KACP7W,EAAQmY,EAAsBC,EAAOvD,IAElCmD,GAASC,QAAQD,GAASgB,eAAe,MAAOD,EAAK/Y,GAAQ6X,KAnBpEkB,EAAML,IACN7B,EAAO,KACPA,EAAO,KACP7W,EAAQmY,MACDH,GAASC,QAAQD,GAASgB,eAAe,MAAOD,EAAK/Y,GAAQ6X,KAqBxEhD,EAAM3H,OAASyE,GAAM0D,KAAOR,EAAM3H,OAASyE,GAAMe,YAGjDqG,EAAML,IACN7B,EAAO,KACP7W,EAAQ+X,KACDC,GAASC,QAAQD,GAASgB,eAAe,OAAQD,EAAK/Y,GAAQ6X,QALrEvB,GAAgBzB,GASxB,QAASqE,MACL,GAAqBnL,GAAU/I,EAAM+T,EAAKI,EAAmCtB,EAAzEuB,KAA4C5W,KAAUc,EAAW8L,MAMrE,KAJAyI,EAAarD,GAEbqC,EAAO,MAECvN,EAAM,MACVyE,EAAW+K,KAGP9T,EADA+I,EAASgL,IAAI7L,OAASwK,GAAO9F,WACtB7D,EAASgL,IAAI/T,KAEb1B,EAASyK,EAASgL,IAAI/Y,OAEjCmZ,EAA0B,SAAlBpL,EAASoL,KAAmBE,GAAaC,KAA0B,QAAlBvL,EAASoL,KAAkBE,GAAaE,IAAMF,GAAaG,IAEpHT,EAAM,IAAM/T,EACR9E,OAAOmD,UAAUoW,eAAe5d,KAAK2G,EAAKuW,IACtCvW,EAAIuW,KAASM,GAAaC,KACtB1J,IAAUuJ,IAASE,GAAaC,KAChChF,KAAuBpD,GAASwI,yBACzBP,IAASE,GAAaC,MAC7BhF,KAAuBpD,GAASyI,sBAGhCR,IAASE,GAAaC,KACtBhF,KAAuBpD,GAASyI,sBACzBnX,EAAIuW,GAAOI,GAClB7E,KAAuBpD,GAAS0I,gBAGxCpX,EAAIuW,IAAQI,GAEZ3W,EAAIuW,GAAOI,EAGfC,EAAWza,KAAKoP,GAEXzE,EAAM,MACPuN,EAAO,IAMf,OAFAA,GAAO,KAEAmB,GAASC,QAAQD,GAAS6B,uBAAuBT,GAAavB,GAKzE,QAASiC,MACL,GAAIrC,EAQJ,OANAZ,GAAO,KAEPY,EAAOsC,KAEPlD,EAAO,KAEAY,EAMX,QAASuC,MACL,GAAI9M,GAAM2H,EAAO4C,EAAMI,CAEvB,IAAIvO,EAAM,KACN,MAAOwQ,KAGX,IAAIxQ,EAAM,KACN,MAAOsO,IAGX,IAAItO,EAAM,KACN,MAAO4P,KAMX,IAHAhM,EAAOsH,GAAUtH,KACjB2K,EAAarD,GAETtH,IAASyE,GAAMC,WACf6F,EAAQO,GAASa,iBAAiBrD,IAAMxV,WACrC,IAAIkN,IAASyE,GAAM+B,eAAiBxG,IAASyE,GAAMkB,eAClDjD,IAAU4E,GAAUxB,OACpBsB,EAAmBE,GAAWtD,GAASyH,oBAE3ClB,EAAOO,GAASY,cAAcpD,SAC3B,IAAItI,IAASyE,GAAME,QAAS,CAC/B,GAAImF,EAAa,YACb,MAAOiD,KAEPjD,GAAa,SACbxB,IACAiC,EAAOO,GAASkC,wBAEhB5D,EAAgBd,SAEbtI,KAASyE,GAAMI,gBACtB8C,EAAQW,IACRX,EAAM7U,MAAyB,SAAhB6U,EAAM7U,MACrByX,EAAOO,GAASY,cAAc/D,IACvB3H,IAASyE,GAAMG,aACtB+C,EAAQW,IACRX,EAAM7U,MAAQ,KACdyX,EAAOO,GAASY,cAAc/D,IACvBvL,EAAM,MAAQA,EAAM,OAEvBmO,EADwB,mBAAjBrH,IAAMoC,OACNwF,GAASY,cAAclE,KAEvBsD,GAASY,cAAcrE,KAElCkB,KAEAa,EAAgBd,IAGpB,OAAOwC,IAASC,QAAQR,EAAMI,GAKlC,QAASsC,MACL,GAAI1Z,KAIJ,IAFAoW,EAAO,MAEFvN,EAAM,KACP,KAAe3M,GAAR+T,KACHjQ,EAAK9B,KAAKoZ,OACNzO,EAAM,OAGVuN,EAAO,IAMf,OAFAA,GAAO,KAEApW,EAGX,QAAS2Z,MACL,GAAIvF,GAAOgD,CASX,OAPAA,GAAarD,GACbK,EAAQW,IAEHT,EAAiBF,IAClByB,EAAgBzB,GAGbmD,GAASC,QAAQD,GAASa,iBAAiBhE,EAAM7U,OAAQ6X,GAGpE,QAASwC,MAGL,MAFAxD,GAAO,KAEAuD,KAGX,QAASE,MACL,GAAI7C,EAQJ,OANAZ,GAAO,KAEPY,EAAOsC,KAEPlD,EAAO,KAEAY,EAGX,QAAS8C,MACL,GAAIxO,GAAQtL,EAAMoX,CAOlB,OALAA,GAAarD,GACbsC,EAAc,OACd/K,EAASyO,KACT/Z,EAAO6I,EAAM,KAAO6Q,QAEbnC,GAASC,QAAQD,GAASyC,oBAAoB1O,EAAQtL,GAAOoX,GAGxE,QAAS6C,MACL,GAAIjD,GAAMhX,EAAMsN,EAAU8J,EAAY8C,EAAkBzK,GAAM0K,OAM9D,KAJA/C,EAAarD,GACbtE,GAAM0K,SAAU,EAChBnD,EAAOT,EAAa,OAASuD,KAAuBP,OAE3C,CACL,GAAI1Q,EAAM,KACNyE,EAAWsM,KACX5C,EAAOO,GAAS6C,uBAAuB,IAAKpD,EAAM1J,OAC/C,IAAIzE,EAAM,KACb7I,EAAO0Z,KACP1C,EAAOO,GAAS8C,qBAAqBrD,EAAMhX,OACxC,CAAA,IAAI6I,EAAM,KAIb,KAHAyE,GAAWuM,KACX7C,EAAOO,GAAS6C,uBAAuB,IAAKpD,EAAM1J,GAItDiK,GAASC,QAAQR,EAAMI,GAI3B,MAFA3H,IAAM0K,QAAUD,EAETlD,EAGX,QAAS+C,MACL,GAAI/C,GAAM1J,EAAU8J,CAOpB,KANAtJ,EAAO2B,GAAM0K,QAAS,qDAEtB/C,EAAarD,GAEbiD,EAAOT,EAAa,OAASuD,KAAuBP,KAE7C1Q,EAAM,MAAQA,EAAM,MACnBA,EAAM,MACNyE,EAAWuM,KACX7C,EAAOO,GAAS6C,uBAAuB,IAAKpD,EAAM1J,KAElDA,EAAWsM,KACX5C,EAAOO,GAAS6C,uBAAuB,IAAKpD,EAAM1J,IAEtDiK,GAASC,QAAQR,EAAMI,EAE3B,OAAOJ,GAKX,QAASsD,MACL,GAAItD,GAAM5C,EAAOgD,EAAarD,EAoB9B,OAlBAiD,GAAOiD,KAEHlG,GAAUtH,OAASyE,GAAMe,cACpBpJ,EAAM,QAASA,EAAM,OAAWwM,MAE7BlG,IAAU6H,EAAKvK,OAASwK,GAAO9F,YAAclC,EAAiB+H,EAAKzS,OACnEsP,KAAuBpD,GAAS8J,kBAG/BxD,EAAeC,IAChBnD,KAAuBpD,GAAS+J,wBAGpCpG,EAAQW,IACRiC,EAAOO,GAASC,QAAQD,GAASkD,wBAAwBrG,EAAM7U,MAAOyX,GAAOI,KAI9EJ,EAKX,QAAS0D,MACL,GAAItG,GAAO4C,EAAMI,CAsCjB,OApCIrD,IAAUtH,OAASyE,GAAMe,YAAc8B,GAAUtH,OAASyE,GAAME,QAChE4F,EAAOsD,KACAzR,EAAM,OAASA,EAAM,OAC5BuO,EAAarD,GACbK,EAAQW,IACRiC,EAAO0D,KAEHvL,IAAU6H,EAAKvK,OAASwK,GAAO9F,YAAclC,EAAiB+H,EAAKzS,OACnEsP,KAAuBpD,GAASkK,iBAG/B5D,EAAeC,IAChBnD,KAAuBpD,GAAS+J,wBAGpCxD,EAAOO,GAASqD,sBAAsBxG,EAAM7U,MAAOyX,GACnDA,EAAOO,GAASC,QAAQR,EAAMI,IACvBvO,EAAM,MAAQA,EAAM,MAAQA,EAAM,MAAQA,EAAM,MACvDuO,EAAarD,GACbK,EAAQW,IACRiC,EAAO0D,KACP1D,EAAOO,GAASqD,sBAAsBxG,EAAM7U,MAAOyX,GACnDA,EAAOO,GAASC,QAAQR,EAAMI,IACvBb,EAAa,WAAaA,EAAa,SAAWA,EAAa,WACtEa,EAAarD,GACbK,EAAQW,IACRiC,EAAO0D,KACP1D,EAAOO,GAASqD,sBAAsBxG,EAAM7U,MAAOyX,GACnDA,EAAOO,GAASC,QAAQR,EAAMI,GAC1BjI,IAA4B,WAAlB6H,EAAKrK,UAAyBqK,EAAK6D,SAASpO,OAASwK,GAAO9F,YACtE0C,KAAuBpD,GAASqK,eAGpC9D,EAAOsD,KAGJtD,EAGX,QAAS+D,IAAiB3G,EAAO+F,GAC7B,GAAIa,GAAO,CAEX,IAAI5G,EAAM3H,OAASyE,GAAMe,YAAcmC,EAAM3H,OAASyE,GAAME,QACxD,MAAO,EAGX,QAAQgD,EAAM7U,OACd,IAAK,KACDyb,EAAO,CACP,MAEJ,KAAK,KACDA,EAAO,CACP,MAEJ,KAAK,IACDA,EAAO,CACP,MAEJ,KAAK,IACDA,EAAO,CACP,MAEJ,KAAK,IACDA,EAAO,CACP,MAEJ,KAAK,KACL,IAAK,KACL,IAAK,MACL,IAAK,MACDA,EAAO,CACP,MAEJ,KAAK,IACL,IAAK,IACL,IAAK,KACL,IAAK,KACL,IAAK,aACDA,EAAO,CACP,MAEJ,KAAK,KACDA,EAAOb,EAAU,EAAI,CACrB,MAEJ,KAAK,KACL,IAAK,KACL,IAAK,MACDa,EAAO,CACP,MAEJ,KAAK,IACL,IAAK,IACDA,EAAO,CACP,MAEJ,KAAK,IACL,IAAK,IACL,IAAK,IACDA,EAAO,GAOX,MAAOA,GAWX,QAASC,MACL,GAAIC,GAAQC,EAASnE,EAAM5C,EAAO4G,EAAMI,EAAOC,EAAO1O,EAAUD,EAAM1Q,CAOtE,IALAkf,EAASnH,GACTrH,EAAOgO,KAEPtG,EAAQL,GACRiH,EAAOD,GAAiB3G,EAAO3E,GAAM0K,SACxB,IAATa,EACA,MAAOtO,EAUX,KARA0H,EAAM4G,KAAOA,EACbjG,IAEAoG,GAAWD,EAAQnH,IACnBsH,EAAQX,KAERU,GAAS1O,EAAM0H,EAAOiH,IAEdL,EAAOD,GAAiBhH,GAAWtE,GAAM0K,UAAY,GAAG,CAG5D,KAAQiB,EAAMlf,OAAS,GAAO8e,GAAQI,EAAMA,EAAMlf,OAAS,GAAG8e,MAC1DK,EAAQD,EAAM/G,MACd1H,EAAWyO,EAAM/G,MAAM9U,MACvBmN,EAAO0O,EAAM/G,MACb2C,EAAOO,GAAS+D,uBAAuB3O,EAAUD,EAAM2O,GACvDF,EAAQ9G,MACR6G,EAASC,EAAQA,EAAQjf,OAAS,GAClCqb,GAASC,QAAQR,EAAMkE,GACvBE,EAAMld,KAAK8Y,EAIf5C,GAAQW,IACRX,EAAM4G,KAAOA,EACbI,EAAMld,KAAKkW,GACX+G,EAAQjd,KAAK6V,IACbiD,EAAO0D,KACPU,EAAMld,KAAK8Y,GAOf,IAHAhb,EAAIof,EAAMlf,OAAS,EACnB8a,EAAOoE,EAAMpf,GACbmf,EAAQ9G,MACDrY,EAAI,GACPgb,EAAOO,GAAS+D,uBAAuBF,EAAMpf,EAAI,GAAGuD,MAAO6b,EAAMpf,EAAI,GAAIgb,GACzEhb,GAAK,EACLkf,EAASC,EAAQ9G,MACjBkD,GAASC,QAAQR,EAAMkE,EAG3B,OAAOlE,GAMX,QAASuE,MACL,GAAIvE,GAAMkD,EAAiBsB,EAAYC,EAAWrE,CAmBlD,OAjBAA,GAAarD,GAEbiD,EAAOiE,KAEHpS,EAAM,OACNkM,IACAmF,EAAkBzK,GAAM0K,QACxB1K,GAAM0K,SAAU,EAChBqB,EAAalE,KACb7H,GAAM0K,QAAUD,EAChB9D,EAAO,KACPqF,EAAYnE,KAEZN,EAAOO,GAASmE,4BAA4B1E,EAAMwE,EAAYC,GAC9DlE,GAASC,QAAQR,EAAMI,IAGpBJ,EAKX,QAASM,MACL,GAAIlD,GAAO1H,EAAM2O,EAAOtP,EAAMqL,CAuB9B,OArBAhD,GAAQL,GACRqD,EAAarD,GAEbhI,EAAOW,EAAO6O,KAEV/E,MAEKO,EAAerK,IAChBmH,KAAuBpD,GAAS+J,wBAIhCrL,IAAUzC,EAAKD,OAASwK,GAAO9F,YAAclC,EAAiBvC,EAAKnI,OACnEsP,EAAmBO,EAAO3D,GAASkL,qBAGvCvH,EAAQW,IACRsG,EAAQ/D,KACRvL,EAAOwL,GAASC,QAAQD,GAASqE,2BAA2BxH,EAAM7U,MAAOmN,EAAM2O,GAAQjE,IAGpFrL,EAKX,QAASuN,MACL,GAAItC,GAAMI,EAAarD,EAIvB,IAFAiD,EAAOM,KAEHzO,EAAM,KAAM,CAGZ,IAFAmO,EAAOO,GAASsE,0BAA2B7E,IAE5B9a,GAAR+T,IACEpH,EAAM,MAGXkM,IACAiC,EAAK8E,YAAY5d,KAAKoZ,KAG1BC,IAASC,QAAQR,EAAMI,GAG3B,MAAOJ,GAKX,QAAS+E,MAIL,IAHA,GACIC,GADAjS,KAGW7N,GAAR+T,KACCpH,EAAM,OAGVmT,EAAYC,KACa,mBAAdD,KAGXjS,EAAK7L,KAAK8d,EAGd,OAAOjS,GAGX,QAASmS,MACL,GAAI1U,GAAO4P,CASX,OAPAA,GAAarD,GACbqC,EAAO,KAEP5O,EAAQuU,KAER3F,EAAO,KAEAmB,GAASC,QAAQD,GAAS4E,qBAAqB3U,GAAQ4P,GAKlE,QAASoB,MACL,GAAIpE,GAAOgD,CASX,OAPAA,GAAarD,GACbK,EAAQW,IAEJX,EAAM3H,OAASyE,GAAMC,YACrB0E,EAAgBzB,GAGbmD,GAASC,QAAQD,GAASa,iBAAiBhE,EAAM7U,OAAQ6X,GAGpE,QAASgF,IAAyB1D,GAC9B,GAAiBxd,GAAIkc,EAAjBiF,EAAO,IAkBX,OAhBAjF,GAAarD,GACb7Y,EAAKsd,KAGDrJ,IAAUF,EAAiB/T,EAAGqJ,OAC9BsP,KAAuBpD,GAAS6L,eAGvB,UAAT5D,GACAtC,EAAO,KACPiG,EAAO/E,MACAzO,EAAM,OACbkM,IACAsH,EAAO/E,MAGJC,GAASC,QAAQD,GAASgF,yBAAyBrhB,EAAImhB,GAAOjF,GAGzE,QAASoF,IAA6B9D,GAClC,GAAI3O,KAEJ,GAAG,CAEC,GADAA,EAAK7L,KAAKke,GAAyB1D,KAC9B7P,EAAM,KACP,KAEJkM,WACa7Y,GAAR+T,GAET,OAAOlG,GAGX,QAAS0S,MACL,GAAIC,EAQJ,OANArG,GAAc,OAEdqG,EAAeF,KAEf9F,IAEOa,GAASoF,0BAA0BD,EAAc,OAO5D,QAASE,IAAyBlE,GAC9B,GAAIgE,GAActF,CAUlB,OARAA,GAAarD,GAEbsC,EAAcqC,GAEdgE,EAAeF,GAA6B9D,GAE5ChC,IAEOa,GAASC,QAAQD,GAASoF,0BAA0BD,EAAchE,GAAOtB,GAKpF,QAASyF,MAEL,MADAzG,GAAO,KACAmB,GAASuF,uBAKpB,QAASC,MACL,GAAI/F,GAAOsC,IAEX,OADA5C,KACOa,GAASyF,0BAA0BhG,GAK9C,QAASiG,MACL,GAAIvO,GAAM8M,EAAYC,CAmBtB,OAjBApF,GAAc,MAEdD,EAAO,KAEP1H,EAAO4K,KAEPlD,EAAO,KAEPoF,EAAa0B,KAET3G,EAAa,SACbxB,IACA0G,EAAYyB,MAEZzB,EAAY,KAGTlE,GAAS4F,kBAAkBzO,EAAM8M,EAAYC,GAKxD,QAAS2B,MACL,GAAInd,GAAMyO,EAAM2O,CAuBhB,OArBAhH,GAAc,MAEdgH,EAAiB5N,GAAM6N,YACvB7N,GAAM6N,aAAc,EAEpBrd,EAAOid,KAEPzN,GAAM6N,YAAcD,EAEpBhH,EAAc,SAEdD,EAAO,KAEP1H,EAAO4K,KAEPlD,EAAO,KAEHvN,EAAM,MACNkM,IAGGwC,GAASgG,uBAAuBtd,EAAMyO,GAGjD,QAAS8O,MACL,GAAI9O,GAAMzO,EAAMod,CAiBhB,OAfAhH,GAAc,SAEdD,EAAO,KAEP1H,EAAO4K,KAEPlD,EAAO,KAEPiH,EAAiB5N,GAAM6N,YACvB7N,GAAM6N,aAAc,EAEpBrd,EAAOid,KAEPzN,GAAM6N,YAAcD,EAEb9F,GAASkG,qBAAqB/O,EAAMzO,GAG/C,QAASyd,MACL,GAAItJ,GAAOsI,EAActF,CAMzB,OAJAA,GAAarD,GACbK,EAAQW,IACR2H,EAAeF,KAERjF,GAASC,QAAQD,GAASoF,0BAA0BD,EAActI,EAAM7U,OAAQ6X,GAG3F,QAASuG,MACL,GAAItB,GAAM3N,EAAMkP,EAAQlR,EAAM2O,EAAOpb,EAAMod,EAAgBnD,EAAkBzK,GAAM0K,OAkEnF,OAhEAkC,GAAO3N,EAAOkP,EAAS,KAEvBvH,EAAc,OAEdD,EAAO,KAEHvN,EAAM,KACNkM,KAEIwB,EAAa,QAAUA,EAAa,QACpC9G,GAAM0K,SAAU,EAChBkC,EAAOqB,KACPjO,GAAM0K,QAAUD,EAEiB,IAA7BmC,EAAKK,aAAaxgB,QAAgBqa,EAAa,QAC/CxB,IACArI,EAAO2P,EACPhB,EAAQ/B,KACR+C,EAAO,QAGX5M,GAAM0K,SAAU,EAChBkC,EAAO/C,KACP7J,GAAM0K,QAAUD,EAEZ3D,EAAa,QAERQ,EAAesF,IAChBxI,KAAuBpD,GAASoN,mBAGpC9I,IACArI,EAAO2P,EACPhB,EAAQ/B,KACR+C,EAAO,OAIK,mBAAT3P,IACP0J,EAAO,MAIK,mBAAT1J,KAEF7D,EAAM,OACP6F,EAAO4K,MAEXlD,EAAO,KAEFvN,EAAM,OACP+U,EAAStE,OAIjBlD,EAAO,KAEPiH,EAAiB5N,GAAM6N,YACvB7N,GAAM6N,aAAc,EAEpBrd,EAAOid,KAEPzN,GAAM6N,YAAcD,EAEI,mBAAT3Q,GACP6K,GAASuG,mBAAmBzB,EAAM3N,EAAMkP,EAAQ3d,GAChDsX,GAASwG,qBAAqBrR,EAAM2O,EAAOpb,GAKvD,QAAS+d,MACL,GAAkB1F,GAAd2F,EAAQ,IAKZ,OAHA5H,GAAc,YAGmB,KAA7B/J,GAAOgE,WAAWL,KAClB8E,IAEKtF,GAAM6N,aACP9M,KAAeC,GAASyN,iBAGrB3G,GAAS4G,wBAAwB,OAGxC9I,KACK5F,GAAM6N,aACP9M,KAAeC,GAASyN,iBAGrB3G,GAAS4G,wBAAwB,QAGxCpK,GAAUtH,OAASyE,GAAMC,aACzB8M,EAAQzF,KAERF,EAAM,IAAM2F,EAAM1Z,KACb9E,OAAOmD,UAAUoW,eAAe5d,KAAKqU,GAAM2O,SAAU9F,IACtD9H,KAAeC,GAAS4N,aAAcJ,EAAM1Z,OAIpDmS,IAEc,OAAVuH,GAAmBxO,GAAM6N,aACzB9M,KAAeC,GAASyN,iBAGrB3G,GAAS4G,wBAAwBF,IAK5C,QAASK,MACL,GAAkBhG,GAAd2F,EAAQ,IAKZ,OAHA5H,GAAc,SAGmB,KAA7B/J,GAAOgE,WAAWL,KAClB8E,IAEMtF,GAAM6N,aAAe7N,GAAM8O,UAC7B/N,KAAeC,GAAS+N,cAGrBjH,GAASkH,qBAAqB,OAGrCpJ,KACM5F,GAAM6N,aAAe7N,GAAM8O,UAC7B/N,KAAeC,GAAS+N,cAGrBjH,GAASkH,qBAAqB,QAGrC1K,GAAUtH,OAASyE,GAAMC,aACzB8M,EAAQzF,KAERF,EAAM,IAAM2F,EAAM1Z,KACb9E,OAAOmD,UAAUoW,eAAe5d,KAAKqU,GAAM2O,SAAU9F,IACtD9H,KAAeC,GAAS4N,aAAcJ,EAAM1Z,OAIpDmS,IAEc,OAAVuH,GAAoBxO,GAAM6N,aAAe7N,GAAM8O,UAC/C/N,KAAeC,GAAS+N,cAGrBjH,GAASkH,qBAAqBR,IAKzC,QAASS,MACL,GAAI7D,GAAW,IASf,OAPAxE,GAAc,UAET5G,GAAMkP,gBACP9K,KAAuBpD,GAASmO,eAIH,KAA7BtS,GAAOgE,WAAWL,KACd1B,EAAkBjC,GAAOgE,WAAWL,GAAQ,KAC5C4K,EAAWvB,KACX5C,IACOa,GAASsH,sBAAsBhE,IAI1CxF,IACOkC,GAASsH,sBAAsB,OAGrChW,EAAM,MACFA,EAAM,MAAQkL,GAAUtH,OAASyE,GAAM0D,MACxCiG,EAAWvB,MAInB5C,IAEOa,GAASsH,sBAAsBhE,IAK1C,QAASiE,MACL,GAAIzR,GAAQpN,CAkBZ,OAhBIkP,MAEAwB,IACAkD,KAAuBpD,GAASsO,iBAGpC1I,EAAc,QAEdD,EAAO,KAEP/I,EAASiM,KAETlD,EAAO,KAEPnW,EAAOid,KAEA3F,GAASyH,oBAAoB3R,EAAQpN,GAKhD,QAASgf,MACL,GAAIvQ,GAAuBsN,EAAW5E,EAA5BoE,IAYV,KAVApE,EAAarD,GACTwC,EAAa,YACbxB,IACArG,EAAO,OAEP2H,EAAc,QACd3H,EAAO4K,MAEXlD,EAAO,KAEQla,GAAR+T,MACCpH,EAAM,MAAQ0N,EAAa,YAAcA,EAAa,UAG1DyF,EAAYkB,KACZ1B,EAAWtd,KAAK8d,EAGpB,OAAOzE,IAASC,QAAQD,GAAS2H,iBAAiBxQ,EAAM8M,GAAapE,GAGzE,QAAS+H,MACL,GAAIC,GAAcC,EAAOC,EAAQC,EAAaC,CAc9C,IAZAnJ,EAAc,UAEdD,EAAO,KAEPgJ,EAAe9F,KAEflD,EAAO,KAEPA,EAAO,KAEPiJ,KAEIxW,EAAM,KAEN,MADAkM,KACOwC,GAASkI,sBAAsBL,EAAcC,EAOxD,KAJAE,EAAc9P,GAAM8O,SACpB9O,GAAM8O,UAAW,EACjBiB,GAAe,EAEAtjB,GAAR+T,KACCpH,EAAM,MAGVyW,EAASL,KACW,OAAhBK,EAAO5Q,OACH8Q,GACAhP,KAAeC,GAASiP,0BAE5BF,GAAe,GAEnBH,EAAMnhB,KAAKohB,EAOf,OAJA7P,IAAM8O,SAAWgB,EAEjBnJ,EAAO,KAEAmB,GAASkI,sBAAsBL,EAAcC,GAKxD,QAASM,MACL,GAAI9E,EAYJ,OAVAxE,GAAc,SAEVhB,KACA7E,KAAeC,GAASmP,mBAG5B/E,EAAWvB,KAEX5C,IAEOa,GAASsI,qBAAqBhF,GAKzC,QAASiF,MACL,GAAInI,GAAO1X,EAAMmX,CAkBjB,OAhBAA,GAAarD,GACbsC,EAAc,SAEdD,EAAO,KACHvN,EAAM,MACNgN,EAAgB9B,IAGpB4D,EAAQa,KAEJrJ,IAAUF,EAAiB0I,EAAMpT,OACjCsP,KAAuBpD,GAASsP,qBAGpC3J,EAAO,KACPnW,EAAOic,KACA3E,GAASC,QAAQD,GAASyI,kBAAkBrI,EAAO1X,GAAOmX,GAGrE,QAAS6I,MACL,GAAIzY,GAAO0Y,KAAeC,EAAY,IAmBtC,OAjBA9J,GAAc,OAEd7O,EAAQ0U,KAEJ3F,EAAa,UACb2J,EAAShiB,KAAK4hB,MAGdvJ,EAAa,aACbxB,IACAoL,EAAYjE,MAGQ,IAApBgE,EAAShkB,QAAiBikB,GAC1B3P,KAAeC,GAAS2P,kBAGrB7I,GAAS8I,mBAAmB7Y,KAAW0Y,EAAUC,GAK5D,QAASG,MAKL,MAJAjK,GAAc,YAEdK,IAEOa,GAASgJ,0BAKpB,QAASrD,MACL,GACIlG,GACAwJ,EACAlI,EACAlB,EAJA3K,EAAOsH,GAAUtH,IAUrB,IAJIA,IAASyE,GAAM0D,KACfiB,EAAgB9B,IAGhBtH,IAASyE,GAAMe,YAAkC,MAApB8B,GAAUxU,MACvC,MAAO2c,KAKX,IAFA9E,EAAarD,GAETtH,IAASyE,GAAMe,WACf,OAAQ8B,GAAUxU,OAClB,IAAK,IACD,MAAOgY,IAASC,QAAQqF,KAAuBzF,EACnD,KAAK,IACD,MAAOG,IAASC,QAAQuF,KAA4B3F,GAM5D,GAAI3K,IAASyE,GAAME,QACf,OAAQ2C,GAAUxU,OAClB,IAAK,QACD,MAAOgY,IAASC,QAAQ8G,KAAuBlH,EACnD,KAAK,WACD,MAAOG,IAASC,QAAQwG,KAA0B5G,EACtD,KAAK,WACD,MAAOG,IAASC,QAAQ8I,KAA0BlJ,EACtD,KAAK,KACD,MAAOG,IAASC,QAAQ4F,KAAyBhG,EACrD,KAAK,MACD,MAAOG,IAASC,QAAQmG,KAAqBvG,EACjD,KAAK,WACD,MAAOG,IAASC,QAAQiJ,KAA4BrJ,EACxD,KAAK,KACD,MAAOG,IAASC,QAAQyF,KAAoB7F,EAChD,KAAK,SACD,MAAOG,IAASC,QAAQkH,KAAwBtH,EACpD,KAAK,SACD,MAAOG,IAASC,QAAQ2H,KAAwB/H,EACpD,KAAK,QACD,MAAOG,IAASC,QAAQmI,KAAuBvI,EACnD,KAAK,MACD,MAAOG,IAASC,QAAQyI,KAAqB7I,EACjD,KAAK,MACD,MAAOG,IAASC,QAAQiF,KAA0BrF,EACtD,KAAK,QACD,MAAOG,IAASC,QAAQgG,KAAuBpG,EACnD,KAAK,OACD,MAAOG,IAASC,QAAQsH,KAAsB1H,GAStD,MAHAJ,GAAOsC,KAGFtC,EAAKvK,OAASwK,GAAO9F,YAAetI,EAAM,MAC3CkM,IAEAuD,EAAM,IAAMtB,EAAKzS,KACb9E,OAAOmD,UAAUoW,eAAe5d,KAAKqU,GAAM2O,SAAU9F,IACrD9H,KAAeC,GAASiQ,cAAe,QAAS1J,EAAKzS,MAGzDkL,GAAM2O,SAAS9F,IAAO,EACtBkI,EAActD,WACPzN,IAAM2O,SAAS9F,GACff,GAASC,QAAQD,GAASoJ,uBAAuB3J,EAAMwJ,GAAcpJ,KAGhFV,IAEOa,GAASC,QAAQD,GAASyF,0BAA0BhG,GAAOI,IAKtE,QAASU,MACL,GAAI8I,GAAoCxM,EAAOyM,EAAWC,EACtDC,EAAa1D,EAAgBkC,EAAayB,EAAmB5J,EAD9C6J,IAMnB,KAHA7J,EAAarD,GACbqC,EAAO,KAEQla,GAAR+T,IACC8D,GAAUtH,OAASyE,GAAM+B,gBAG7BmB,EAAQL,GAER6M,EAAgB3E,KAChBgF,EAAe/iB,KAAK0iB,GAChBA,EAAcvV,WAAWoB,OAASwK,GAAOiK,UAI7CL,EAAYvU,GAAOzG,MAAMuO,EAAM/E,MAAQ,EAAG+E,EAAM9E,IAAM,GACpC,eAAduR,GACA1R,IAAS,EACL2R,GACAjN,EAAmBiN,EAAiBrQ,GAASyH,sBAG5C4I,GAAmB1M,EAAM7B,QAC1BuO,EAAkB1M,EAe9B,KAVA2M,EAActR,GAAM2O,SACpBf,EAAiB5N,GAAM6N,YACvBiC,EAAc9P,GAAM8O,SACpByC,EAAoBvR,GAAMkP,eAE1BlP,GAAM2O,YACN3O,GAAM6N,aAAc,EACpB7N,GAAM8O,UAAW,EACjB9O,GAAMkP,gBAAiB,EAERziB,GAAR+T,KACCpH,EAAM,OAGV+X,EAAgB3E,KACa,mBAAlB2E,KAGXK,EAAe/iB,KAAK0iB,EAUxB,OAPAxK,GAAO,KAEP3G,GAAM2O,SAAW2C,EACjBtR,GAAM6N,YAAcD,EACpB5N,GAAM8O,SAAWgB,EACjB9P,GAAMkP,eAAiBqC,EAEhBzJ,GAASC,QAAQD,GAAS4E,qBAAqB8E,GAAiB7J,GAG3E,QAAS+J,IAAYL,GACjB,GAAInJ,GAAoBvD,EAAOgN,EAAUC,EAAU/I,EAAKtK,EAA7C5C,IAGX,IAFAgL,EAAO,MAEFvN,EAAM,KAEP,IADAwY,KACenlB,GAAR+T,KACHmE,EAAQL,GACR4D,EAAQa,KACRF,EAAM,IAAMlE,EAAM7U,MACd4P,IACIF,EAAiBmF,EAAM7U,SACvB6hB,EAAWhN,EACXpG,EAAUyC,GAASsH,iBAEnBtY,OAAOmD,UAAUoW,eAAe5d,KAAKimB,EAAU/I,KAC/C8I,EAAWhN,EACXpG,EAAUyC,GAAS6Q,kBAEfR,IACJ7R,EAAiBmF,EAAM7U,QACvBuhB,EAAkB1M,EAClBpG,EAAUyC,GAASsH,iBACZ/I,EAAyBoF,EAAM7U,QACtCuhB,EAAkB1M,EAClBpG,EAAUyC,GAAS0F,oBACZ1W,OAAOmD,UAAUoW,eAAe5d,KAAKimB,EAAU/I,KACtDwI,EAAkB1M,EAClBpG,EAAUyC,GAAS6Q,kBAG3BlW,EAAOlN,KAAKyZ,GACZ0J,EAAS/I,IAAO,GACZzP,EAAM,OAGVuN,EAAO,IAMf,OAFAA,GAAO,MAGHhL,OAAQA,EACRgW,SAAUA,EACVN,gBAAiBA,EACjB9S,QAASA,GAIjB,QAASyS,MACL,GAAIvlB,GAAiB+E,EAAMmU,EAAOgN,EAAUG,EAAKT,EAAiB9S,EAAS6J,EAAgBT,EAAnFhM,IAuCR,OArCAgM,GAAarD,GAEbsC,EAAc,YACdjC,EAAQL,GACR7Y,EAAKsd,KACDrJ,GACIF,EAAiBmF,EAAM7U,QACvBsU,EAAmBO,EAAO3D,GAAS+Q,oBAGnCvS,EAAiBmF,EAAM7U,QACvBuhB,EAAkB1M,EAClBpG,EAAUyC,GAAS+Q,oBACZxS,EAAyBoF,EAAM7U,SACtCuhB,EAAkB1M,EAClBpG,EAAUyC,GAAS0F,oBAI3BoL,EAAMJ,GAAYL,GAClB1V,EAASmW,EAAInW,OACbgW,EAAWG,EAAIH,SACfN,EAAkBS,EAAIT,gBAClBS,EAAIvT,UACJA,EAAUuT,EAAIvT,SAGlB6J,EAAiB1I,GACjBlP,EAAO6X,KACH3I,IAAU2R,GACVtQ,EAAWsQ,EAAiB9S,GAE5BmB,IAAUiS,GACVvN,EAAmBuN,EAAUpT,GAEjCmB,GAAS0I,EAEFN,GAASC,QAAQD,GAASkK,0BAA0BvmB,EAAIkQ,KAAYnL,GAAOmX,GAGtF,QAASoC,MACL,GAAIpF,GAAkBgN,EAAUN,EAAiB9S,EAASuT,EAAkBthB,EAAM4X,EAAgBT,EAAvFlc,EAAK,KAA+CkQ,IAyC/D,OAvCAgM,GAAarD,GACbsC,EAAc,YAETxN,EAAM,OACPuL,EAAQL,GACR7Y,EAAKsd,KACDrJ,GACIF,EAAiBmF,EAAM7U,QACvBsU,EAAmBO,EAAO3D,GAAS+Q,oBAGnCvS,EAAiBmF,EAAM7U,QACvBuhB,EAAkB1M,EAClBpG,EAAUyC,GAAS+Q,oBACZxS,EAAyBoF,EAAM7U,SACtCuhB,EAAkB1M,EAClBpG,EAAUyC,GAAS0F,qBAK/BoL,EAAMJ,GAAYL,GAClB1V,EAASmW,EAAInW,OACbgW,EAAWG,EAAIH,SACfN,EAAkBS,EAAIT,gBAClBS,EAAIvT,UACJA,EAAUuT,EAAIvT,SAGlB6J,EAAiB1I,GACjBlP,EAAO6X,KACH3I,IAAU2R,GACVtQ,EAAWsQ,EAAiB9S,GAE5BmB,IAAUiS,GACVvN,EAAmBuN,EAAUpT,GAEjCmB,GAAS0I,EAEFN,GAASC,QAAQD,GAASS,yBAAyB9c,EAAIkQ,KAAYnL,GAAOmX,GAKrF,QAAS6E,MACL,GAAIlI,GAAUtH,OAASyE,GAAME,QACzB,OAAQ2C,GAAUxU,OAClB,IAAK,QACL,IAAK,MACD,MAAOqd,IAAyB7I,GAAUxU,MAC9C,KAAK,WACD,MAAOkhB,KACX,SACI,MAAOvD,MAIf,MAAInJ,IAAUtH,OAASyE,GAAM0D,IAClBsI,KADX,OAKJ,QAASwE,MAGL,IAFA,GAAId,GAAoCxM,EAAOyM,EAAWC,EAAvCG,KAEJ/kB,GAAR+T,KACHmE,EAAQL,GACJK,EAAM3H,OAASyE,GAAM+B,iBAIzB2N,EAAgB3E,KAChBgF,EAAe/iB,KAAK0iB,GAChBA,EAAcvV,WAAWoB,OAASwK,GAAOiK,UAI7CL,EAAYvU,GAAOzG,MAAMuO,EAAM/E,MAAQ,EAAG+E,EAAM9E,IAAM,GACpC,eAAduR,GACA1R,IAAS,EACL2R,GACAjN,EAAmBiN,EAAiBrQ,GAASyH,sBAG5C4I,GAAmB1M,EAAM7B,QAC1BuO,EAAkB1M,EAK9B,MAAelY,GAAR+T,KACH2Q,EAAgB3E,KAEa,mBAAlB2E,KAGXK,EAAe/iB,KAAK0iB,EAExB,OAAOK,GAGX,QAASU,MACL,GAAI1hB,GAAMmX,CAQV,OANAzG,KACAqE,IACAoC,EAAarD,GACb5E,IAAS,EAETlP,EAAOyhB,KACAnK,GAASC,QAAQD,GAASqK,cAAc3hB,GAAOmX,GAG1D,QAASyK,MACL,GAAI7lB,GAAG8lB,EAAO1N,EAAOrC,IAErB,KAAK/V,EAAI,EAAGA,EAAI2T,GAAMoC,OAAO7V,SAAUF,EACnC8lB,EAAQnS,GAAMoC,OAAO/V,GACrBoY,GACI3H,KAAMqV,EAAMrV,KACZlN,MAAOuiB,EAAMviB,OAEboQ,GAAM1D,QACNmI,EAAMnI,MAAQ6V,EAAM7V,OAEpB0D,GAAMJ,MACN6E,EAAM7E,IAAMuS,EAAMvS,KAEtBwC,EAAO7T,KAAKkW,EAGhBzE,IAAMoC,OAASA,EAGnB,QAASF,IAASpQ,EAAMsgB,GACpB,GAAIlf,GACAuR,EACArC,CAEJlP,GAAW8L,OACS,gBAATlN,IAAuBA,YAAgBkN,UAC9ClN,EAAOoB,EAASpB,IAGpB8V,GAAWyK,GACX1V,GAAS7K,EACTwO,GAAQ,EACRE,GAAc7D,GAAOpQ,OAAS,EAAK,EAAI,EACvCmU,GAAY,EACZnU,GAASoQ,GAAOpQ,OAChB6X,GAAY,KACZtE,IACI0K,SAAS,EACTiE,YACAO,gBAAgB,EAChBrB,aAAa,EACbiB,UAAU,EACV7O,iBAAkB,IAGtBC,MAGAoS,EAAUA,MAGVA,EAAQhQ,QAAS,EACjBpC,GAAMoC,UACNpC,GAAMkC,UAAW,EAEjBlC,GAAMmC,eAAiB,GACvBnC,GAAMqC,eAAiB,GAEvBrC,GAAM1D,MAAkC,iBAAlB8V,GAAQ9V,OAAwB8V,EAAQ9V,MAC9D0D,GAAMJ,IAA8B,iBAAhBwS,GAAQxS,KAAsBwS,EAAQxS,IAE3B,iBAApBwS,GAAQvS,SAAyBuS,EAAQvS,UAChDG,GAAMC,aAEsB,iBAArBmS,GAAQE,UAA0BF,EAAQE,WACjDtS,GAAMiG,UAGV,KAEI,GADAZ,IACIjB,GAAUtH,OAASyE,GAAM0D,IACzB,MAAOjF,IAAMoC,MAIjB,KADAqC,EAAQW,IACDhB,GAAUtH,OAASyE,GAAM0D,KAC5B,IACIR,EAAQW,IACV,MAAOmN,GAEL,GADA9N,EAAQL,GACJpE,GAAMiG,OAAQ,CACdjG,GAAMiG,OAAO1X,KAAKgkB,EAGlB,OAEA,KAAMA,GAKlBL,KACA9P,EAASpC,GAAMoC,OACe,mBAAnBpC,IAAMC,WACbmC,EAAOnC,SAAWD,GAAMC,UAEA,mBAAjBD,IAAMiG,SACb7D,EAAO6D,OAASjG,GAAMiG,QAE5B,MAAOvC,GACL,KAAMA,GACR,QACE1D,MAEJ,MAAOoC,GAGX,QAASrH,IAAMjJ,EAAMsgB,GACjB,GAAII,GAAStf,CAEbA,GAAW8L,OACS,gBAATlN,IAAuBA,YAAgBkN,UAC9ClN,EAAOoB,EAASpB,IAGpB8V,GAAWyK,GACX1V,GAAS7K,EACTwO,GAAQ,EACRE,GAAc7D,GAAOpQ,OAAS,EAAK,EAAI,EACvCmU,GAAY,EACZnU,GAASoQ,GAAOpQ,OAChB6X,GAAY,KACZtE,IACI0K,SAAS,EACTiE,YACAO,gBAAgB,EAChBrB,aAAa,EACbiB,UAAU,EACV7O,iBAAkB,IAGtBC,MACuB,mBAAZoS,KACPpS,GAAM1D,MAAkC,iBAAlB8V,GAAQ9V,OAAwB8V,EAAQ9V,MAC9D0D,GAAMJ,IAA8B,iBAAhBwS,GAAQxS,KAAsBwS,EAAQxS,IAC1DI,GAAME,cAAkD,iBAA1BkS,GAAQlS,eAAgCkS,EAAQlS,cAE1EF,GAAMJ,KAA0B,OAAnBwS,EAAQzV,QAAsCxO,SAAnBikB,EAAQzV,SAChDqD,GAAMrD,OAASzJ,EAASkf,EAAQzV,SAGN,iBAAnByV,GAAQhQ,QAAwBgQ,EAAQhQ,SAC/CpC,GAAMoC,WAEqB,iBAApBgQ,GAAQvS,SAAyBuS,EAAQvS,UAChDG,GAAMC,aAEsB,iBAArBmS,GAAQE,UAA0BF,EAAQE,WACjDtS,GAAMiG,WAENjG,GAAME,gBACNF,GAAM1D,OAAQ,EACd0D,GAAMC,YACND,GAAMyS,oBACNzS,GAAMI,oBACNJ,GAAMG,oBAId,KACIqS,EAAUR,KACoB,mBAAnBhS,IAAMC,WACbuS,EAAQvS,SAAWD,GAAMC,UAED,mBAAjBD,IAAMoC,SACb8P,KACAM,EAAQpQ,OAASpC,GAAMoC,QAEC,mBAAjBpC,IAAMiG,SACbuM,EAAQvM,OAASjG,GAAMiG,QAE7B,MAAOvC,GACL,KAAMA,GACR,QACE1D,MAGJ,MAAOwS,GA7lHX,GAAIjR,IACA4D,GACAJ,GACAuC,GACA2B,GACAnI,GACAjC,GACAwT,GACA1V,GACA6C,GACAc,GACAE,GACAE,GACAnU,GACAqb,GACAxD,GACAtE,GACAE,EAEJuB,KACII,eAAgB,EAChBsD,IAAK,EACLzD,WAAY,EACZC,QAAS,EACTC,YAAa,EACbe,eAAgB,EAChBH,WAAY,EACZgB,cAAe,EACfe,kBAAmB,GAGvBc,MACAA,GAAU5D,GAAMI,gBAAkB,UAClCwD,GAAU5D,GAAM0D,KAAO,QACvBE,GAAU5D,GAAMC,YAAc,aAC9B2D,GAAU5D,GAAME,SAAW,UAC3B0D,GAAU5D,GAAMG,aAAe,OAC/ByD,GAAU5D,GAAMkB,gBAAkB,UAClC0C,GAAU5D,GAAMe,YAAc,aAC9B6C,GAAU5D,GAAM+B,eAAiB,SACjC6B,GAAU5D,GAAM8C,mBAAqB,oBAGrCU,IAAgB,IAAK,IAAK,IAAK,KAAM,SAAU,aAAc,MAC7C,SAAU,OAAQ,SAAU,QAAS,OAErC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,MAAO,OACjD,KAAM,KAAM,KAAM,IAElB,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,MAAO,IACxD,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,IAAK,IAAK,MAAO,KAAM,KACvD,KAAM,IAAK,IAAK,KAAM,OAEtCuC,IACIoL,qBAAsB,uBACtBC,gBAAiB,kBACjBC,eAAgB,iBAChBC,iBAAkB,mBAClBC,eAAgB,iBAChBC,eAAgB,iBAChBC,YAAa,cACbC,sBAAuB,wBACvBC,kBAAmB,oBACnBC,iBAAkB,mBAClBC,kBAAmB,oBACnBC,eAAgB,iBAChBC,oBAAqB,sBACrBC,aAAc,eACdC,eAAgB,iBAChBC,oBAAqB,sBACrBC,mBAAoB,qBACpBlS,WAAY,aACZmS,YAAa,cACbpC,QAAS,UACTqC,iBAAkB,mBAClBC,kBAAmB,oBACnBtM,iBAAkB,mBAClBuM,cAAe,gBACfC,iBAAkB,mBAClBC,QAAS,UACTC,SAAU,WACVC,gBAAiB,kBACjBC,mBAAoB,qBACpBC,gBAAiB,kBACjBC,WAAY,aACZC,eAAgB,iBAChBC,eAAgB,iBAChBC,aAAc,eACdC,gBAAiB,kBACjBC,iBAAkB,mBAClBC,oBAAqB,sBACrBC,mBAAoB,qBACpBC,eAAgB,iBAChBC,cAAe,iBAGnB7L,IACIC,KAAM,EACNC,IAAK,EACLC,IAAK,GAITtI,IACIC,gBAAkB,sBAClBqF,iBAAmB,oBACnBC,iBAAmB,oBACnBC,qBAAuB,wBACvBC,mBAAqB,2BACrBJ,cAAgB,0BAChB8J,kBAAoB,8BACpBtM,cAAe,6BACfI,mBAAqB,wCACrB8G,uBAAyB,uCACzBqD,kBAAoB,mCACpB6B,yBAA0B,mDAC1BU,iBAAmB,qCACnB/B,aAAc,uBACdqC,cAAe,oCACfxC,gBAAiB,6BACjBM,aAAc,0BACdI,cAAe,2BACfG,eAAiB,oDACjBgB,oBAAsB,6DACtBzD,cAAgB,4DAChBvE,gBAAkB,iEAClBuJ,gBAAiB,8DACjBE,mBAAqB,4DACrBtJ,mBAAqB,iDACrB4C,aAAe,sDACf7B,wBAA0B,uEAC1BC,qBAAuB,4EACvBC,eAAiB,4EACjBwC,oBAAsB,gEACtBpB,iBAAmB,oFACnBI,gBAAkB,mFAClBxE,mBAAqB,8CAIzB3H,IACIC,wBAAyB,GAAI7G,QAAO,s5BACpCkH,uBAAwB,GAAIlH,QAAO,0lCAkrCvCoa,IAEIzd,KAAM,aAENmgB,eAAgB,SAAU3Y,GACtB,GAAI4Y,GAAW5U,CAEf,MAAIhE,EAAKU,OAASwK,GAAO0M,SACjB5X,EAAK9L,KAAK/D,OAAS,GAD3B,CAuBA,IAjBIyT,GAAMI,iBAAiB7T,OAAS,EAC5ByT,GAAMI,iBAAiB,GAAG9D,MAAM,IAAMF,EAAKE,MAAM,IACjD8D,EAAmBJ,GAAMI,iBACzBJ,GAAMI,qBAENJ,GAAMI,iBAAiB7T,OAAS,EAGhCyT,GAAMyS,iBAAiBlmB,OAAS,GAC5ByT,GAAMyS,iBAAiBzS,GAAMyS,iBAAiBlmB,OAAS,GAAG6T,kBAC1DJ,GAAMyS,iBAAiBzS,GAAMyS,iBAAiBlmB,OAAS,GAAG6T,iBAAiB,GAAG9D,MAAM,IAAMF,EAAKE,MAAM,KACzG8D,EAAmBJ,GAAMyS,iBAAiBzS,GAAMyS,iBAAiBlmB,OAAS,GAAG6T,uBACtEJ,IAAMyS,iBAAiBzS,GAAMyS,iBAAiBlmB,OAAS,GAAG6T,kBAKlEJ,GAAMyS,iBAAiBlmB,OAAS,GAAKyT,GAAMyS,iBAAiBzS,GAAMyS,iBAAiBlmB,OAAS,GAAG+P,MAAM,IAAMF,EAAKE,MAAM,IACzH0Y,EAAYhV,GAAMyS,iBAAiB/N,KAGnCsQ,GACIA,EAAU7U,iBAAmB6U,EAAU7U,gBAAgB6U,EAAU7U,gBAAgB5T,OAAS,GAAG+P,MAAM,IAAMF,EAAKE,MAAM,KACpHF,EAAK+D,gBAAkB6U,EAAU7U,sBAC1B6U,GAAU7U,iBAEdH,GAAMG,gBAAgB5T,OAAS,GAAKyT,GAAMG,gBAAgBH,GAAMG,gBAAgB5T,OAAS,GAAG+P,MAAM,IAAMF,EAAKE,MAAM,KAC1HF,EAAK+D,gBAAkBH,GAAMG,gBAC7BH,GAAMG,oBAINC,IACAhE,EAAKgE,iBAAmBA,GAG5BJ,GAAMyS,iBAAiBlkB,KAAK6N,KAGhCyL,QAAS,SAAUzL,EAAMqL,GAiBrB,MAhBIzH,IAAM1D,QACNF,EAAKE,OAASmL,EAAW/H,MAAOY,KAEhCN,GAAMJ,MACNxD,EAAKwD,IAAM,GAAI2F,GACoBpX,SAA/BsZ,EAAWrE,gBAAiCqE,EAAWjH,WAAaiH,EAAWrE,gBAC/EqE,EAAW/H,OAAuCvR,SAA9BsZ,EAAWpE,eAAgCoE,EAAW/G,UAAY+G,EAAWpE,gBACjG7C,GACAF,GAAQI,IAEZxV,KAAK+pB,YAAY7Y,IAGjB4D,GAAME,eACNhV,KAAK6pB,eAAe3Y,GAEjBA,GAGX6Y,YAAa,SAAU7Y,GAInB,MAHI4D,IAAMrD,SACNP,EAAKwD,IAAIjD,OAASqD,GAAMrD,QAErBP,GAGX0L,sBAAuB,SAAUJ,GAC7B,OACI5K,KAAMwK,GAAOqL,gBACbjL,SAAUA,IAIlBuE,2BAA4B,SAAUjP,EAAUD,EAAM2O,GAClD,OACI5O,KAAMwK,GAAOoL,qBACb1V,SAAUA,EACVD,KAAMA,EACN2O,MAAOA,IAIfC,uBAAwB,SAAU3O,EAAUD,EAAM2O,GAC9C,GAAI5O,GAAqB,OAAbE,GAAkC,OAAbA,EAAqBsK,GAAOuM,kBACjDvM,GAAOuL,gBACnB,QACI/V,KAAMA,EACNE,SAAUA,EACVD,KAAMA,EACN2O,MAAOA,IAIfc,qBAAsB,SAAUlc,GAC5B,OACIwM,KAAMwK,GAAOsL,eACbtiB,KAAMA,IAIdwe,qBAAsB,SAAUR,GAC5B,OACIxR,KAAMwK,GAAOwL,eACbxE,MAAOA,IAIf5D,qBAAsB,SAAU/O,EAAQtL,GACpC,OACIyM,KAAMwK,GAAOyL,eACbpX,OAAQA,EACR7M,UAAauB,IAIrBggB,kBAAmB,SAAUrI,EAAO1X,GAChC,OACIwM,KAAMwK,GAAO0L,YACbhL,MAAOA,EACP1X,KAAMA,IAIdyb,4BAA6B,SAAUhN,EAAM8M,EAAYC,GACrD,OACIhP,KAAMwK,GAAO2L,sBACblU,KAAMA,EACN8M,WAAYA,EACZC,UAAWA,IAInB0C,wBAAyB,SAAUF,GAC/B,OACIxR,KAAMwK,GAAO4L,kBACb5E,MAAOA,IAIfsC,wBAAyB,WACrB,OACI9T,KAAMwK,GAAO8L,oBAIrBxF,uBAAwB,SAAUtd,EAAMyO,GACpC,OACIjC,KAAMwK,GAAO6L,iBACb7iB,KAAMA,EACNyO,KAAMA,IAIdoO,qBAAsB,WAClB,OACIrQ,KAAMwK,GAAO+L,iBAIrBhG,0BAA2B,SAAU3R,GACjC,OACIoB,KAAMwK,GAAOgM,oBACb5X,WAAYA,IAIpByS,mBAAoB,SAAUzB,EAAM3N,EAAMkP,EAAQ3d,GAC9C,OACIwM,KAAMwK,GAAOiM,aACb7G,KAAMA,EACN3N,KAAMA,EACNkP,OAAQA,EACR3d,KAAMA,IAId8d,qBAAsB,SAAUrR,EAAM2O,EAAOpb,GACzC,OACIwM,KAAMwK,GAAOkM,eACbzW,KAAMA,EACN2O,MAAOA,EACPpb,KAAMA,EACN4kB,MAAM,IAIdpD,0BAA2B,SAAUvmB,EAAIkQ,EAAQ0Z,EAAU7kB,GACvD,OACIwM,KAAMwK,GAAOmM,oBACbloB,GAAIA,EACJkQ,OAAQA,EACR0Z,SAAUA,EACV7kB,KAAMA,EACN8kB,KAAM,KACNC,WAAW,EACX3Z,YAAY,IAIpB2M,yBAA0B,SAAU9c,EAAIkQ,EAAQ0Z,EAAU7kB,GACtD,OACIwM,KAAMwK,GAAOoM,mBACbnoB,GAAIA,EACJkQ,OAAQA,EACR0Z,SAAUA,EACV7kB,KAAMA,EACN8kB,KAAM,KACNC,WAAW,EACX3Z,YAAY,IAIpB+M,iBAAkB,SAAU7T,GACxB,OACIkI,KAAMwK,GAAO9F,WACb5M,KAAMA,IAId4Y,kBAAmB,SAAUzO,EAAM8M,EAAYC,GAC3C,OACIhP,KAAMwK,GAAOqM,YACb5U,KAAMA,EACN8M,WAAYA,EACZC,UAAWA,IAInBkF,uBAAwB,SAAU1C,EAAOhe,GACrC,OACIwM,KAAMwK,GAAOsM,iBACbtF,MAAOA,EACPhe,KAAMA,IAIdkY,cAAe,SAAU/D,GACrB,OACI3H,KAAMwK,GAAOiK,QACb3hB,MAAO6U,EAAM7U,MACb0lB,IAAK3Y,GAAOzG,MAAMuO,EAAM/E,MAAO+E,EAAM9E,OAI7C8K,uBAAwB,SAAU8K,EAAU7X,EAAQC,GAChD,OACIb,KAAMwK,GAAOC,iBACb9J,SAAuB,MAAb8X,EACV7X,OAAQA,EACRC,SAAUA,IAIlB0M,oBAAqB,SAAU1O,EAAQtL,GACnC,OACIyM,KAAMwK,GAAOwM,cACbnY,OAAQA,EACR7M,UAAauB,IAIrBoZ,uBAAwB,SAAUT,GAC9B,OACIlM,KAAMwK,GAAOyM,iBACb/K,WAAYA,IAIpB8B,wBAAyB,SAAU9N,EAAUkO,GACzC,OACIpO,KAAMwK,GAAOoN,iBACb1X,SAAUA,EACVkO,SAAUA,EACVjP,QAAQ,IAIhBgW,cAAe,SAAU3hB,GACrB,OACIwM,KAAMwK,GAAO0M,QACb1jB,KAAMA,IAIdsY,eAAgB,SAAUG,EAAMJ,EAAK/Y,GACjC,OACIkN,KAAMwK,GAAO2M,SACbtL,IAAKA,EACL/Y,MAAOA,EACPmZ,KAAMA,IAIdmG,sBAAuB,SAAUhE,GAC7B,OACIpO,KAAMwK,GAAO4M,gBACbhJ,SAAUA,IAIlBgB,yBAA0B,SAAUC,GAChC,OACIrP,KAAMwK,GAAO6M,mBACbhI,YAAaA,IAIrBoD,iBAAkB,SAAUxQ,EAAM8M,GAC9B,OACI/O,KAAMwK,GAAO+M,WACbtV,KAAMA,EACN8M,WAAYA,IAIpBiE,sBAAuB,SAAUL,EAAcC,GAC3C,OACI5S,KAAMwK,GAAO8M,gBACb3E,aAAcA,EACdC,MAAOA,IAIf5F,qBAAsB,WAClB,OACIhN,KAAMwK,GAAOgN,iBAIrBpE,qBAAsB,SAAUhF,GAC5B,OACIpO,KAAMwK,GAAOiN,eACbrJ,SAAUA,IAIlBwF,mBAAoB,SAAU7Y,EAAO2d,EAAiBjF,EAAUC,GAC5D,OACI1T,KAAMwK,GAAOkN,aACb3c,MAAOA,EACP2d,gBAAiBA,EACjBjF,SAAUA,EACVC,UAAWA,IAInBvF,sBAAuB,SAAUjO,EAAUkO,GACvC,MAAiB,OAAblO,GAAkC,OAAbA,GAEjBF,KAAMwK,GAAOoN,iBACb1X,SAAUA,EACVkO,SAAUA,EACVjP,QAAQ,IAIZa,KAAMwK,GAAOmN,gBACbzX,SAAUA,EACVkO,SAAUA,EACVjP,QAAQ,IAIhB+Q,0BAA2B,SAAUD,EAAchE,GAC/C,OACIjM,KAAMwK,GAAOqN,oBACb5H,aAAcA,EACdhE,KAAMA,IAId6D,yBAA0B,SAAUrhB,EAAImhB,GACpC,OACI5P,KAAMwK,GAAOsN,mBACbrpB,GAAIA,EACJmhB,KAAMA,IAIdoB,qBAAsB,SAAU/O,EAAMzO,GAClC,OACIwM,KAAMwK,GAAOuN,eACb9V,KAAMA,EACNzO,KAAMA,IAId+e,oBAAqB,SAAU3R,EAAQpN,GACnC,OACIwM,KAAMwK,GAAOwN,cACbpX,OAAQA,EACRpN,KAAMA,KA64DlBxF,EAAQ2qB,QAAU,QAElB3qB,EAAQoX,SAAWA,GAEnBpX,EAAQiQ,MAAQA,GAIhBjQ,EAAQwc,OAAU,WACd,GAAI1S,GAAM8gB,IAEmB,mBAAlB5lB,QAAO6lB,SACdD,EAAQ5lB,OAAO6lB,OAAO,MAG1B,KAAK/gB,IAAQ0S,IACLA,GAAO+B,eAAezU,KACtB8gB,EAAM9gB,GAAQ0S,GAAO1S,GAQ7B,OAJ6B,kBAAlB9E,QAAO8lB,QACd9lB,OAAO8lB,OAAOF,GAGXA,QASV,SAAS3qB,EAAQD,EAASM,IAE9B,SAAUyqB,EAAQhrB,GACTA,EAAQC,IAGhBI,KAAM,SAAUJ,GAAW,YAE3B,SAASgrB,GAAU/kB,EAAGD,GACpB,MAAWA,GAAJC,EAAQ,GAAKA,EAAID,EAAI,EAAIC,GAAKD,EAAI,EAAIilB,IAG/C,QAASC,GAAS3b,GAEhB,MADuB,KAAnBA,EAAQ9N,SAAc8N,EAAU4b,EAAoB5b,KAEtD0C,KAAM,SAAShM,EAAGmlB,EAAG7Z,EAAIE,GAGvB,IAFIzN,UAAUvC,OAAS,IAAG8P,EAAK,GAC3BvN,UAAUvC,OAAS,IAAGgQ,EAAKxL,EAAExE,QACrBgQ,EAALF,GAAS,CACd,GAAI8Z,GAAM9Z,EAAKE,IAAO,CAClBlC,GAAQtJ,EAAEolB,GAAMD,GAAK,EAAG7Z,EAAK8Z,EAAM,EAClC5Z,EAAK4Z,EAEZ,MAAO9Z,IAETqP,MAAO,SAAS3a,EAAGmlB,EAAG7Z,EAAIE,GAGxB,IAFIzN,UAAUvC,OAAS,IAAG8P,EAAK,GAC3BvN,UAAUvC,OAAS,IAAGgQ,EAAKxL,EAAExE,QACrBgQ,EAALF,GAAS,CACd,GAAI8Z,GAAM9Z,EAAKE,IAAO,CAClBlC,GAAQtJ,EAAEolB,GAAMD,GAAK,EAAG3Z,EAAK4Z,EAC5B9Z,EAAK8Z,EAAM,EAElB,MAAO9Z,KAKb,QAAS4Z,GAAoB/b,GAC3B,MAAO,UAAS3G,EAAG2iB,GACjB,MAAOJ,GAAU5b,EAAE3G,GAAI2iB,IAQ3B,QAASE,GAAWrlB,EAAGD,GACrB,MAAWC,GAAJD,EAAQ,GAAKA,EAAIC,EAAI,EAAID,GAAKC,EAAI,EAAIglB,IAG/C,QAASM,GAASH,GAChB,MAAa,QAANA,EAAaH,KAAOG,EAG7B,QAASI,GAAShjB,EAAO4G,GACvB,GAEInJ,GACAwC,EAHAX,EAAIU,EAAM/G,OACVb,EAAI,EAGJ6qB,EAAI,EACJlqB,EAAI,GACJwK,EAAI,CAER,IAAyB,IAArB/H,UAAUvC,OACZ,OAASF,EAAIuG,GACN4jB,MAAMzlB,EAAIslB,EAAS/iB,EAAMjH,OAC5BkH,EAAIxC,EAAIrF,EACRA,GAAK6H,IAAMsD,EACX0f,GAAKhjB,GAAKxC,EAAIrF,QAMlB,QAASW,EAAIuG,GACN4jB,MAAMzlB,EAAIslB,EAASnc,EAAE5G,EAAMjH,GAAIA,EAAGiH,OACrCC,EAAIxC,EAAIrF,EACRA,GAAK6H,IAAMsD,EACX0f,GAAKhjB,GAAKxC,EAAIrF,GAKpB,OAAImL,GAAI,EAAU0f,GAAK1f,EAAI,GAA3B,OAGF,QAAS4f,KACP,GAAIC,GAAIJ,EAASpoB,MAAMhD,KAAM4D,UAC7B,OAAO4nB,GAAIjmB,KAAKkmB,KAAKD,GAAKA,EAG5B,QAAShpB,GAAO4F,EAAO4G,GACrB,GAEInJ,GACAD,EACAnF,EAJAU,EAAI,GACJuG,EAAIU,EAAM/G,MAKd,IAAyB,IAArBuC,UAAUvC,OAAc,CAC1B,OAASF,EAAIuG,GAAG,GAAsB,OAAjB9B,EAAIwC,EAAMjH,KAAeyE,GAAKA,EAAG,CAAEC,EAAIpF,EAAImF,CAAG,OACnE,OAASzE,EAAIuG,GAAyB,OAAjB9B,EAAIwC,EAAMjH,MACzB0E,EAAID,IAAGC,EAAID,GACPA,EAAJnF,IAAOA,EAAImF,QAId,CACH,OAASzE,EAAIuG,GAAG,GAAmC,OAA9B9B,EAAIoJ,EAAE5G,EAAMjH,GAAIA,EAAGiH,KAAmBxC,GAAKA,EAAG,CAAEC,EAAIpF,EAAImF,CAAG,OAChF,OAASzE,EAAIuG,GAAsC,OAA9B9B,EAAIoJ,EAAE5G,EAAMjH,GAAIA,EAAGiH,MAClCvC,EAAID,IAAGC,EAAID,GACPA,EAAJnF,IAAOA,EAAImF,IAInB,OAAQC,EAAGpF,GAGb,QAASirB,GAASV,GAChB,MAAO,YACL,MAAOA,IAIX,QAASW,GAASX,GAChB,MAAOA,GAGT,QAAS5Z,GAAMoD,EAAOoX,EAAMC,IACrBnkB,EAAI9D,UAAUvC,QAAU,IAC3BwqB,EAAO,EACC,EAAJnkB,IACFkkB,EAAOpX,EACPA,EAAQ,GAQZ,KAJA,GAAIrT,GAAI,GACJuG,EAAoD,EAAhDnC,KAAK3C,IAAI,EAAG2C,KAAKumB,MAAMF,EAAOpX,GAASqX,IAC3Cza,EAAQ,GAAInQ,OAAMyG,KAEbvG,EAAIuG,GACX0J,EAAMjQ,GAAKqT,EAAQrT,EAAI0qB,CAGzB,OAAOza,GAMT,QAAS2a,GAAMvX,EAAOoX,EAAM/hB,GAC1B,GAAIgiB,GAAOG,EAASxX,EAAOoX,EAAM/hB,EACjC,OAAOuH,GACL7L,KAAKumB,KAAKtX,EAAQqX,GAAQA,EAC1BtmB,KAAK0mB,MAAML,EAAOC,GAAQA,EAAOA,EAAO,EACxCA,GAIJ,QAASG,GAASxX,EAAOoX,EAAM/hB,GAC7B,GAAIqiB,GAAQ3mB,KAAKY,IAAIylB,EAAOpX,GAASjP,KAAK3C,IAAI,EAAGiH,GAC7CsiB,EAAQ5mB,KAAK6mB,IAAI,GAAI7mB,KAAK0mB,MAAM1mB,KAAKsG,IAAIqgB,GAAS3mB,KAAK8mB,OACvD1R,EAAQuR,EAAQC,CAIpB,OAHIxR,IAAS2R,EAAKH,GAAS,GAClBxR,GAAS4R,EAAIJ,GAAS,EACtBxR,GAAS6R,IAAIL,GAAS,GACjB3X,EAAPoX,GAAgBO,EAAQA,EAGjC,QAASM,GAAQC,GACf,MAAOnnB,MAAKumB,KAAKvmB,KAAKsG,IAAI6gB,EAAOrrB,QAAUkE,KAAKonB,KAAO,EAGzD,QAASrV,GAAO0T,GACd,OAAQA,EAGV,QAAS4B,KAKP,QAASA,GAAU9qB,GACjB,GAAIX,GAEA6pB,EADAtjB,EAAI5F,EAAKT,OAETqrB,EAAS,GAAIzrB,OAAMyG,EAGvB,KAAKvG,EAAI,EAAOuG,EAAJvG,IAASA,EACnBurB,EAAOvrB,IAAMuD,EAAM5C,EAAKX,GAAIA,EAAGW,EAGjC,IAAI+qB,GAAKC,EAAOJ,GACZK,GAAMF,EAAG,GACTG,GAAMH,EAAG,GACTI,EAAKC,EAAUR,EAAQK,EAAIC,EAG1B/rB,OAAMC,QAAQ+rB,KAAKA,EAAKlB,EAAMgB,EAAIC,GAAKC,GAG5C,IAAIzsB,GAAIysB,EAAG5rB,MACX,KAAKF,EAAI,EAAOX,EAAJW,IAASA,EAAG8rB,EAAG9rB,IAAM8rB,EAAG9rB,EACpC,MAAO8rB,EAAG,IAAMF,GAAIE,EAAGE,UAAW3sB,CAClC,MAAOysB,EAAGzsB,EAAI,IAAMwsB,GAAIC,EAAGzT,QAAShZ,CAEpC,IACI4sB,GADAC,EAAO,GAAIpsB,OAAMT,EAAI,EAIzB,KAAKW,EAAI,EAAQX,GAALW,IAAUA,EACpBisB,EAAMC,EAAKlsB,MACXisB,EAAIL,GAAK5rB,EAAI,EAAI8rB,EAAG9rB,EAAI,GAAK4rB,EAC7BK,EAAIJ,GAASxsB,EAAJW,EAAQ8rB,EAAG9rB,GAAK6rB,CAI3B,KAAK7rB,EAAI,EAAOuG,EAAJvG,IAASA,EACnB6pB,EAAI0B,EAAOvrB,GACD6pB,GAAN+B,GAAgBC,GAALhC,GACbqC,EAAKC,EAAYL,EAAIjC,EAAG,EAAGxqB,IAAI6C,KAAKvB,EAAKX,GAI7C,OAAOksB,GA/CT,GAAI3oB,GAAQinB,EACRmB,EAAStqB,EACT0qB,EAAYT,CAgEhB,OAhBAG,GAAUloB,MAAQ,SAASjD,GACzB,MAAOmC,WAAUvC,QAAUqD,EAAqB,kBAANjD,GAAmBA,EAAIiqB,GAAUjqB,GAAImrB,GAAaloB,GAG9FkoB,EAAUE,OAAS,SAASrrB,GAC1B,MAAOmC,WAAUvC,QAAUyrB,EAAsB,kBAANrrB,GAAmBA,EAAIiqB,IAAWjqB,EAAE,IAAKA,EAAE,KAAMmrB,GAAaE,GAG3GF,EAAUW,WAAa,SAAS9rB,GAC9B,MAAKmC,WAAUvC,QACf6rB,EAAyB,kBAANzrB,GAAmBA,EACbiqB,EAAnBzqB,MAAMC,QAAQO,GAAcR,MAAM8G,UAAUb,IAAI3G,KAAKkB,EAAG6V,IAC9C7V,GACTmrB,GAJuBM,GAOzBN,EAGT,QAASY,GAASplB,EAAO1H,EAAGsO,GAE1B,GADIpL,UAAUvC,OAAS,IAAG2N,EAAImc,GACxBzjB,EAAIU,EAAM/G,OAAhB,CACA,IAAKX,GAAKA,IAAM,GAAS,EAAJgH,EAAO,OAAQsH,EAAE5G,EAAM,GAAI,EAAGA,EACnD,IAAI1H,GAAK,EAAG,OAAQsO,EAAE5G,EAAMV,EAAI,GAAIA,EAAI,EAAGU;AAC3C,GAAIV,GACA+lB,GAAK/lB,EAAI,GAAKhH,EACdS,EAAIoE,KAAK0mB,MAAMwB,GACf5nB,GAAKmJ,EAAE5G,EAAMjH,GAAIA,EAAGiH,GACpBxC,GAAKoJ,EAAE5G,EAAMjH,EAAI,GAAIA,EAAI,EAAGiH,EAChC,OAAOvC,IAAKD,EAAIC,IAAM4nB,EAAItsB,IAG5B,QAASusB,GAAiBhB,EAAQ/pB,EAAKC,GAErC,MADA8pB,GAAOtmB,KAAKwkB,GACLrlB,KAAKumB,MAAMlpB,EAAMD,IAAQ,GAAK6qB,EAASd,EAAQ,KAAQc,EAASd,EAAQ,MAASnnB,KAAK6mB,IAAIM,EAAOrrB,OAAQ,GAAK,KAGvH,QAASssB,GAAMjB,EAAQ/pB,EAAKC,GAC1B,MAAO2C,MAAKumB,MAAMlpB,EAAMD,IAAQ,IAAM4oB,EAAUmB,GAAUnnB,KAAK6mB,IAAIM,EAAOrrB,OAAQ,GAAK,KAGzF,QAASuB,GAAIwF,EAAO4G,GAClB,GAEInJ,GACAD,EAHAzE,EAAI,GACJuG,EAAIU,EAAM/G,MAId,IAAyB,IAArBuC,UAAUvC,OAAc,CAC1B,OAASF,EAAIuG,GAAG,GAAsB,OAAjB9B,EAAIwC,EAAMjH,KAAeyE,GAAKA,EAAG,CAAEC,EAAID,CAAG,OAC/D,OAASzE,EAAIuG,GAAyB,OAAjB9B,EAAIwC,EAAMjH,KAAeyE,EAAIC,IAAGA,EAAID,OAGtD,CACH,OAASzE,EAAIuG,GAAG,GAAmC,OAA9B9B,EAAIoJ,EAAE5G,EAAMjH,GAAIA,EAAGiH,KAAmBxC,GAAKA,EAAG,CAAEC,EAAID,CAAG,OAC5E,OAASzE,EAAIuG,GAAsC,OAA9B9B,EAAIoJ,EAAE5G,EAAMjH,GAAIA,EAAGiH,KAAmBxC,EAAIC,IAAGA,EAAID,GAGxE,MAAOC,GAGT,QAAS+nB,GAAKxlB,EAAO4G,GACnB,GAEInJ,GAFAwlB,EAAI,EACJ3jB,EAAIU,EAAM/G,OAEVF,EAAI,GACJwK,EAAIjE,CAER,IAAyB,IAArB9D,UAAUvC,OACZ,OAASF,EAAIuG,GAAQ4jB,MAAMzlB,EAAIslB,EAAS/iB,EAAMjH,OAAqBwK,EAAf0f,GAAKxlB,MAIzD,QAAS1E,EAAIuG,GAAQ4jB,MAAMzlB,EAAIslB,EAASnc,EAAE5G,EAAMjH,GAAIA,EAAGiH,OAAyBuD,EAAf0f,GAAKxlB,CAGxE,OAAI8F,GAAU0f,EAAI1f,EAAlB,OAGF,QAASkiB,GAAOzlB,EAAO4G,GACrB,GAEInJ,GAFAioB,KACApmB,EAAIU,EAAM/G,OAEVF,EAAI,EAER,IAAyB,IAArByC,UAAUvC,OACZ,OAASF,EAAIuG,GAAQ4jB,MAAMzlB,EAAIslB,EAAS/iB,EAAMjH,MAAM2sB,EAAQzqB,KAAKwC,OAIjE,QAAS1E,EAAIuG,GAAQ4jB,MAAMzlB,EAAIslB,EAASnc,EAAE5G,EAAMjH,GAAIA,EAAGiH,MAAU0lB,EAAQzqB,KAAKwC,EAGhF,OAAO2nB,GAASM,EAAQ1nB,KAAKwkB,GAAY,IAG3C,QAASmD,GAAMC,GAQb,IAPA,GACIxtB,GAGAytB,EACA7lB,EALAV,EAAIsmB,EAAO3sB,OAEXF,EAAI,GACJwK,EAAI,IAICxK,EAAIuG,GAAGiE,GAAKqiB,EAAO7sB,GAAGE,MAG/B,KAFA4sB,EAAS,GAAIhtB,OAAM0K,KAEVjE,GAAK,GAGZ,IAFAU,EAAQ4lB,EAAOtmB,GACflH,EAAI4H,EAAM/G,SACDb,GAAK,GACZytB,IAAStiB,GAAKvD,EAAM5H,EAIxB,OAAOytB,GAGT,QAAStrB,GAAIyF,EAAO4G,GAClB,GAEInJ,GACAD,EAHAzE,EAAI,GACJuG,EAAIU,EAAM/G,MAId,IAAyB,IAArBuC,UAAUvC,OAAc,CAC1B,OAASF,EAAIuG,GAAG,GAAsB,OAAjB9B,EAAIwC,EAAMjH,KAAeyE,GAAKA,EAAG,CAAEC,EAAID,CAAG,OAC/D,OAASzE,EAAIuG,GAAyB,OAAjB9B,EAAIwC,EAAMjH,KAAe0E,EAAID,IAAGC,EAAID,OAGtD,CACH,OAASzE,EAAIuG,GAAG,GAAmC,OAA9B9B,EAAIoJ,EAAE5G,EAAMjH,GAAIA,EAAGiH,KAAmBxC,GAAKA,EAAG,CAAEC,EAAID,CAAG,OAC5E,OAASzE,EAAIuG,GAAsC,OAA9B9B,EAAIoJ,EAAE5G,EAAMjH,GAAIA,EAAGiH,KAAmBvC,EAAID,IAAGC,EAAID,GAGxE,MAAOC,GAGT,QAASqoB,GAAM9lB,GAEb,IADA,GAAiC+lB,GAA7BhtB,EAAI,EAAGuG,EAAIU,EAAM/G,OAAS,EAAO+sB,EAAKhmB,EAAM,GAAI8lB,EAAQ,GAAIjtB,OAAU,EAAJyG,EAAQ,EAAIA,GACvEA,EAAJvG,GAAO+sB,EAAM/sB,IAAMgtB,EAAKC,EAAIA,EAAKhmB,IAAQjH,GAChD,OAAO+sB,GAGT,QAASG,GAAQjmB,EAAOkmB,GAEtB,IADA,GAAIntB,GAAImtB,EAAQjtB,OAAQktB,EAAW,GAAIttB,OAAME,GACtCA,KAAKotB,EAASptB,GAAKiH,EAAMkmB,EAAQntB,GACxC,OAAOotB,GAGT,QAASC,GAAKpmB,EAAO+G,GACnB,GAAMzH,EAAIU,EAAM/G,OAAhB,CACA,GACIqG,GAEA+mB,EAHAttB,EAAI,EAEJwK,EAAI,EAEJ+iB,EAAKtmB,EAAMuD,EAIf,KAFKwD,IAASA,EAAUyb,KAEfzpB,EAAIuG,IAAOyH,EAAQsf,EAAKrmB,EAAMjH,GAAIutB,GAAM,GAAyB,IAApBvf,EAAQuf,EAAIA,MAAWA,EAAKD,EAAI9iB,EAAIxK,EAE1F,OAAwB,KAApBgO,EAAQuf,EAAIA,GAAkB/iB,EAAlC,QAGF,QAASgjB,GAAQvmB,EAAOwmB,EAAIC,IACrBruB,EAAIoD,UAAUvC,QAAU,IAC3BwtB,EAAKzmB,EAAM/G,OACH,EAAJb,IAAOouB,EAAK,GAOlB,KAJA,GACI9gB,GACA3M,EAFAX,EAAIquB,EAAKD,EAINpuB,GACLW,EAAIoE,KAAKupB,SAAWtuB,IAAM,EAC1BsN,EAAI1F,EAAM5H,EAAIouB,GACdxmB,EAAM5H,EAAIouB,GAAMxmB,EAAMjH,EAAIytB,GAC1BxmB,EAAMjH,EAAIytB,GAAM9gB,CAGlB,OAAO1F,GAGT,QAAS2mB,GAAI3mB,EAAO4G,GAClB,GAEInJ,GAFAwlB,EAAI,EACJ3jB,EAAIU,EAAM/G,OAEVF,EAAI,EAER,IAAyB,IAArByC,UAAUvC,OACZ,OAASF,EAAIuG,IAAO7B,GAAKuC,EAAMjH,MAAIkqB,GAAKxlB,OAIxC,QAAS1E,EAAIuG,IAAO7B,GAAKmJ,EAAE5G,EAAMjH,GAAIA,EAAGiH,MAAQijB,GAAKxlB,EAGvD,OAAOwlB,GAGT,QAAS2D,GAAUC,GACjB,KAAMvnB,EAAIunB,EAAO5tB,QAAS,QAC1B,KAAK,GAAIF,GAAI,GAAIX,EAAImC,EAAIssB,EAAQ5tB,GAAS2tB,EAAY,GAAI/tB,OAAMT,KAAMW,EAAIX,GACxE,IAAK,GAAYkH,GAARiE,EAAI,GAAOujB,EAAMF,EAAU7tB,GAAK,GAAIF,OAAMyG,KAAMiE,EAAIjE,GAC3DwnB,EAAIvjB,GAAKsjB,EAAOtjB,GAAGxK,EAGvB,OAAO6tB,GAGT,QAAS3tB,GAAOgH,GACd,MAAOA,GAAEhH,OAGX,QAAS8tB,KACP,MAAOH,GAAUprB,WAjZnB,GAAIwrB,GAAkBtE,EAASF,GAC3B0C,EAAc8B,EAAgB5O,MAC9B6O,EAAaD,EAAgBvd,KAuG7Bya,EAAM/mB,KAAKkmB,KAAK,IAChBc,EAAKhnB,KAAKkmB,KAAK,IACfe,EAAKjnB,KAAKkmB,KAAK,GAySflB,EAAU,OAEd3qB,GAAQ2qB,QAAUA,EAClB3qB,EAAQ0vB,OAAShC,EACjB1tB,EAAQ0tB,YAAcA,EACtB1tB,EAAQyvB,WAAaA,EACrBzvB,EAAQgrB,UAAYA,EACpBhrB,EAAQkrB,SAAWA,EACnBlrB,EAAQsrB,WAAaA,EACrBtrB,EAAQ2rB,UAAYA,EACpB3rB,EAAQ4C,OAASA,EACjB5C,EAAQgtB,UAAYA,EACpBhtB,EAAQ2vB,0BAA4B7B,EACpC9tB,EAAQ4vB,eAAiB7B,EACzB/tB,EAAQ6vB,iBAAmBhD,EAC3B7sB,EAAQgD,IAAMA,EACdhD,EAAQguB,KAAOA,EACfhuB,EAAQiuB,OAASA,EACjBjuB,EAAQmuB,MAAQA,EAChBnuB,EAAQ+C,IAAMA,EACd/C,EAAQsuB,MAAQA,EAChBtuB,EAAQyuB,QAAUA,EAClBzuB,EAAQ4tB,SAAWA,EACnB5tB,EAAQwR,MAAQA,EAChBxR,EAAQ4uB,KAAOA,EACf5uB,EAAQ+uB,QAAUA,EAClB/uB,EAAQmvB,IAAMA,EACdnvB,EAAQmsB,MAAQA,EAChBnsB,EAAQosB,SAAWA,EACnBpsB,EAAQovB,UAAYA,EACpBpvB,EAAQwrB,SAAWA,EACnBxrB,EAAQuvB,IAAMA,KAMX,SAAStvB,EAAQD,EAASM,IAE9B,SAAUyqB,EAAQhrB,GACTA,EAAQC,EAASM,EAAoB,MAG7CF,KAAM,SAAUJ,EAAQ8vB,GAAW,YAEnC,SAASnsB,GAAIsC,EAAGD,GACdC,EAAI6pB,EAAQnsB,IAAIsC,GAChBD,EAAI8pB,EAAQnsB,IAAIqC,EAChB,IAAI+pB,GAAK9pB,EAAEH,EACPkqB,EAAK/pB,EAAEF,EACPkqB,EAAKhqB,EAAED,EACPkqB,EAAKlqB,EAAEF,EAAIiqB,EACXI,EAAKnqB,EAAED,EAAIiqB,EACXI,EAAKpqB,EAAEA,EAAIiqB,CACf,OAAO,UAAS/hB,GAId,MAHAjI,GAAEH,EAAIiqB,EAAKG,EAAKhiB,EAChBjI,EAAEF,EAAIiqB,EAAKG,EAAKjiB,EAChBjI,EAAED,EAAIiqB,EAAKG,EAAKliB,EACTjI,EAAI,IAKf,QAASuC,GAAMvC,EAAGD,GAChB,GAKIzE,GALA6pB,KACAvqB,KACAwvB,EAAKpqB,EAAIA,EAAExE,OAAS,EACpB6uB,EAAKtqB,EAAIA,EAAEvE,OAAS,EACpB8uB,EAAK5qB,KAAK5C,IAAIstB,EAAIC,EAGtB,KAAK/uB,EAAI,EAAOgvB,EAAJhvB,IAAUA,EAAG6pB,EAAE3nB,KAAKqB,EAAMmB,EAAE1E,GAAIyE,EAAEzE,IAC9C,MAAW8uB,EAAJ9uB,IAAUA,EAAGV,EAAEU,GAAK0E,EAAE1E,EAC7B,MAAW+uB,EAAJ/uB,IAAUA,EAAGV,EAAEU,GAAKyE,EAAEzE,EAE7B,OAAO,UAAS2M,GACd,IAAK3M,EAAI,EAAOgvB,EAAJhvB,IAAUA,EAAGV,EAAEU,GAAK6pB,EAAE7pB,GAAG2M,EACrC,OAAOrN,IAIX,QAAS6W,GAAOzR,EAAGD,GACjB,MAAOC,IAAKA,EAAGD,GAAKC,EAAG,SAASiI,GAC9B,MAAOjI,GAAID,EAAIkI,GAInB,QAAS0E,GAAO3M,EAAGD,GACjB,GAEIwqB,GAFAjvB,KACAV,MAGM,OAANoF,GAA2B,gBAANA,MAAgBA,OAC/B,OAAND,GAA2B,gBAANA,MAAgBA,KAEzC,KAAKwqB,IAAKvqB,GACJuqB,IAAKxqB,GACPzE,EAAEivB,GAAK1rB,EAAMmB,EAAEuqB,GAAIxqB,EAAEwqB,IAErB3vB,EAAE2vB,GAAKvqB,EAAEuqB,EAIb,KAAKA,IAAKxqB,GACFwqB,IAAKvqB,KACTpF,EAAE2vB,GAAKxqB,EAAEwqB,GAIb,OAAO,UAAStiB,GACd,IAAKsiB,IAAKjvB,GAAGV,EAAE2vB,GAAKjvB,EAAEivB,GAAGtiB,EACzB,OAAOrN,IAMX,QAAS4vB,GAAKzqB,GACZ,MAAO,YACL,MAAOA,IAIX,QAAS0qB,GAAI1qB,GACX,MAAO,UAASkI,GACd,MAAOlI,GAAEkI,GAAK,IAIlB,QAASyiB,GAAO1qB,EAAGD,GACjB,GACI4qB,GACAC,EACAC,EAHAC,EAAKC,EAAIC,UAAYC,EAAID,UAAY,EAIrC1vB,EAAI,GACJkqB,KACA0F,IAMJ,KAHAlrB,GAAQ,GAAID,GAAQ,IAGZ4qB,EAAKI,EAAII,KAAKnrB,MACd4qB,EAAKK,EAAIE,KAAKprB,MACf8qB,EAAKD,EAAGrb,OAASub,IACpBD,EAAK9qB,EAAEoF,MAAM2lB,EAAID,GACbrF,EAAElqB,GAAIkqB,EAAElqB,IAAMuvB,EACbrF,IAAIlqB,GAAKuvB,IAEXF,EAAKA,EAAG,OAASC,EAAKA,EAAG,IACxBpF,EAAElqB,GAAIkqB,EAAElqB,IAAMsvB,EACbpF,IAAIlqB,GAAKsvB,GAEdpF,IAAIlqB,GAAK,KACT4vB,EAAE1tB,MAAMlC,EAAGA,EAAG6pB,EAAG1T,EAAOkZ,EAAIC,MAE9BE,EAAKG,EAAID,SAYX,OARIF,GAAK/qB,EAAEvE,SACTqvB,EAAK9qB,EAAEoF,MAAM2lB,GACTtF,EAAElqB,GAAIkqB,EAAElqB,IAAMuvB,EACbrF,IAAIlqB,GAAKuvB,GAKTrF,EAAEhqB,OAAS,EAAK0vB,EAAE,GACnBT,EAAIS,EAAE,GAAG/F,GACTqF,EAAKzqB,IACJA,EAAImrB,EAAE1vB,OAAQ,SAASyM,GACtB,IAAK,GAAWmjB,GAAP9vB,EAAI,EAAUyE,EAAJzE,IAASA,EAAGkqB,GAAG4F,EAAIF,EAAE5vB,IAAIA,GAAK8vB,EAAEjG,EAAEld,EACrD,OAAOud,GAAE3kB,KAAK,MAexB,QAAShC,GAAMmB,EAAGD,GAEhB,IADA,GAAuBoJ,GAAnB7N,EAAIurB,EAAOrrB,SACNF,GAAK,KAAO6N,EAAI0d,EAAOvrB,GAAG0E,EAAGD,MACtC,MAAOoJ,GAGT,QAASxJ,GAAMK,EAAGD,GAChB,MAAOC,IAAKA,EAAGD,GAAKC,EAAG,SAASiI,GAC9B,MAAOvI,MAAKC,MAAMK,EAAID,EAAIkI,IAW9B,QAASojB,GAAUX,GACZ5qB,IAAGA,EAAIhE,SAASwvB,gBAAgB,6BAA8B,MAC/DZ,IAAQ5qB,EAAEyrB,aAAa,YAAab,GAASziB,EAAInI,EAAE0rB,UAAUC,QAAQC,cAEzE,IAAIzjB,GACAtN,EAAIsN,EAAIA,EAAEmhB,OAAStD,EACnB6F,GAAMhxB,EAAEqF,EAAGrF,EAAEoF,GACb6rB,GAAMjxB,EAAEC,EAAGD,EAAE6H,GACbqpB,EAAKC,EAAUH,GACfI,EAAKC,EAAIL,EAAIC,GACbK,EAAKH,EAAUI,EAAQN,EAAID,GAAKI,KAAQ,CAExCJ,GAAG,GAAKC,EAAG,GAAKA,EAAG,GAAKD,EAAG,KAC7BA,EAAG,IAAM,GACTA,EAAG,IAAM,GACTE,GAAM,GACNE,GAAM,IAGR5xB,KAAKgyB,QAAUN,EAAKnsB,KAAK0sB,MAAMT,EAAG,GAAIA,EAAG,IAAMjsB,KAAK0sB,OAAOR,EAAG,GAAIA,EAAG,KAAOS,EAC5ElyB,KAAKmyB,WAAa3xB,EAAEgY,EAAGhY,EAAEwO,GACzBhP,KAAKoyB,OAASV,EAAII,GAClB9xB,KAAKqyB,KAAOP,EAAKvsB,KAAK0sB,MAAML,EAAIE,GAAMI,EAAU,EAGlD,QAASL,GAAIhsB,EAAGD,GACd,MAAOC,GAAE,GAAKD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAGhC,QAAS+rB,GAAU9rB,GACjB,GAAIuqB,GAAI7qB,KAAKkmB,KAAKoG,EAAIhsB,EAAGA,GAEzB,OADIuqB,KAAGvqB,EAAE,IAAMuqB,EAAGvqB,EAAE,IAAMuqB,GACnBA,EAGT,QAAS2B,GAAQlsB,EAAGD,EAAGwqB,GAGrB,MAFAvqB,GAAE,IAAMuqB,EAAIxqB,EAAE,GACdC,EAAE,IAAMuqB,EAAIxqB,EAAE,GACPC,EAGT,QAAS2T,GAAI6R,GACX,MAAOA,GAAEhqB,OAASgqB,EAAE7R,MAAQ,IAAM,GAGpC,QAAS2Y,GAAUG,EAAIC,EAAIlH,EAAG0F,GAC5B,GAAIuB,EAAG,KAAOC,EAAG,IAAMD,EAAG,KAAOC,EAAG,GAAI,CACtC,GAAIpxB,GAAIkqB,EAAEhoB,KAAK,aAAc,KAAM,IAAK,KAAM,IAC9C0tB,GAAE1tB,MAAMlC,EAAGA,EAAI,EAAG6pB,EAAG1T,EAAOgb,EAAG,GAAIC,EAAG,MAAOpxB,EAAGA,EAAI,EAAG6pB,EAAG1T,EAAOgb,EAAG,GAAIC,EAAG,WAClEA,EAAG,IAAMA,EAAG,KACrBlH,EAAEhoB,KAAK,aAAekvB,EAAK,KAI/B,QAASP,GAAOQ,EAAIC,EAAIpH,EAAG0F,GACrByB,IAAOC,GACLD,EAAKC,EAAK,IAAKA,GAAM,IAAcA,EAAKD,EAAK,MAAKA,GAAM,KAC5DzB,EAAE1tB,MAAMlC,EAAGkqB,EAAEhoB,KAAKmW,EAAI6R,GAAK,UAAW,KAAM,KAAO,EAAGL,EAAG1T,EAAOkb,EAAIC,MAC3DA,GACTpH,EAAEhoB,KAAKmW,EAAI6R,GAAK,UAAYoH,EAAK,KAIrC,QAASJ,GAAKK,EAAIC,EAAItH,EAAG0F,GACnB2B,IAAOC,EACT5B,EAAE1tB,MAAMlC,EAAGkqB,EAAEhoB,KAAKmW,EAAI6R,GAAK,SAAU,KAAM,KAAO,EAAGL,EAAG1T,EAAOob,EAAIC,KAC1DA,GACTtH,EAAEhoB,KAAKmW,EAAI6R,GAAK,SAAWsH,EAAK,KAIpC,QAASP,GAAMQ,EAAIC,EAAIxH,EAAG0F,GACxB,GAAI6B,EAAG,KAAOC,EAAG,IAAMD,EAAG,KAAOC,EAAG,GAAI,CACtC,GAAI1xB,GAAIkqB,EAAEhoB,KAAKmW,EAAI6R,GAAK,SAAU,KAAM,IAAK,KAAM,IACnD0F,GAAE1tB,MAAMlC,EAAGA,EAAI,EAAG6pB,EAAG1T,EAAOsb,EAAG,GAAIC,EAAG,MAAO1xB,EAAGA,EAAI,EAAG6pB,EAAG1T,EAAOsb,EAAG,GAAIC,EAAG,WACxD,IAAVA,EAAG,IAAsB,IAAVA,EAAG,KAC3BxH,EAAEhoB,KAAKmW,EAAI6R,GAAK,SAAWwH,EAAK,KAIpC,QAASxB,GAAUxrB,EAAGD,GACpB,GAAIylB,MACA0F,IAOJ,OANAlrB,GAAI,GAAIqrB,GAAUrrB,GAAID,EAAI,GAAIsrB,GAAUtrB,GACxCusB,EAAUtsB,EAAEssB,UAAWvsB,EAAEusB,UAAW9G,EAAG0F,GACvCiB,EAAOnsB,EAAEmsB,OAAQpsB,EAAEosB,OAAQ3G,EAAG0F,GAC9BsB,EAAKxsB,EAAEwsB,KAAMzsB,EAAEysB,KAAMhH,EAAG0F,GACxBqB,EAAMvsB,EAAEusB,MAAOxsB,EAAEwsB,MAAO/G,EAAG0F,GAC3BlrB,EAAID,EAAI,KACD,SAASkI,GAEd,IADA,GAA0BmjB,GAAtB9vB,EAAI,GAAIuG,EAAIqpB,EAAE1vB,SACTF,EAAIuG,GAAG2jB,GAAG4F,EAAIF,EAAE5vB,IAAIA,GAAK8vB,EAAEjG,EAAEld,EACtC,OAAOud,GAAE3kB,KAAK,KAQlB,QAASosB,GAAK9H,GACZ,QAASA,EAAIzlB,KAAKwtB,IAAI/H,IAAM,EAAIA,GAAK,EAGvC,QAASgI,GAAKhI,GACZ,QAASA,EAAIzlB,KAAKwtB,IAAI/H,IAAM,EAAIA,GAAK,EAGvC,QAASiI,GAAKjI,GACZ,QAASA,EAAIzlB,KAAKwtB,IAAI,EAAI/H,IAAM,IAAMA,EAAI,GAK5C,QAASkI,GAAK/E,EAAIC,GAChB,GAKIjtB,GACAgyB,EANAC,EAAMjF,EAAG,GAAIkF,EAAMlF,EAAG,GAAImF,EAAKnF,EAAG,GAClCoF,EAAMnF,EAAG,GAAIoF,EAAMpF,EAAG,GAAIqF,EAAKrF,EAAG,GAClCsF,EAAKH,EAAMH,EACXO,EAAKH,EAAMH,EACXO,EAAKF,EAAKA,EAAKC,EAAKA,CAKxB,IAASE,EAALD,EACFT,EAAI5tB,KAAKsG,IAAI4nB,EAAKH,GAAMQ,EACxB3yB,EAAI,SAAS2M,GACX,OACEslB,EAAMtlB,EAAI4lB,EACVL,EAAMvlB,EAAI6lB,EACVL,EAAK/tB,KAAKwtB,IAAIe,EAAMhmB,EAAIqlB,SAMzB,CACH,GAAIY,GAAKxuB,KAAKkmB,KAAKmI,GACfI,GAAMP,EAAKA,EAAKH,EAAKA,EAAKW,EAAOL,IAAO,EAAIN,EAAKY,EAAOH,GACxDI,GAAMV,EAAKA,EAAKH,EAAKA,EAAKW,EAAOL,IAAO,EAAIH,EAAKS,EAAOH,GACxDvC,EAAKjsB,KAAKsG,IAAItG,KAAKkmB,KAAKuI,EAAKA,EAAK,GAAKA,GACvCvC,EAAKlsB,KAAKsG,IAAItG,KAAKkmB,KAAK0I,EAAKA,EAAK,GAAKA,EAC3ChB,IAAK1B,EAAKD,GAAMsC,EAChB3yB,EAAI,SAAS2M,GACX,GAAIud,GAAIvd,EAAIqlB,EACRiB,EAAStB,EAAKtB,GACd6C,EAAIf,GAAMY,EAAOH,IAAOK,EAASnB,EAAKa,EAAMzI,EAAImG,GAAMwB,EAAKxB,GAC/D,QACE4B,EAAMiB,EAAIX,EACVL,EAAMgB,EAAIV,EACVL,EAAKc,EAAStB,EAAKgB,EAAMzI,EAAImG,KAOnC,MAFArwB,GAAEmzB,SAAe,IAAJnB,EAENhyB,EAGT,QAASozB,GAASC,EAAIC,GACpB,GAAIC,GAAQF,EAAKC,CACjB,OAAOC,GAAQ,KAAe,KAARA,EAChBA,EAAQ,IAAMnvB,KAAKC,MAAMkvB,EAAQ,KACjCA,EAGR,QAASC,GAAI9uB,EAAGD,GACdC,EAAI6pB,EAAQiF,IAAI9uB,GAChBD,EAAI8pB,EAAQiF,IAAI/uB,EAChB,IAAIgvB,GAAKtJ,MAAMzlB,EAAE4nB,GAAK7nB,EAAE6nB,EAAI5nB,EAAE4nB,EAC1BoH,EAAKvJ,MAAMzlB,EAAEwlB,GAAKzlB,EAAEylB,EAAIxlB,EAAEwlB,EAC1ByJ,EAAKjvB,EAAEkvB,EACPC,EAAK1J,MAAM1lB,EAAE6nB,GAAK,EAAI8G,EAAS3uB,EAAE6nB,EAAGmH,GACpClE,EAAKpF,MAAM1lB,EAAEylB,GAAK,EAAIzlB,EAAEylB,EAAIwJ,EAC5BI,EAAKrvB,EAAEmvB,EAAID,CACf,OAAO,UAAShnB,GAId,MAHAjI,GAAE4nB,EAAImH,EAAKI,EAAKlnB,EAChBjI,EAAEwlB,EAAIwJ,EAAKnE,EAAK5iB,EAChBjI,EAAEkvB,EAAID,EAAKG,EAAKnnB,EACTjI,EAAI,IAIf,QAASqvB,GAAQrvB,EAAGD,GAClBC,EAAI6pB,EAAQiF,IAAI9uB,GAChBD,EAAI8pB,EAAQiF,IAAI/uB,EAChB,IAAIgvB,GAAKtJ,MAAMzlB,EAAE4nB,GAAK7nB,EAAE6nB,EAAI5nB,EAAE4nB,EAC1BoH,EAAKvJ,MAAMzlB,EAAEwlB,GAAKzlB,EAAEylB,EAAIxlB,EAAEwlB,EAC1ByJ,EAAKjvB,EAAEkvB,EACPC,EAAK1J,MAAM1lB,EAAE6nB,GAAK,EAAI7nB,EAAE6nB,EAAImH,EAC5BlE,EAAKpF,MAAM1lB,EAAEylB,GAAK,EAAIzlB,EAAEylB,EAAIwJ,EAC5BI,EAAKrvB,EAAEmvB,EAAID,CACf,OAAO,UAAShnB,GAId,MAHAjI,GAAE4nB,EAAImH,EAAKI,EAAKlnB,EAChBjI,EAAEwlB,EAAIwJ,EAAKnE,EAAK5iB,EAChBjI,EAAEkvB,EAAID,EAAKG,EAAKnnB,EACTjI,EAAI,IAIf,QAASsvB,GAAItvB,EAAGD,GACdC,EAAI6pB,EAAQyF,IAAItvB,GAChBD,EAAI8pB,EAAQyF,IAAIvvB,EAChB,IAAIkvB,GAAKjvB,EAAEkvB,EACPK,EAAKvvB,EAAEA,EACPgqB,EAAKhqB,EAAED,EACPqvB,EAAKrvB,EAAEmvB,EAAID,EACXO,EAAKzvB,EAAEC,EAAIuvB,EACXpF,EAAKpqB,EAAEA,EAAIiqB,CACf,OAAO,UAAS/hB,GAId,MAHAjI,GAAEkvB,EAAID,EAAKG,EAAKnnB,EAChBjI,EAAEA,EAAIuvB,EAAKC,EAAKvnB,EAChBjI,EAAED,EAAIiqB,EAAKG,EAAKliB,EACTjI,EAAI,IAIf,QAASyvB,GAAIzvB,EAAGD,GACdC,EAAI6pB,EAAQ4F,IAAIzvB,GAChBD,EAAI8pB,EAAQ4F,IAAI1vB,EAChB,IAAIgvB,GAAKtJ,MAAMzlB,EAAE4nB,GAAK7nB,EAAE6nB,EAAI5nB,EAAE4nB,EAC1B8H,EAAKjK,MAAMzlB,EAAEpF,GAAKmF,EAAEnF,EAAIoF,EAAEpF,EAC1Bq0B,EAAKjvB,EAAEkvB,EACPC,EAAK1J,MAAM1lB,EAAE6nB,GAAK,EAAI8G,EAAS3uB,EAAE6nB,EAAGmH,GACpCY,EAAKlK,MAAM1lB,EAAEnF,GAAK,EAAImF,EAAEnF,EAAI80B,EAC5BN,EAAKrvB,EAAEmvB,EAAID,CACf,OAAO,UAAShnB,GAId,MAHAjI,GAAE4nB,EAAImH,EAAKI,EAAKlnB,EAChBjI,EAAEpF,EAAI80B,EAAKC,EAAK1nB,EAChBjI,EAAEkvB,EAAID,EAAKG,EAAKnnB,EACTjI,EAAI,IAIf,QAAS4vB,GAAQ5vB,EAAGD,GAClBC,EAAI6pB,EAAQ4F,IAAIzvB,GAChBD,EAAI8pB,EAAQ4F,IAAI1vB,EAChB,IAAIgvB,GAAKtJ,MAAMzlB,EAAE4nB,GAAK7nB,EAAE6nB,EAAI5nB,EAAE4nB,EAC1B8H,EAAKjK,MAAMzlB,EAAEpF,GAAKmF,EAAEnF,EAAIoF,EAAEpF,EAC1Bq0B,EAAKjvB,EAAEkvB,EACPC,EAAK1J,MAAM1lB,EAAE6nB,GAAK,EAAI7nB,EAAE6nB,EAAImH,EAC5BY,EAAKlK,MAAM1lB,EAAEnF,GAAK,EAAImF,EAAEnF,EAAI80B,EAC5BN,EAAKrvB,EAAEmvB,EAAID,CACf,OAAO,UAAShnB,GAId,MAHAjI,GAAE4nB,EAAImH,EAAKI,EAAKlnB,EAChBjI,EAAEpF,EAAI80B,EAAKC,EAAK1nB,EAChBjI,EAAEkvB,EAAID,EAAKG,EAAKnnB,EACTjI,EAAI,IAIf,QAAS6vB,GAAU7vB,EAAGD,EAAG+vB,GACnB/xB,UAAUvC,OAAS,IAAGs0B,EAAQ,GAClC9vB,EAAI6pB,EAAQgG,UAAU7vB,GACtBD,EAAI8pB,EAAQgG,UAAU9vB,EACtB,IAAIgvB,GAAKtJ,MAAMzlB,EAAE4nB,GAAK7nB,EAAE6nB,EAAI5nB,EAAE4nB,EAC1BoH,EAAKvJ,MAAMzlB,EAAEwlB,GAAKzlB,EAAEylB,EAAIxlB,EAAEwlB,EAC1ByJ,EAAKjvB,EAAEkvB,EACPC,EAAK1J,MAAM1lB,EAAE6nB,GAAK,EAAI8G,EAAS3uB,EAAE6nB,EAAGmH,GACpClE,EAAKpF,MAAM1lB,EAAEylB,GAAK,EAAIzlB,EAAEylB,EAAIwJ,EAC5BI,EAAKrvB,EAAEmvB,EAAID,CACf,OAAO,UAAShnB,GAId,MAHAjI,GAAE4nB,EAAImH,EAAKI,EAAKlnB,EAChBjI,EAAEwlB,EAAIwJ,EAAKnE,EAAK5iB,EAChBjI,EAAEkvB,EAAID,EAAKG,EAAK1vB,KAAK6mB,IAAIte,EAAG6nB,GACrB9vB,EAAI,IAIf,QAAS+vB,GAAc/vB,EAAGD,EAAG+vB,GACvB/xB,UAAUvC,OAAS,IAAGs0B,EAAQ,GAClC9vB,EAAI6pB,EAAQgG,UAAU7vB,GACtBD,EAAI8pB,EAAQgG,UAAU9vB,EACtB,IAAIgvB,GAAKtJ,MAAMzlB,EAAE4nB,GAAK7nB,EAAE6nB,EAAI5nB,EAAE4nB,EAC1BoH,EAAKvJ,MAAMzlB,EAAEwlB,GAAKzlB,EAAEylB,EAAIxlB,EAAEwlB,EAC1ByJ,EAAKjvB,EAAEkvB,EACPC,EAAK1J,MAAM1lB,EAAE6nB,GAAK,EAAI7nB,EAAE6nB,EAAImH,EAC5BlE,EAAKpF,MAAM1lB,EAAEylB,GAAK,EAAIzlB,EAAEylB,EAAIwJ,EAC5BI,EAAKrvB,EAAEmvB,EAAID,CACf,OAAO,UAAShnB,GAId,MAHAjI,GAAE4nB,EAAImH,EAAKI,EAAKlnB,EAChBjI,EAAEwlB,EAAIwJ,EAAKnE,EAAK5iB,EAChBjI,EAAEkvB,EAAID,EAAKG,EAAK1vB,KAAK6mB,IAAIte,EAAG6nB,GACrB9vB,EAAI,IAMf,QAASgwB,GAAMjkB,EAAMzM,GAInB,MAHAA,GAAO6F,EAAMzK,KAAK4E,GAClBA,EAAK,GAAK,KACVA,EAAK2wB,QAAQ,MACN,SAASjwB,EAAGD,GAGjB,MAFAT,GAAK,GAAKU,EACVV,EAAK,GAAKS,EACHgM,EAAK5O,MAAM,KAAMmC,IAI5B,QAAS6G,GAAK4F,GACZ,MAA4B,KAArBhO,UAAUvC,OAAeuQ,EAAOikB,EAAMjkB,EAAMhO,WA1YrD,GAuFI+B,GAvFAirB,EAAM,8CACNE,EAAM,GAAI/jB,QAAO6jB,EAAInf,OAAQ,KA6D7Bib,GACF,SAAS7mB,EAAGD,GACV,GAAkBnF,GAAdqN,QAAWlI,EACf,QAAc,WAANkI,GAAmBrN,EAAIivB,EAAQqG,MAAMnwB,KAAOA,EAAInF,EAAG8C,GAAOgtB,EAC5D3qB,YAAa8pB,GAAQqG,MAAQxyB,EAC7BtC,MAAMC,QAAQ0E,GAAKwC,EACb,WAAN0F,GAAkBwd,MAAM1lB,GAAK4M,EAC7B8E,GAAQzR,EAAGD,KAgBjBssB,EAAU,IAAM3sB,KAAKywB,GACrBrK,GAAY9lB,EAAG,EAAGD,EAAG,EAAGnF,EAAG,EAAG4H,EAAG,EAAGmQ,EAAG,EAAGxJ,EAAG,GAsG7C8kB,EAAMvuB,KAAK0wB,MACX/B,EAAO,EACPD,EAAO,EACPJ,EAAW,MA6LX7oB,EAAQ/J,MAAM8G,UAAUiD,MAiBxBuf,EAAU,OAEd3qB,GAAQ2qB,QAAUA,EAClB3qB,EAAQs2B,YAAcxxB,EACtB9E,EAAQu2B,cAAgBzJ,EACxB9sB,EAAQw2B,iBAAmBhuB,EAC3BxI,EAAQy2B,kBAAoB/e,EAC5B1X,EAAQ02B,kBAAoB9jB,EAC5B5S,EAAQ22B,iBAAmB/wB,EAC3B5F,EAAQ42B,kBAAoBjG,EAC5B3wB,EAAQ62B,qBAAuBpF,EAC/BzxB,EAAQ82B,gBAAkBxD,EAC1BtzB,EAAQ+2B,eAAiBpzB,EACzB3D,EAAQg3B,eAAiBjC,EACzB/0B,EAAQi3B,mBAAqB3B,EAC7Bt1B,EAAQmD,eAAiBoyB,EACzBv1B,EAAQk3B,eAAiBxB,EACzB11B,EAAQm3B,mBAAqBtB,EAC7B71B,EAAQo3B,qBAAuBtB,EAC/B91B,EAAQq3B,yBAA2BrB,EACnCh2B,EAAQs3B,gBAAkBlrB,KAMvB,SAASnM,EAAQD,EAASM,IAE9B,SAAUyqB,EAAQhrB,GACTA,EAAQC,IAGhBI,KAAM,SAAUJ,GAAW,YAE3B,SAASu3B,MA0KT,QAASpB,GAAMqB,GACb,GAAI52B,EAEJ,OADA42B,IAAUA,EAAS,IAAI1pB,OAAOsI,eACtBxV,EAAI62B,EAAOrG,KAAKoG,KAAY52B,EAAIgX,SAAShX,EAAE,GAAI,IAAK,GAAI82B,GAAK92B,GAAK,EAAI,GAAQA,GAAK,EAAI,IAASA,GAAK,EAAI,GAAY,IAAJA,GAAiB,GAAJA,IAAY,EAAU,GAAJA,KACjJA,EAAI+2B,EAAOvG,KAAKoG,IAAWI,EAAKhgB,SAAShX,EAAE,GAAI,MAC/CA,EAAIi3B,EAAazG,KAAKoG,IAAW,GAAIE,GAAI92B,EAAE,GAAIA,EAAE,GAAIA,EAAE,KACvDA,EAAIk3B,EAAa1G,KAAKoG,IAAW,GAAIE,GAAW,IAAP92B,EAAE,GAAW,IAAY,IAAPA,EAAE,GAAW,IAAY,IAAPA,EAAE,GAAW,MAC1FA,EAAIm3B,EAAa3G,KAAKoG,IAAW,GAAIQ,GAAIp3B,EAAE,GAAIA,EAAE,GAAK,IAAKA,EAAE,GAAK,KACnEq3B,EAAM1Z,eAAeiZ,GAAUI,EAAKK,EAAMT,IAC1C,KAGR,QAASI,GAAK9vB,GACZ,MAAO,IAAI4vB,GAAI5vB,GAAK,GAAK,IAAMA,GAAK,EAAI,IAAU,IAAJA,GAGhD,QAASnE,GAAImC,EAAGC,EAAGC,GAYjB,MAXyB,KAArBhC,UAAUvC,SACNqE,YAAayxB,KAAQzxB,EAAIqwB,EAAMrwB,IACjCA,GACFA,EAAIA,EAAEnC,MACNqC,EAAIF,EAAEE,EACND,EAAID,EAAEC,EACND,EAAIA,EAAEA,GAENA,EAAIC,EAAIC,EAAIilB,KAGT,GAAIyM,GAAI5xB,EAAGC,EAAGC,GAGvB,QAAS0xB,GAAI5xB,EAAGC,EAAGC,GACjB5F,KAAK0F,GAAKA,EACV1F,KAAK2F,GAAKA,EACV3F,KAAK4F,GAAKA,EAmCZ,QAAS+uB,GAAIlH,EAAGpC,EAAG0J,GACjB,GAAyB,IAArBnxB,UAAUvC,OACZ,GAAIosB,YAAamK,GACf7C,EAAItH,EAAEsH,EACN1J,EAAIoC,EAAEpC,EACNoC,EAAIA,EAAEA,MAGN,IADMA,YAAa0J,KAAQ1J,EAAIsI,EAAMtI,IACjCA,EAAG,CACL,GAAIA,YAAamK,GAAK,MAAOnK,EAC7BA,GAAIA,EAAElqB,KACN,IAAImC,GAAI+nB,EAAE/nB,EAAI,IACVC,EAAI8nB,EAAE9nB,EAAI,IACVC,EAAI6nB,EAAE7nB,EAAI,IACVjD,EAAM4C,KAAK5C,IAAI+C,EAAGC,EAAGC,GACrBhD,EAAM2C,KAAK3C,IAAI8C,EAAGC,EAAGC,GACrBwL,EAAQxO,EAAMD,CAClBoyB,IAAKnyB,EAAMD,GAAO,EACdyO,GACFia,EAAQ,GAAJ0J,EAAU3jB,GAASxO,EAAMD,GAAOyO,GAAS,EAAIxO,EAAMD,GACxC8qB,EAAX/nB,IAAM9C,GAAU+C,EAAIC,GAAKwL,EAAkB,GAALxL,EAAJD,GAC7BA,IAAM/C,GAAUgD,EAAIF,GAAK0L,EAAQ,GAChC1L,EAAIC,GAAKyL,EAAQ,EAC3Bqc,GAAK,KAELA,EAAI5C,IACJQ,EAAI0J,EAAI,GAAS,EAAJA,EAAQ,EAAItH,OAG3BA,GAAIpC,EAAI0J,EAAIlK,GAIlB,OAAO,IAAI+M,GAAInK,EAAGpC,EAAG0J,GAGvB,QAAS6C,GAAInK,EAAGpC,EAAG0J,GACjB/0B,KAAKytB,GAAKA,EACVztB,KAAKqrB,GAAKA,EACVrrB,KAAK+0B,GAAKA,EAkCZ,QAAS+C,GAAQrK,EAAGsK,EAAIC,GACtB,MAGY,MAHA,GAAJvK,EAASsK,GAAMC,EAAKD,GAAMtK,EAAI,GAC5B,IAAJA,EAAUuK,EACN,IAAJvK,EAAUsK,GAAMC,EAAKD,IAAO,IAAMtK,GAAK,GACvCsK,GAcR,QAAS5C,GAAIJ,EAAGlvB,EAAGD,GACjB,GAAyB,IAArBhC,UAAUvC,OACZ,GAAI0zB,YAAakD,GACfryB,EAAImvB,EAAEnvB,EACNC,EAAIkvB,EAAElvB,EACNkvB,EAAIA,EAAEA,MACD,IAAIA,YAAamD,GAAK,CAC3B,GAAIzK,GAAIsH,EAAEtH,EAAI0K,CACdvyB,GAAIL,KAAK6yB,IAAI3K,GAAKsH,EAAEt0B,EACpBoF,EAAIN,KAAK8yB,IAAI5K,GAAKsH,EAAEt0B,EACpBs0B,EAAIA,EAAEA,MACD,CACCA,YAAauC,KAAMvC,EAAIxxB,EAAIwxB,GACjC,IAAIrvB,GAAI4yB,EAAQvD,EAAErvB,GACdC,EAAI2yB,EAAQvD,EAAEpvB,GACdC,EAAI0yB,EAAQvD,EAAEnvB,GACdolB,EAAIuN,GAAS,SAAY7yB,EAAI,SAAYC,EAAI,SAAYC,GAAK4yB,GAC9DC,EAAIF,GAAS,SAAY7yB,EAAI,SAAYC,EAAI,QAAYC,GAAK8yB,GAC9DC,EAAIJ,GAAS,SAAY7yB,EAAI,QAAYC,EAAI,SAAYC,GAAKgzB,EAClEhzB,GAAI,KAAO6yB,EAAIE,GACf9yB,EAAI,KAAOmlB,EAAIyN,GACf1D,EAAI,IAAM0D,EAAI,GAGlB,MAAO,IAAIR,GAAIlD,EAAGlvB,EAAGD,GAGvB,QAASqyB,GAAIlD,EAAGlvB,EAAGD,GACjB5F,KAAK+0B,GAAKA,EACV/0B,KAAK6F,GAAKA,EACV7F,KAAK4F,GAAKA,EA2BZ,QAAS2yB,GAAQzqB,GACf,MAAOA,GAAI+qB,EAAKtzB,KAAK6mB,IAAIte,EAAG,EAAI,GAAKA,EAAIgrB,EAAKC,EAGhD,QAASC,GAAQlrB,GACf,MAAOA,GAAImrB,EAAKnrB,EAAIA,EAAIA,EAAIgrB,GAAMhrB,EAAIirB,GAGxC,QAASG,GAAQlO,GACf,MAAO,MAAY,UAALA,EAAiB,MAAQA,EAAI,MAAQzlB,KAAK6mB,IAAIpB,EAAG,EAAI,KAAO,MAG5E,QAASsN,GAAQtN,GACf,OAAQA,GAAK,MAAQ,OAAUA,EAAI,MAAQzlB,KAAK6mB,KAAKpB,EAAI,MAAS,MAAO,KAG3E,QAASsK,GAAI7H,EAAGhtB,EAAGs0B,GAcjB,MAbyB,KAArBnxB,UAAUvC,SACRosB,YAAayK,IACfnD,EAAItH,EAAEsH,EACNt0B,EAAIgtB,EAAEhtB,EACNgtB,EAAIA,EAAEA,IAEAA,YAAawK,KAAMxK,EAAI0H,EAAI1H,IACjCsH,EAAItH,EAAEsH,EACNt0B,EAAI8E,KAAKkmB,KAAKgC,EAAE5nB,EAAI4nB,EAAE5nB,EAAI4nB,EAAE7nB,EAAI6nB,EAAE7nB,GAClC6nB,EAAIloB,KAAK0sB,MAAMxE,EAAE7nB,EAAG6nB,EAAE5nB,GAAKqsB,EACnB,EAAJzE,IAAOA,GAAK,OAGb,GAAIyK,GAAIzK,EAAGhtB,EAAGs0B,GAGvB,QAASmD,GAAIzK,EAAGhtB,EAAGs0B,GACjB/0B,KAAKytB,GAAKA,EACVztB,KAAKS,GAAKA,EACVT,KAAK+0B,GAAKA,EAyBZ,QAASW,GAAUjI,EAAGpC,EAAG0J,GACvB,GAAyB,IAArBnxB,UAAUvC,OACZ,GAAIosB,YAAa0L,GACfpE,EAAItH,EAAEsH,EACN1J,EAAIoC,EAAEpC,EACNoC,EAAIA,EAAEA,MACD,CACCA,YAAa6J,KAAM7J,EAAIlqB,EAAIkqB,GACjC,IAAI/nB,GAAI+nB,EAAE/nB,EAAI,IAAKC,EAAI8nB,EAAE9nB,EAAI,IAAKC,EAAI6nB,EAAE7nB,EAAI,GAC5CmvB,IAAKqE,EAAQxzB,EAAIyzB,EAAK3zB,EAAI4zB,EAAK3zB,IAAMyzB,EAAQC,EAAKC,EAClD,IAAIrE,GAAKrvB,EAAImvB,EAAG3E,GAAKmJ,GAAK5zB,EAAIovB,GAAKyE,EAAIvE,GAAMwE,CAC7CpO,GAAI9lB,KAAKkmB,KAAK2E,EAAIA,EAAI6E,EAAKA,IAAOsE,EAAIxE,GAAK,EAAIA,IAC/CtH,EAAIpC,EAAI9lB,KAAK0sB,MAAM7B,EAAG6E,GAAM/C,EAAU,IAAMrH,IACpC,EAAJ4C,IAAOA,GAAK,KAGpB,MAAO,IAAI0L,GAAU1L,EAAGpC,EAAG0J,GAG7B,QAASoE,GAAU1L,EAAGpC,EAAG0J,GACvB/0B,KAAKytB,GAAKA,EACVztB,KAAKqrB,GAAKA,EACVrrB,KAAK+0B,GAAKA,EApdZ,GAAI2E,GAAS,GACTC,EAAW,EAAID,EAEfrC,EAAS,mBACTE,EAAS,mBACTE,EAAe,8DACfC,EAAe,+FACfC,EAAe,8FACfE,GACF+B,UAAW,SACXC,aAAc,SACdC,KAAM,MACNC,WAAY,QACZC,MAAO,SACPC,MAAO,SACPC,OAAQ,SACRC,MAAO,EACPC,eAAgB,SAChBC,KAAM,IACNC,WAAY,QACZC,MAAO,SACPC,UAAW,SACXC,UAAW,QACXC,WAAY,QACZC,UAAW,SACXC,MAAO,SACPC,eAAgB,QAChBC,SAAU,SACVC,QAAS,SACTC,KAAM,MACNC,SAAU,IACVC,SAAU,MACVC,cAAe,SACfC,SAAU,SACVC,UAAW,MACXC,SAAU,SACVC,UAAW,SACXC,YAAa,QACbC,eAAgB,QAChBC,WAAY,SACZC,WAAY,SACZC,QAAS,QACTC,WAAY,SACZC,aAAc,QACdC,cAAe,QACfC,cAAe,QACfC,cAAe,QACfC,cAAe,MACfC,WAAY,QACZC,SAAU,SACVC,YAAa,MACbC,QAAS,QACTC,QAAS,QACTC,WAAY,QACZC,UAAW,SACXC,YAAa,SACbC,YAAa,QACbC,QAAS,SACTC,UAAW,SACXC,WAAY,SACZC,KAAM,SACNC,UAAW,SACXC,KAAM,QACNC,MAAO,MACPC,YAAa,SACbC,KAAM,QACNC,SAAU,SACVC,QAAS,SACTC,UAAW,SACXC,OAAQ,QACRC,MAAO,SACPC,MAAO,SACPC,SAAU,SACVC,cAAe,SACfC,UAAW,QACXC,aAAc,SACdC,UAAW,SACXC,WAAY,SACZC,UAAW,SACXC,qBAAsB,SACtBC,UAAW,SACXC,WAAY,QACZC,UAAW,SACXC,UAAW,SACXC,YAAa,SACbC,cAAe,QACfC,aAAc,QACdC,eAAgB,QAChBC,eAAgB,QAChBC,eAAgB,SAChBC,YAAa,SACbC,KAAM,MACNC,UAAW,QACXC,MAAO,SACPC,QAAS,SACTC,OAAQ,QACRC,iBAAkB,QAClBC,WAAY,IACZC,aAAc,SACdC,aAAc,QACdC,eAAgB,QAChBC,gBAAiB,QACjBC,kBAAmB,MACnBC,gBAAiB,QACjBC,gBAAiB,SACjBC,aAAc,QACdC,UAAW,SACXC,UAAW,SACXC,SAAU,SACVC,YAAa,SACbC,KAAM,IACNC,QAAS,SACTC,MAAO,QACPC,UAAW,QACXC,OAAQ,SACRC,UAAW,SACXC,OAAQ,SACRC,cAAe,SACfC,UAAW,SACXC,cAAe,SACfC,cAAe,SACfC,WAAY,SACZC,UAAW,SACXC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,WAAY,SACZC,OAAQ,QACRC,cAAe,QACfC,IAAK,SACLC,UAAW,SACXC,UAAW,QACXC,YAAa,QACbC,OAAQ,SACRC,WAAY,SACZC,SAAU,QACVC,SAAU,SACVC,OAAQ,SACRC,OAAQ,SACRC,QAAS,QACTC,UAAW,QACXC,UAAW,QACXC,UAAW,QACXC,KAAM,SACNC,YAAa,MACbC,UAAW,QACXC,IAAK,SACLC,KAAM,MACNC,QAAS,SACTC,OAAQ,SACRC,UAAW,QACXC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,WAAY,SACZC,OAAQ,SACRC,YAAa,SAGfhN,GAAMhuB,UAAYovB,EAAMpvB,WACtBi7B,YAAa,WACX,MAAOhjC,MAAKuD,MAAMy/B,eAEpBh7B,SAAU,WACR,MAAOhI,MAAKuD,MAAQ,IAyCxB,IAAI0/B,GAAO1/B,EAAIwE,UAAYuvB,EAAIvvB,UAAY,GAAIovB,EAE/C8L,GAAKtJ,SAAW,SAASvJ,GAEvB,MADAA,GAAS,MAALA,EAAYuJ,EAAWp0B,KAAK6mB,IAAIuN,EAAUvJ,GACvC,GAAIkH,GAAIt3B,KAAK0F,EAAI0qB,EAAGpwB,KAAK2F,EAAIyqB,EAAGpwB,KAAK4F,EAAIwqB,IAGlD6S,EAAKvJ,OAAS,SAAStJ,GAErB,MADAA,GAAS,MAALA,EAAYsJ,EAASn0B,KAAK6mB,IAAIsN,EAAQtJ,GACnC,GAAIkH,GAAIt3B,KAAK0F,EAAI0qB,EAAGpwB,KAAK2F,EAAIyqB,EAAGpwB,KAAK4F,EAAIwqB,IAGlD6S,EAAK1/B,IAAM,WACT,MAAOvD,OAGTijC,EAAKD,YAAc,WACjB,MAAQ,IAAKhjC,KAAK0F,GAAK1F,KAAK0F,GAAK,KACzB,GAAK1F,KAAK2F,GAAK3F,KAAK2F,GAAK,KACzB,GAAK3F,KAAK4F,GAAK5F,KAAK4F,GAAK,KAGnCq9B,EAAKj7B,SAAW,WACd,GAAItC,GAAIH,KAAKC,MAAMxF,KAAK0F,GACpBC,EAAIJ,KAAKC,MAAMxF,KAAK2F,GACpBC,EAAIL,KAAKC,MAAMxF,KAAK4F,EACxB,OAAO,KACA0lB,MAAM5lB,IAAW,GAALA,EAAS,KAAW,GAAJA,EAAS,IAAMA,EAAEsC,SAAS,IAAMtC,GAAK,IAAM,KAAOA,EAAEsC,SAAS,MACzFsjB,MAAM3lB,IAAW,GAALA,EAAS,KAAW,GAAJA,EAAS,IAAMA,EAAEqC,SAAS,IAAMrC,GAAK,IAAM,KAAOA,EAAEqC,SAAS,MACzFsjB,MAAM1lB,IAAW,GAALA,EAAS,KAAW,GAAJA,EAAS,IAAMA,EAAEoC,SAAS,IAAMpC,GAAK,IAAM,KAAOA,EAAEoC,SAAS,KA6ClG,IAAIk7B,GAAOvO,EAAI5sB,UAAY6vB,EAAI7vB,UAAY,GAAIovB,EAE/C+L,GAAKvJ,SAAW,SAASvJ,GAEvB,MADAA,GAAS,MAALA,EAAYuJ,EAAWp0B,KAAK6mB,IAAIuN,EAAUvJ,GACvC,GAAIwH,GAAI53B,KAAKytB,EAAGztB,KAAKqrB,EAAGrrB,KAAK+0B,EAAI3E,IAG1C8S,EAAKxJ,OAAS,SAAStJ,GAErB,MADAA,GAAS,MAALA,EAAYsJ,EAASn0B,KAAK6mB,IAAIsN,EAAQtJ,GACnC,GAAIwH,GAAI53B,KAAKytB,EAAGztB,KAAKqrB,EAAGrrB,KAAK+0B,EAAI3E,IAG1C8S,EAAK3/B,IAAM,WACT,GAAIkqB,GAAIztB,KAAKytB,EAAI,IAAqB,KAAdztB,KAAKytB,EAAI,GAC7BpC,EAAIC,MAAMmC,IAAMnC,MAAMtrB,KAAKqrB,GAAK,EAAIrrB,KAAKqrB,EACzC0J,EAAI/0B,KAAK+0B,EACTiD,EAAKjD,GAAS,GAAJA,EAAUA,EAAI,EAAIA,GAAK1J,EACjC0M,EAAK,EAAIhD,EAAIiD,CACjB,OAAO,IAAIV,GACTQ,EAAQrK,GAAK,IAAMA,EAAI,IAAMA,EAAI,IAAKsK,EAAIC,GAC1CF,EAAQrK,EAAGsK,EAAIC,GACfF,EAAY,IAAJrK,EAAUA,EAAI,IAAMA,EAAI,IAAKsK,EAAIC,KAI7CkL,EAAKF,YAAc,WACjB,OAAQ,GAAKhjC,KAAKqrB,GAAKrrB,KAAKqrB,GAAK,GAAKC,MAAMtrB,KAAKqrB,KACzC,GAAKrrB,KAAK+0B,GAAK/0B,KAAK+0B,GAAK,EAWnC,IAAIoD,GAAU5yB,KAAKywB,GAAK,IACpB9D,EAAU,IAAM3sB,KAAKywB,GAErBmN,EAAK,GACL3K,EAAK,OACLE,EAAK,EACLE,EAAK,QACLG,EAAK,EAAI,GACTE,EAAK,EAAI,GACTH,EAAK,EAAIG,EAAKA,EACdJ,EAAKI,EAAKA,EAAKA,EAkCfmK,EAAOjO,EAAIptB,UAAYkwB,EAAIlwB,UAAY,GAAIovB,EAE/CiM,GAAKzJ,SAAW,SAASvJ,GACvB,MAAO,IAAI6H,GAAIj4B,KAAK+0B,EAAIoO,GAAW,MAAL/S,EAAY,EAAIA,GAAIpwB,KAAK6F,EAAG7F,KAAK4F,IAGjEw9B,EAAK1J,OAAS,SAAStJ,GACrB,MAAO,IAAI6H,GAAIj4B,KAAK+0B,EAAIoO,GAAW,MAAL/S,EAAY,EAAIA,GAAIpwB,KAAK6F,EAAG7F,KAAK4F,IAGjEw9B,EAAK7/B,IAAM,WACT,GAAIk1B,IAAKz4B,KAAK+0B,EAAI,IAAM,IACpB/J,EAAIM,MAAMtrB,KAAK6F,GAAK4yB,EAAIA,EAAIz4B,KAAK6F,EAAI,IACrC8yB,EAAIrN,MAAMtrB,KAAK4F,GAAK6yB,EAAIA,EAAIz4B,KAAK4F,EAAI,GAIzC,OAHA6yB,GAAIC,EAAKM,EAAQP,GACjBzN,EAAIwN,EAAKQ,EAAQhO,GACjB2N,EAAIC,EAAKI,EAAQL,GACV,GAAIrB,GACT4B,EAAS,UAAYlO,EAAI,UAAYyN,EAAI,SAAYE,GACrDO,GAAS,QAAYlO,EAAI,UAAYyN,EAAI,QAAYE,GACrDO,EAAS,SAAYlO,EAAI,SAAYyN,EAAI,UAAYE,IA2CzD,IAAI0K,GAAO/N,EAAIvtB,UAAYmwB,EAAInwB,UAAY,GAAIovB,EAE/CkM,GAAK1J,SAAW,SAASvJ,GACvB,MAAO,IAAI8H,GAAIl4B,KAAKytB,EAAGztB,KAAKS,EAAGT,KAAK+0B,EAAIoO,GAAW,MAAL/S,EAAY,EAAIA,KAGhEiT,EAAK3J,OAAS,SAAStJ,GACrB,MAAO,IAAI8H,GAAIl4B,KAAKytB,EAAGztB,KAAKS,EAAGT,KAAK+0B,EAAIoO,GAAW,MAAL/S,EAAY,EAAIA,KAGhEiT,EAAK9/B,IAAM,WACT,MAAO4xB,GAAIn1B,MAAMuD,MAGnB,IAAI+/B,IAAK,OACLC,EAAI,QACJ/J,GAAK,OACLC,GAAK,OACLF,EAAI,QACJF,EAAKE,EAAIE,EACTH,EAAKC,EAAIgK,EACTnK,EAAQmK,EAAI/J,EAAIC,EAAI6J,EA0BpBE,EAAa9N,EAAU3tB,UAAYoxB,EAAUpxB,UAAY,GAAIovB,EAEjEqM,GAAW7J,SAAW,SAASvJ,GAE7B,MADAA,GAAS,MAALA,EAAYuJ,EAAWp0B,KAAK6mB,IAAIuN,EAAUvJ,GACvC,GAAI+I,GAAUn5B,KAAKytB,EAAGztB,KAAKqrB,EAAGrrB,KAAK+0B,EAAI3E,IAGhDoT,EAAW9J,OAAS,SAAStJ,GAE3B,MADAA,GAAS,MAALA,EAAYsJ,EAASn0B,KAAK6mB,IAAIsN,EAAQtJ,GACnC,GAAI+I,GAAUn5B,KAAKytB,EAAGztB,KAAKqrB,EAAGrrB,KAAK+0B,EAAI3E,IAGhDoT,EAAWjgC,IAAM,WACf,GAAIkqB,GAAInC,MAAMtrB,KAAKytB,GAAK,GAAKztB,KAAKytB,EAAI,KAAO0K,EACzCpD,GAAK/0B,KAAK+0B,EACVlvB,EAAIylB,MAAMtrB,KAAKqrB,GAAK,EAAIrrB,KAAKqrB,EAAI0J,GAAK,EAAIA,GAC1CjC,EAAOvtB,KAAK8yB,IAAI5K,GAChBuF,EAAOztB,KAAK6yB,IAAI3K,EACpB,OAAO,IAAI6J,GACT,KAAOvC,EAAIlvB,GAAKy9B,EAAIxQ,EAAOyQ,EAAIvQ,IAC/B,KAAO+B,EAAIlvB,GAAK2zB,EAAI1G,EAAO2G,EAAIzG,IAC/B,KAAO+B,EAAIlvB,GAAK0zB,EAAIzG,KAIxB,IAAIvI,GAAU,OAEd3qB,GAAQ2qB,QAAUA,EAClB3qB,EAAQm2B,MAAQA,EAChBn2B,EAAQ2D,IAAMA,EACd3D,EAAQ+0B,IAAMA,EACd/0B,EAAQu1B,IAAMA,EACdv1B,EAAQ01B,IAAMA,EACd11B,EAAQ81B,UAAYA","file":"ndarray-heatmap.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"heatmap\"] = factory();\n\telse\n\t\troot[\"heatmap\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.heatmap = undefined;\n\t\n\tvar _ndarray = __webpack_require__(1);\n\t\n\tvar _ndarray2 = _interopRequireDefault(_ndarray);\n\t\n\tvar _ndarrayPack = __webpack_require__(4);\n\t\n\tvar _ndarrayPack2 = _interopRequireDefault(_ndarrayPack);\n\t\n\tvar _cwise = __webpack_require__(10);\n\t\n\tvar _cwise2 = _interopRequireDefault(_cwise);\n\t\n\tvar _d3Array = __webpack_require__(13);\n\t\n\tvar _d3Interpolate = __webpack_require__(14);\n\t\n\tvar _d3Color = __webpack_require__(15);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tvar renderToCanvas = (0, _cwise2.default)({\n\t  args: ['index', 'array', 'scalar', 'scalar', 'scalar', 'scalar', 'scalar'],\n\t  body: function body(i, value, imgArray, colors, min, max, imgWidth) {\n\t    var colorIndex = Math.round((value - min) / (max - min) * (colors.length - 1));\n\t    var _colors$colorIndex = colors[colorIndex];\n\t    var r = _colors$colorIndex.r;\n\t    var g = _colors$colorIndex.g;\n\t    var b = _colors$colorIndex.b;\n\t    var a = _colors$colorIndex.a;\n\t\n\t    var base = (i[1] * imgWidth + i[0]) * 4;\n\t    imgArray[base] = r;\n\t    imgArray[++base] = g;\n\t    imgArray[++base] = b;\n\t    imgArray[++base] = a || 255;\n\t  }\n\t});\n\t\n\tfunction heatmap() {\n\t  var data = (0, _ndarray2.default)(new Float64Array([0]), [1, 1]);\n\t  var colorSteps = 256;\n\t  var colorRange = ['#000000', '#FFFFFF'];\n\t\n\t  function render(_) {\n\t    var canvas = _ || document.createElement('canvas');\n\t    canvas.width = data.shape[1];\n\t    canvas.height = data.shape[0];\n\t\n\t    var ctx = canvas.getContext('2d');\n\t    var imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\t    var imgArray = imgData.data;\n\t\n\t    var _extent = (0, _d3Array.extent)(data.data);\n\t\n\t    var _extent2 = _slicedToArray(_extent, 2);\n\t\n\t    var min = _extent2[0];\n\t    var max = _extent2[1];\n\t\n\t    var colorScale = _d3Interpolate.interpolateLab.apply(undefined, _toConsumableArray(colorRange));\n\t    var colors = [];\n\t    for (var i = 0; i < colorSteps; ++i) {\n\t      colors.push((0, _d3Color.rgb)(colorScale(i / (colorSteps - 1))));\n\t    }\n\t    renderToCanvas(data, imgArray, colors, min, max, canvas.width);\n\t    ctx.putImageData(imgData, 0, 0);\n\t\n\t    return canvas;\n\t  }\n\t\n\t  render.data = function (_) {\n\t    if (!arguments.length) return data;\n\t\n\t    // Convert plain JS array into ndarray\n\t    _ = _.shape ? _ : (0, _ndarrayPack2.default)(_);\n\t\n\t    if (_.shape.length !== 2) throw new Error('Invalid rank: ' + _.shape.length);\n\t    data = _;\n\t    return render;\n\t  };\n\t\n\t  render.colorSteps = function (_) {\n\t    return arguments.length ? (colorSteps = _, render) : colorSteps;\n\t  };\n\t\n\t  render.colorRange = function (_) {\n\t    return arguments.length ? (colorRange = _, render) : colorRange;\n\t  };\n\t\n\t  return render;\n\t}\n\t\n\texports.heatmap = heatmap;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar iota = __webpack_require__(2)\n\tvar isBuffer = __webpack_require__(3)\n\t\n\tvar hasTypedArrays  = ((typeof Float64Array) !== \"undefined\")\n\t\n\tfunction compare1st(a, b) {\n\t  return a[0] - b[0]\n\t}\n\t\n\tfunction order() {\n\t  var stride = this.stride\n\t  var terms = new Array(stride.length)\n\t  var i\n\t  for(i=0; i<terms.length; ++i) {\n\t    terms[i] = [Math.abs(stride[i]), i]\n\t  }\n\t  terms.sort(compare1st)\n\t  var result = new Array(terms.length)\n\t  for(i=0; i<result.length; ++i) {\n\t    result[i] = terms[i][1]\n\t  }\n\t  return result\n\t}\n\t\n\tfunction compileConstructor(dtype, dimension) {\n\t  var className = [\"View\", dimension, \"d\", dtype].join(\"\")\n\t  if(dimension < 0) {\n\t    className = \"View_Nil\" + dtype\n\t  }\n\t  var useGetters = (dtype === \"generic\")\n\t\n\t  if(dimension === -1) {\n\t    //Special case for trivial arrays\n\t    var code =\n\t      \"function \"+className+\"(a){this.data=a;};\\\n\tvar proto=\"+className+\".prototype;\\\n\tproto.dtype='\"+dtype+\"';\\\n\tproto.index=function(){return -1};\\\n\tproto.size=0;\\\n\tproto.dimension=-1;\\\n\tproto.shape=proto.stride=proto.order=[];\\\n\tproto.lo=proto.hi=proto.transpose=proto.step=\\\n\tfunction(){return new \"+className+\"(this.data);};\\\n\tproto.get=proto.set=function(){};\\\n\tproto.pick=function(){return null};\\\n\treturn function construct_\"+className+\"(a){return new \"+className+\"(a);}\"\n\t    var procedure = new Function(code)\n\t    return procedure()\n\t  } else if(dimension === 0) {\n\t    //Special case for 0d arrays\n\t    var code =\n\t      \"function \"+className+\"(a,d) {\\\n\tthis.data = a;\\\n\tthis.offset = d\\\n\t};\\\n\tvar proto=\"+className+\".prototype;\\\n\tproto.dtype='\"+dtype+\"';\\\n\tproto.index=function(){return this.offset};\\\n\tproto.dimension=0;\\\n\tproto.size=1;\\\n\tproto.shape=\\\n\tproto.stride=\\\n\tproto.order=[];\\\n\tproto.lo=\\\n\tproto.hi=\\\n\tproto.transpose=\\\n\tproto.step=function \"+className+\"_copy() {\\\n\treturn new \"+className+\"(this.data,this.offset)\\\n\t};\\\n\tproto.pick=function \"+className+\"_pick(){\\\n\treturn TrivialArray(this.data);\\\n\t};\\\n\tproto.valueOf=proto.get=function \"+className+\"_get(){\\\n\treturn \"+(useGetters ? \"this.data.get(this.offset)\" : \"this.data[this.offset]\")+\n\t\"};\\\n\tproto.set=function \"+className+\"_set(v){\\\n\treturn \"+(useGetters ? \"this.data.set(this.offset,v)\" : \"this.data[this.offset]=v\")+\"\\\n\t};\\\n\treturn function construct_\"+className+\"(a,b,c,d){return new \"+className+\"(a,d)}\"\n\t    var procedure = new Function(\"TrivialArray\", code)\n\t    return procedure(CACHED_CONSTRUCTORS[dtype][0])\n\t  }\n\t\n\t  var code = [\"'use strict'\"]\n\t\n\t  //Create constructor for view\n\t  var indices = iota(dimension)\n\t  var args = indices.map(function(i) { return \"i\"+i })\n\t  var index_str = \"this.offset+\" + indices.map(function(i) {\n\t        return \"this.stride[\" + i + \"]*i\" + i\n\t      }).join(\"+\")\n\t  var shapeArg = indices.map(function(i) {\n\t      return \"b\"+i\n\t    }).join(\",\")\n\t  var strideArg = indices.map(function(i) {\n\t      return \"c\"+i\n\t    }).join(\",\")\n\t  code.push(\n\t    \"function \"+className+\"(a,\" + shapeArg + \",\" + strideArg + \",d){this.data=a\",\n\t      \"this.shape=[\" + shapeArg + \"]\",\n\t      \"this.stride=[\" + strideArg + \"]\",\n\t      \"this.offset=d|0}\",\n\t    \"var proto=\"+className+\".prototype\",\n\t    \"proto.dtype='\"+dtype+\"'\",\n\t    \"proto.dimension=\"+dimension)\n\t\n\t  //view.size:\n\t  code.push(\"Object.defineProperty(proto,'size',{get:function \"+className+\"_size(){\\\n\treturn \"+indices.map(function(i) { return \"this.shape[\"+i+\"]\" }).join(\"*\"),\n\t\"}})\")\n\t\n\t  //view.order:\n\t  if(dimension === 1) {\n\t    code.push(\"proto.order=[0]\")\n\t  } else {\n\t    code.push(\"Object.defineProperty(proto,'order',{get:\")\n\t    if(dimension < 4) {\n\t      code.push(\"function \"+className+\"_order(){\")\n\t      if(dimension === 2) {\n\t        code.push(\"return (Math.abs(this.stride[0])>Math.abs(this.stride[1]))?[1,0]:[0,1]}})\")\n\t      } else if(dimension === 3) {\n\t        code.push(\n\t\"var s0=Math.abs(this.stride[0]),s1=Math.abs(this.stride[1]),s2=Math.abs(this.stride[2]);\\\n\tif(s0>s1){\\\n\tif(s1>s2){\\\n\treturn [2,1,0];\\\n\t}else if(s0>s2){\\\n\treturn [1,2,0];\\\n\t}else{\\\n\treturn [1,0,2];\\\n\t}\\\n\t}else if(s0>s2){\\\n\treturn [2,0,1];\\\n\t}else if(s2>s1){\\\n\treturn [0,1,2];\\\n\t}else{\\\n\treturn [0,2,1];\\\n\t}}})\")\n\t      }\n\t    } else {\n\t      code.push(\"ORDER})\")\n\t    }\n\t  }\n\t\n\t  //view.set(i0, ..., v):\n\t  code.push(\n\t\"proto.set=function \"+className+\"_set(\"+args.join(\",\")+\",v){\")\n\t  if(useGetters) {\n\t    code.push(\"return this.data.set(\"+index_str+\",v)}\")\n\t  } else {\n\t    code.push(\"return this.data[\"+index_str+\"]=v}\")\n\t  }\n\t\n\t  //view.get(i0, ...):\n\t  code.push(\"proto.get=function \"+className+\"_get(\"+args.join(\",\")+\"){\")\n\t  if(useGetters) {\n\t    code.push(\"return this.data.get(\"+index_str+\")}\")\n\t  } else {\n\t    code.push(\"return this.data[\"+index_str+\"]}\")\n\t  }\n\t\n\t  //view.index:\n\t  code.push(\n\t    \"proto.index=function \"+className+\"_index(\", args.join(), \"){return \"+index_str+\"}\")\n\t\n\t  //view.hi():\n\t  code.push(\"proto.hi=function \"+className+\"_hi(\"+args.join(\",\")+\"){return new \"+className+\"(this.data,\"+\n\t    indices.map(function(i) {\n\t      return [\"(typeof i\",i,\"!=='number'||i\",i,\"<0)?this.shape[\", i, \"]:i\", i,\"|0\"].join(\"\")\n\t    }).join(\",\")+\",\"+\n\t    indices.map(function(i) {\n\t      return \"this.stride[\"+i + \"]\"\n\t    }).join(\",\")+\",this.offset)}\")\n\t\n\t  //view.lo():\n\t  var a_vars = indices.map(function(i) { return \"a\"+i+\"=this.shape[\"+i+\"]\" })\n\t  var c_vars = indices.map(function(i) { return \"c\"+i+\"=this.stride[\"+i+\"]\" })\n\t  code.push(\"proto.lo=function \"+className+\"_lo(\"+args.join(\",\")+\"){var b=this.offset,d=0,\"+a_vars.join(\",\")+\",\"+c_vars.join(\",\"))\n\t  for(var i=0; i<dimension; ++i) {\n\t    code.push(\n\t\"if(typeof i\"+i+\"==='number'&&i\"+i+\">=0){\\\n\td=i\"+i+\"|0;\\\n\tb+=c\"+i+\"*d;\\\n\ta\"+i+\"-=d}\")\n\t  }\n\t  code.push(\"return new \"+className+\"(this.data,\"+\n\t    indices.map(function(i) {\n\t      return \"a\"+i\n\t    }).join(\",\")+\",\"+\n\t    indices.map(function(i) {\n\t      return \"c\"+i\n\t    }).join(\",\")+\",b)}\")\n\t\n\t  //view.step():\n\t  code.push(\"proto.step=function \"+className+\"_step(\"+args.join(\",\")+\"){var \"+\n\t    indices.map(function(i) {\n\t      return \"a\"+i+\"=this.shape[\"+i+\"]\"\n\t    }).join(\",\")+\",\"+\n\t    indices.map(function(i) {\n\t      return \"b\"+i+\"=this.stride[\"+i+\"]\"\n\t    }).join(\",\")+\",c=this.offset,d=0,ceil=Math.ceil\")\n\t  for(var i=0; i<dimension; ++i) {\n\t    code.push(\n\t\"if(typeof i\"+i+\"==='number'){\\\n\td=i\"+i+\"|0;\\\n\tif(d<0){\\\n\tc+=b\"+i+\"*(a\"+i+\"-1);\\\n\ta\"+i+\"=ceil(-a\"+i+\"/d)\\\n\t}else{\\\n\ta\"+i+\"=ceil(a\"+i+\"/d)\\\n\t}\\\n\tb\"+i+\"*=d\\\n\t}\")\n\t  }\n\t  code.push(\"return new \"+className+\"(this.data,\"+\n\t    indices.map(function(i) {\n\t      return \"a\" + i\n\t    }).join(\",\")+\",\"+\n\t    indices.map(function(i) {\n\t      return \"b\" + i\n\t    }).join(\",\")+\",c)}\")\n\t\n\t  //view.transpose():\n\t  var tShape = new Array(dimension)\n\t  var tStride = new Array(dimension)\n\t  for(var i=0; i<dimension; ++i) {\n\t    tShape[i] = \"a[i\"+i+\"]\"\n\t    tStride[i] = \"b[i\"+i+\"]\"\n\t  }\n\t  code.push(\"proto.transpose=function \"+className+\"_transpose(\"+args+\"){\"+\n\t    args.map(function(n,idx) { return n + \"=(\" + n + \"===undefined?\" + idx + \":\" + n + \"|0)\"}).join(\";\"),\n\t    \"var a=this.shape,b=this.stride;return new \"+className+\"(this.data,\"+tShape.join(\",\")+\",\"+tStride.join(\",\")+\",this.offset)}\")\n\t\n\t  //view.pick():\n\t  code.push(\"proto.pick=function \"+className+\"_pick(\"+args+\"){var a=[],b=[],c=this.offset\")\n\t  for(var i=0; i<dimension; ++i) {\n\t    code.push(\"if(typeof i\"+i+\"==='number'&&i\"+i+\">=0){c=(c+this.stride[\"+i+\"]*i\"+i+\")|0}else{a.push(this.shape[\"+i+\"]);b.push(this.stride[\"+i+\"])}\")\n\t  }\n\t  code.push(\"var ctor=CTOR_LIST[a.length+1];return ctor(this.data,a,b,c)}\")\n\t\n\t  //Add return statement\n\t  code.push(\"return function construct_\"+className+\"(data,shape,stride,offset){return new \"+className+\"(data,\"+\n\t    indices.map(function(i) {\n\t      return \"shape[\"+i+\"]\"\n\t    }).join(\",\")+\",\"+\n\t    indices.map(function(i) {\n\t      return \"stride[\"+i+\"]\"\n\t    }).join(\",\")+\",offset)}\")\n\t\n\t  //Compile procedure\n\t  var procedure = new Function(\"CTOR_LIST\", \"ORDER\", code.join(\"\\n\"))\n\t  return procedure(CACHED_CONSTRUCTORS[dtype], order)\n\t}\n\t\n\tfunction arrayDType(data) {\n\t  if(isBuffer(data)) {\n\t    return \"buffer\"\n\t  }\n\t  if(hasTypedArrays) {\n\t    switch(Object.prototype.toString.call(data)) {\n\t      case \"[object Float64Array]\":\n\t        return \"float64\"\n\t      case \"[object Float32Array]\":\n\t        return \"float32\"\n\t      case \"[object Int8Array]\":\n\t        return \"int8\"\n\t      case \"[object Int16Array]\":\n\t        return \"int16\"\n\t      case \"[object Int32Array]\":\n\t        return \"int32\"\n\t      case \"[object Uint8Array]\":\n\t        return \"uint8\"\n\t      case \"[object Uint16Array]\":\n\t        return \"uint16\"\n\t      case \"[object Uint32Array]\":\n\t        return \"uint32\"\n\t      case \"[object Uint8ClampedArray]\":\n\t        return \"uint8_clamped\"\n\t    }\n\t  }\n\t  if(Array.isArray(data)) {\n\t    return \"array\"\n\t  }\n\t  return \"generic\"\n\t}\n\t\n\tvar CACHED_CONSTRUCTORS = {\n\t  \"float32\":[],\n\t  \"float64\":[],\n\t  \"int8\":[],\n\t  \"int16\":[],\n\t  \"int32\":[],\n\t  \"uint8\":[],\n\t  \"uint16\":[],\n\t  \"uint32\":[],\n\t  \"array\":[],\n\t  \"uint8_clamped\":[],\n\t  \"buffer\":[],\n\t  \"generic\":[]\n\t}\n\t\n\t;(function() {\n\t  for(var id in CACHED_CONSTRUCTORS) {\n\t    CACHED_CONSTRUCTORS[id].push(compileConstructor(id, -1))\n\t  }\n\t});\n\t\n\tfunction wrappedNDArrayCtor(data, shape, stride, offset) {\n\t  if(data === undefined) {\n\t    var ctor = CACHED_CONSTRUCTORS.array[0]\n\t    return ctor([])\n\t  } else if(typeof data === \"number\") {\n\t    data = [data]\n\t  }\n\t  if(shape === undefined) {\n\t    shape = [ data.length ]\n\t  }\n\t  var d = shape.length\n\t  if(stride === undefined) {\n\t    stride = new Array(d)\n\t    for(var i=d-1, sz=1; i>=0; --i) {\n\t      stride[i] = sz\n\t      sz *= shape[i]\n\t    }\n\t  }\n\t  if(offset === undefined) {\n\t    offset = 0\n\t    for(var i=0; i<d; ++i) {\n\t      if(stride[i] < 0) {\n\t        offset -= (shape[i]-1)*stride[i]\n\t      }\n\t    }\n\t  }\n\t  var dtype = arrayDType(data)\n\t  var ctor_list = CACHED_CONSTRUCTORS[dtype]\n\t  while(ctor_list.length <= d+1) {\n\t    ctor_list.push(compileConstructor(dtype, ctor_list.length-1))\n\t  }\n\t  var ctor = ctor_list[d+1]\n\t  return ctor(data, shape, stride, offset)\n\t}\n\t\n\tmodule.exports = wrappedNDArrayCtor\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\"\n\t\n\tfunction iota(n) {\n\t  var result = new Array(n)\n\t  for(var i=0; i<n; ++i) {\n\t    result[i] = i\n\t  }\n\t  return result\n\t}\n\t\n\tmodule.exports = iota\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Determine if an object is Buffer\n\t *\n\t * Author:   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n\t * License:  MIT\n\t *\n\t * `npm install is-buffer`\n\t */\n\t\n\tmodule.exports = function (obj) {\n\t  return !!(obj != null &&\n\t    (obj._isBuffer || // For Safari 5-7 (missing Object.prototype.constructor)\n\t      (obj.constructor &&\n\t      typeof obj.constructor.isBuffer === 'function' &&\n\t      obj.constructor.isBuffer(obj))\n\t    ))\n\t}\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\"\n\t\n\tvar ndarray = __webpack_require__(1)\n\tvar do_convert = __webpack_require__(5)\n\t\n\tmodule.exports = function convert(arr, result) {\n\t  var shape = [], c = arr, sz = 1\n\t  while(c instanceof Array) {\n\t    shape.push(c.length)\n\t    sz *= c.length\n\t    c = c[0]\n\t  }\n\t  if(shape.length === 0) {\n\t    return ndarray()\n\t  }\n\t  if(!result) {\n\t    result = ndarray(new Float64Array(sz), shape)\n\t  }\n\t  do_convert(result, arr)\n\t  return result\n\t}\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports=__webpack_require__(6)({\"args\":[\"array\",\"scalar\",\"index\"],\"pre\":{\"body\":\"{}\",\"args\":[],\"thisVars\":[],\"localVars\":[]},\"body\":{\"body\":\"{\\nvar _inline_1_v=_inline_1_arg1_,_inline_1_i\\nfor(_inline_1_i=0;_inline_1_i<_inline_1_arg2_.length-1;++_inline_1_i) {\\n_inline_1_v=_inline_1_v[_inline_1_arg2_[_inline_1_i]]\\n}\\n_inline_1_arg0_=_inline_1_v[_inline_1_arg2_[_inline_1_arg2_.length-1]]\\n}\",\"args\":[{\"name\":\"_inline_1_arg0_\",\"lvalue\":true,\"rvalue\":false,\"count\":1},{\"name\":\"_inline_1_arg1_\",\"lvalue\":false,\"rvalue\":true,\"count\":1},{\"name\":\"_inline_1_arg2_\",\"lvalue\":false,\"rvalue\":true,\"count\":4}],\"thisVars\":[],\"localVars\":[\"_inline_1_i\",\"_inline_1_v\"]},\"post\":{\"body\":\"{}\",\"args\":[],\"thisVars\":[],\"localVars\":[]},\"funcName\":\"convert\",\"blockSize\":64})\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\"\r\n\t\r\n\tvar createThunk = __webpack_require__(7)\r\n\t\r\n\tfunction Procedure() {\r\n\t  this.argTypes = []\r\n\t  this.shimArgs = []\r\n\t  this.arrayArgs = []\r\n\t  this.arrayBlockIndices = []\r\n\t  this.scalarArgs = []\r\n\t  this.offsetArgs = []\r\n\t  this.offsetArgIndex = []\r\n\t  this.indexArgs = []\r\n\t  this.shapeArgs = []\r\n\t  this.funcName = \"\"\r\n\t  this.pre = null\r\n\t  this.body = null\r\n\t  this.post = null\r\n\t  this.debug = false\r\n\t}\r\n\t\r\n\tfunction compileCwise(user_args) {\r\n\t  //Create procedure\r\n\t  var proc = new Procedure()\r\n\t  \r\n\t  //Parse blocks\r\n\t  proc.pre    = user_args.pre\r\n\t  proc.body   = user_args.body\r\n\t  proc.post   = user_args.post\r\n\t\r\n\t  //Parse arguments\r\n\t  var proc_args = user_args.args.slice(0)\r\n\t  proc.argTypes = proc_args\r\n\t  for(var i=0; i<proc_args.length; ++i) {\r\n\t    var arg_type = proc_args[i]\r\n\t    if(arg_type === \"array\" || (typeof arg_type === \"object\" && arg_type.blockIndices)) {\r\n\t      proc.argTypes[i] = \"array\"\r\n\t      proc.arrayArgs.push(i)\r\n\t      proc.arrayBlockIndices.push(arg_type.blockIndices ? arg_type.blockIndices : 0)\r\n\t      proc.shimArgs.push(\"array\" + i)\r\n\t      if(i < proc.pre.args.length && proc.pre.args[i].count>0) {\r\n\t        throw new Error(\"cwise: pre() block may not reference array args\")\r\n\t      }\r\n\t      if(i < proc.post.args.length && proc.post.args[i].count>0) {\r\n\t        throw new Error(\"cwise: post() block may not reference array args\")\r\n\t      }\r\n\t    } else if(arg_type === \"scalar\") {\r\n\t      proc.scalarArgs.push(i)\r\n\t      proc.shimArgs.push(\"scalar\" + i)\r\n\t    } else if(arg_type === \"index\") {\r\n\t      proc.indexArgs.push(i)\r\n\t      if(i < proc.pre.args.length && proc.pre.args[i].count > 0) {\r\n\t        throw new Error(\"cwise: pre() block may not reference array index\")\r\n\t      }\r\n\t      if(i < proc.body.args.length && proc.body.args[i].lvalue) {\r\n\t        throw new Error(\"cwise: body() block may not write to array index\")\r\n\t      }\r\n\t      if(i < proc.post.args.length && proc.post.args[i].count > 0) {\r\n\t        throw new Error(\"cwise: post() block may not reference array index\")\r\n\t      }\r\n\t    } else if(arg_type === \"shape\") {\r\n\t      proc.shapeArgs.push(i)\r\n\t      if(i < proc.pre.args.length && proc.pre.args[i].lvalue) {\r\n\t        throw new Error(\"cwise: pre() block may not write to array shape\")\r\n\t      }\r\n\t      if(i < proc.body.args.length && proc.body.args[i].lvalue) {\r\n\t        throw new Error(\"cwise: body() block may not write to array shape\")\r\n\t      }\r\n\t      if(i < proc.post.args.length && proc.post.args[i].lvalue) {\r\n\t        throw new Error(\"cwise: post() block may not write to array shape\")\r\n\t      }\r\n\t    } else if(typeof arg_type === \"object\" && arg_type.offset) {\r\n\t      proc.argTypes[i] = \"offset\"\r\n\t      proc.offsetArgs.push({ array: arg_type.array, offset:arg_type.offset })\r\n\t      proc.offsetArgIndex.push(i)\r\n\t    } else {\r\n\t      throw new Error(\"cwise: Unknown argument type \" + proc_args[i])\r\n\t    }\r\n\t  }\r\n\t  \r\n\t  //Make sure at least one array argument was specified\r\n\t  if(proc.arrayArgs.length <= 0) {\r\n\t    throw new Error(\"cwise: No array arguments specified\")\r\n\t  }\r\n\t  \r\n\t  //Make sure arguments are correct\r\n\t  if(proc.pre.args.length > proc_args.length) {\r\n\t    throw new Error(\"cwise: Too many arguments in pre() block\")\r\n\t  }\r\n\t  if(proc.body.args.length > proc_args.length) {\r\n\t    throw new Error(\"cwise: Too many arguments in body() block\")\r\n\t  }\r\n\t  if(proc.post.args.length > proc_args.length) {\r\n\t    throw new Error(\"cwise: Too many arguments in post() block\")\r\n\t  }\r\n\t\r\n\t  //Check debug flag\r\n\t  proc.debug = !!user_args.printCode || !!user_args.debug\r\n\t  \r\n\t  //Retrieve name\r\n\t  proc.funcName = user_args.funcName || \"cwise\"\r\n\t  \r\n\t  //Read in block size\r\n\t  proc.blockSize = user_args.blockSize || 64\r\n\t\r\n\t  return createThunk(proc)\r\n\t}\r\n\t\r\n\tmodule.exports = compileCwise\r\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\"\r\n\t\r\n\t// The function below is called when constructing a cwise function object, and does the following:\r\n\t// A function object is constructed which accepts as argument a compilation function and returns another function.\r\n\t// It is this other function that is eventually returned by createThunk, and this function is the one that actually\r\n\t// checks whether a certain pattern of arguments has already been used before and compiles new loops as needed.\r\n\t// The compilation passed to the first function object is used for compiling new functions.\r\n\t// Once this function object is created, it is called with compile as argument, where the first argument of compile\r\n\t// is bound to \"proc\" (essentially containing a preprocessed version of the user arguments to cwise).\r\n\t// So createThunk roughly works like this:\r\n\t// function createThunk(proc) {\r\n\t//   var thunk = function(compileBound) {\r\n\t//     var CACHED = {}\r\n\t//     return function(arrays and scalars) {\r\n\t//       if (dtype and order of arrays in CACHED) {\r\n\t//         var func = CACHED[dtype and order of arrays]\r\n\t//       } else {\r\n\t//         var func = CACHED[dtype and order of arrays] = compileBound(dtype and order of arrays)\r\n\t//       }\r\n\t//       return func(arrays and scalars)\r\n\t//     }\r\n\t//   }\r\n\t//   return thunk(compile.bind1(proc))\r\n\t// }\r\n\t\r\n\tvar compile = __webpack_require__(8)\r\n\t\r\n\tfunction createThunk(proc) {\r\n\t  var code = [\"'use strict'\", \"var CACHED={}\"]\r\n\t  var vars = []\r\n\t  var thunkName = proc.funcName + \"_cwise_thunk\"\r\n\t  \r\n\t  //Build thunk\r\n\t  code.push([\"return function \", thunkName, \"(\", proc.shimArgs.join(\",\"), \"){\"].join(\"\"))\r\n\t  var typesig = []\r\n\t  var string_typesig = []\r\n\t  var proc_args = [[\"array\",proc.arrayArgs[0],\".shape.slice(\", // Slice shape so that we only retain the shape over which we iterate (which gets passed to the cwise operator as SS).\r\n\t                    Math.max(0,proc.arrayBlockIndices[0]),proc.arrayBlockIndices[0]<0?(\",\"+proc.arrayBlockIndices[0]+\")\"):\")\"].join(\"\")]\r\n\t  var shapeLengthConditions = [], shapeConditions = []\r\n\t  // Process array arguments\r\n\t  for(var i=0; i<proc.arrayArgs.length; ++i) {\r\n\t    var j = proc.arrayArgs[i]\r\n\t    vars.push([\"t\", j, \"=array\", j, \".dtype,\",\r\n\t               \"r\", j, \"=array\", j, \".order\"].join(\"\"))\r\n\t    typesig.push(\"t\" + j)\r\n\t    typesig.push(\"r\" + j)\r\n\t    string_typesig.push(\"t\"+j)\r\n\t    string_typesig.push(\"r\"+j+\".join()\")\r\n\t    proc_args.push(\"array\" + j + \".data\")\r\n\t    proc_args.push(\"array\" + j + \".stride\")\r\n\t    proc_args.push(\"array\" + j + \".offset|0\")\r\n\t    if (i>0) { // Gather conditions to check for shape equality (ignoring block indices)\r\n\t      shapeLengthConditions.push(\"array\" + proc.arrayArgs[0] + \".shape.length===array\" + j + \".shape.length+\" + (Math.abs(proc.arrayBlockIndices[0])-Math.abs(proc.arrayBlockIndices[i])))\r\n\t      shapeConditions.push(\"array\" + proc.arrayArgs[0] + \".shape[shapeIndex+\" + Math.max(0,proc.arrayBlockIndices[0]) + \"]===array\" + j + \".shape[shapeIndex+\" + Math.max(0,proc.arrayBlockIndices[i]) + \"]\")\r\n\t    }\r\n\t  }\r\n\t  // Check for shape equality\r\n\t  if (proc.arrayArgs.length > 1) {\r\n\t    code.push(\"if (!(\" + shapeLengthConditions.join(\" && \") + \")) throw new Error('cwise: Arrays do not all have the same dimensionality!')\")\r\n\t    code.push(\"for(var shapeIndex=array\" + proc.arrayArgs[0] + \".shape.length-\" + Math.abs(proc.arrayBlockIndices[0]) + \"; shapeIndex-->0;) {\")\r\n\t    code.push(\"if (!(\" + shapeConditions.join(\" && \") + \")) throw new Error('cwise: Arrays do not all have the same shape!')\")\r\n\t    code.push(\"}\")\r\n\t  }\r\n\t  // Process scalar arguments\r\n\t  for(var i=0; i<proc.scalarArgs.length; ++i) {\r\n\t    proc_args.push(\"scalar\" + proc.scalarArgs[i])\r\n\t  }\r\n\t  // Check for cached function (and if not present, generate it)\r\n\t  vars.push([\"type=[\", string_typesig.join(\",\"), \"].join()\"].join(\"\"))\r\n\t  vars.push(\"proc=CACHED[type]\")\r\n\t  code.push(\"var \" + vars.join(\",\"))\r\n\t  \r\n\t  code.push([\"if(!proc){\",\r\n\t             \"CACHED[type]=proc=compile([\", typesig.join(\",\"), \"])}\",\r\n\t             \"return proc(\", proc_args.join(\",\"), \")}\"].join(\"\"))\r\n\t\r\n\t  if(proc.debug) {\r\n\t    console.log(\"-----Generated thunk:\\n\" + code.join(\"\\n\") + \"\\n----------\")\r\n\t  }\r\n\t  \r\n\t  //Compile thunk\r\n\t  var thunk = new Function(\"compile\", code.join(\"\\n\"))\r\n\t  return thunk(compile.bind(undefined, proc))\r\n\t}\r\n\t\r\n\tmodule.exports = createThunk\r\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\"\r\n\t\r\n\tvar uniq = __webpack_require__(9)\r\n\t\r\n\t// This function generates very simple loops analogous to how you typically traverse arrays (the outermost loop corresponds to the slowest changing index, the innermost loop to the fastest changing index)\r\n\t// TODO: If two arrays have the same strides (and offsets) there is potential for decreasing the number of \"pointers\" and related variables. The drawback is that the type signature would become more specific and that there would thus be less potential for caching, but it might still be worth it, especially when dealing with large numbers of arguments.\r\n\tfunction innerFill(order, proc, body) {\r\n\t  var dimension = order.length\r\n\t    , nargs = proc.arrayArgs.length\r\n\t    , has_index = proc.indexArgs.length>0\r\n\t    , code = []\r\n\t    , vars = []\r\n\t    , idx=0, pidx=0, i, j\r\n\t  for(i=0; i<dimension; ++i) { // Iteration variables\r\n\t    vars.push([\"i\",i,\"=0\"].join(\"\"))\r\n\t  }\r\n\t  //Compute scan deltas\r\n\t  for(j=0; j<nargs; ++j) {\r\n\t    for(i=0; i<dimension; ++i) {\r\n\t      pidx = idx\r\n\t      idx = order[i]\r\n\t      if(i === 0) { // The innermost/fastest dimension's delta is simply its stride\r\n\t        vars.push([\"d\",j,\"s\",i,\"=t\",j,\"p\",idx].join(\"\"))\r\n\t      } else { // For other dimensions the delta is basically the stride minus something which essentially \"rewinds\" the previous (more inner) dimension\r\n\t        vars.push([\"d\",j,\"s\",i,\"=(t\",j,\"p\",idx,\"-s\",pidx,\"*t\",j,\"p\",pidx,\")\"].join(\"\"))\r\n\t      }\r\n\t    }\r\n\t  }\r\n\t  code.push(\"var \" + vars.join(\",\"))\r\n\t  //Scan loop\r\n\t  for(i=dimension-1; i>=0; --i) { // Start at largest stride and work your way inwards\r\n\t    idx = order[i]\r\n\t    code.push([\"for(i\",i,\"=0;i\",i,\"<s\",idx,\";++i\",i,\"){\"].join(\"\"))\r\n\t  }\r\n\t  //Push body of inner loop\r\n\t  code.push(body)\r\n\t  //Advance scan pointers\r\n\t  for(i=0; i<dimension; ++i) {\r\n\t    pidx = idx\r\n\t    idx = order[i]\r\n\t    for(j=0; j<nargs; ++j) {\r\n\t      code.push([\"p\",j,\"+=d\",j,\"s\",i].join(\"\"))\r\n\t    }\r\n\t    if(has_index) {\r\n\t      if(i > 0) {\r\n\t        code.push([\"index[\",pidx,\"]-=s\",pidx].join(\"\"))\r\n\t      }\r\n\t      code.push([\"++index[\",idx,\"]\"].join(\"\"))\r\n\t    }\r\n\t    code.push(\"}\")\r\n\t  }\r\n\t  return code.join(\"\\n\")\r\n\t}\r\n\t\r\n\t// Generate \"outer\" loops that loop over blocks of data, applying \"inner\" loops to the blocks by manipulating the local variables in such a way that the inner loop only \"sees\" the current block.\r\n\t// TODO: If this is used, then the previous declaration (done by generateCwiseOp) of s* is essentially unnecessary.\r\n\t//       I believe the s* are not used elsewhere (in particular, I don't think they're used in the pre/post parts and \"shape\" is defined independently), so it would be possible to make defining the s* dependent on what loop method is being used.\r\n\tfunction outerFill(matched, order, proc, body) {\r\n\t  var dimension = order.length\r\n\t    , nargs = proc.arrayArgs.length\r\n\t    , blockSize = proc.blockSize\r\n\t    , has_index = proc.indexArgs.length > 0\r\n\t    , code = []\r\n\t  for(var i=0; i<nargs; ++i) {\r\n\t    code.push([\"var offset\",i,\"=p\",i].join(\"\"))\r\n\t  }\r\n\t  //Generate loops for unmatched dimensions\r\n\t  // The order in which these dimensions are traversed is fairly arbitrary (from small stride to large stride, for the first argument)\r\n\t  // TODO: It would be nice if the order in which these loops are placed would also be somehow \"optimal\" (at the very least we should check that it really doesn't hurt us if they're not).\r\n\t  for(var i=matched; i<dimension; ++i) {\r\n\t    code.push([\"for(var j\"+i+\"=SS[\", order[i], \"]|0;j\", i, \">0;){\"].join(\"\")) // Iterate back to front\r\n\t    code.push([\"if(j\",i,\"<\",blockSize,\"){\"].join(\"\")) // Either decrease j by blockSize (s = blockSize), or set it to zero (after setting s = j).\r\n\t    code.push([\"s\",order[i],\"=j\",i].join(\"\"))\r\n\t    code.push([\"j\",i,\"=0\"].join(\"\"))\r\n\t    code.push([\"}else{s\",order[i],\"=\",blockSize].join(\"\"))\r\n\t    code.push([\"j\",i,\"-=\",blockSize,\"}\"].join(\"\"))\r\n\t    if(has_index) {\r\n\t      code.push([\"index[\",order[i],\"]=j\",i].join(\"\"))\r\n\t    }\r\n\t  }\r\n\t  for(var i=0; i<nargs; ++i) {\r\n\t    var indexStr = [\"offset\"+i]\r\n\t    for(var j=matched; j<dimension; ++j) {\r\n\t      indexStr.push([\"j\",j,\"*t\",i,\"p\",order[j]].join(\"\"))\r\n\t    }\r\n\t    code.push([\"p\",i,\"=(\",indexStr.join(\"+\"),\")\"].join(\"\"))\r\n\t  }\r\n\t  code.push(innerFill(order, proc, body))\r\n\t  for(var i=matched; i<dimension; ++i) {\r\n\t    code.push(\"}\")\r\n\t  }\r\n\t  return code.join(\"\\n\")\r\n\t}\r\n\t\r\n\t//Count the number of compatible inner orders\r\n\t// This is the length of the longest common prefix of the arrays in orders.\r\n\t// Each array in orders lists the dimensions of the correspond ndarray in order of increasing stride.\r\n\t// This is thus the maximum number of dimensions that can be efficiently traversed by simple nested loops for all arrays.\r\n\tfunction countMatches(orders) {\r\n\t  var matched = 0, dimension = orders[0].length\r\n\t  while(matched < dimension) {\r\n\t    for(var j=1; j<orders.length; ++j) {\r\n\t      if(orders[j][matched] !== orders[0][matched]) {\r\n\t        return matched\r\n\t      }\r\n\t    }\r\n\t    ++matched\r\n\t  }\r\n\t  return matched\r\n\t}\r\n\t\r\n\t//Processes a block according to the given data types\r\n\t// Replaces variable names by different ones, either \"local\" ones (that are then ferried in and out of the given array) or ones matching the arguments that the function performing the ultimate loop will accept.\r\n\tfunction processBlock(block, proc, dtypes) {\r\n\t  var code = block.body\r\n\t  var pre = []\r\n\t  var post = []\r\n\t  for(var i=0; i<block.args.length; ++i) {\r\n\t    var carg = block.args[i]\r\n\t    if(carg.count <= 0) {\r\n\t      continue\r\n\t    }\r\n\t    var re = new RegExp(carg.name, \"g\")\r\n\t    var ptrStr = \"\"\r\n\t    var arrNum = proc.arrayArgs.indexOf(i)\r\n\t    switch(proc.argTypes[i]) {\r\n\t      case \"offset\":\r\n\t        var offArgIndex = proc.offsetArgIndex.indexOf(i)\r\n\t        var offArg = proc.offsetArgs[offArgIndex]\r\n\t        arrNum = offArg.array\r\n\t        ptrStr = \"+q\" + offArgIndex // Adds offset to the \"pointer\" in the array\r\n\t      case \"array\":\r\n\t        ptrStr = \"p\" + arrNum + ptrStr\r\n\t        var localStr = \"l\" + i\r\n\t        var arrStr = \"a\" + arrNum\r\n\t        if (proc.arrayBlockIndices[arrNum] === 0) { // Argument to body is just a single value from this array\r\n\t          if(carg.count === 1) { // Argument/array used only once(?)\r\n\t            if(dtypes[arrNum] === \"generic\") {\r\n\t              if(carg.lvalue) {\r\n\t                pre.push([\"var \", localStr, \"=\", arrStr, \".get(\", ptrStr, \")\"].join(\"\")) // Is this necessary if the argument is ONLY used as an lvalue? (keep in mind that we can have a += something, so we would actually need to check carg.rvalue)\r\n\t                code = code.replace(re, localStr)\r\n\t                post.push([arrStr, \".set(\", ptrStr, \",\", localStr,\")\"].join(\"\"))\r\n\t              } else {\r\n\t                code = code.replace(re, [arrStr, \".get(\", ptrStr, \")\"].join(\"\"))\r\n\t              }\r\n\t            } else {\r\n\t              code = code.replace(re, [arrStr, \"[\", ptrStr, \"]\"].join(\"\"))\r\n\t            }\r\n\t          } else if(dtypes[arrNum] === \"generic\") {\r\n\t            pre.push([\"var \", localStr, \"=\", arrStr, \".get(\", ptrStr, \")\"].join(\"\")) // TODO: Could we optimize by checking for carg.rvalue?\r\n\t            code = code.replace(re, localStr)\r\n\t            if(carg.lvalue) {\r\n\t              post.push([arrStr, \".set(\", ptrStr, \",\", localStr,\")\"].join(\"\"))\r\n\t            }\r\n\t          } else {\r\n\t            pre.push([\"var \", localStr, \"=\", arrStr, \"[\", ptrStr, \"]\"].join(\"\")) // TODO: Could we optimize by checking for carg.rvalue?\r\n\t            code = code.replace(re, localStr)\r\n\t            if(carg.lvalue) {\r\n\t              post.push([arrStr, \"[\", ptrStr, \"]=\", localStr].join(\"\"))\r\n\t            }\r\n\t          }\r\n\t        } else { // Argument to body is a \"block\"\r\n\t          var reStrArr = [carg.name], ptrStrArr = [ptrStr]\r\n\t          for(var j=0; j<Math.abs(proc.arrayBlockIndices[arrNum]); j++) {\r\n\t            reStrArr.push(\"\\\\s*\\\\[([^\\\\]]+)\\\\]\")\r\n\t            ptrStrArr.push(\"$\" + (j+1) + \"*t\" + arrNum + \"b\" + j) // Matched index times stride\r\n\t          }\r\n\t          re = new RegExp(reStrArr.join(\"\"), \"g\")\r\n\t          ptrStr = ptrStrArr.join(\"+\")\r\n\t          if(dtypes[arrNum] === \"generic\") {\r\n\t            /*if(carg.lvalue) {\r\n\t              pre.push([\"var \", localStr, \"=\", arrStr, \".get(\", ptrStr, \")\"].join(\"\")) // Is this necessary if the argument is ONLY used as an lvalue? (keep in mind that we can have a += something, so we would actually need to check carg.rvalue)\r\n\t              code = code.replace(re, localStr)\r\n\t              post.push([arrStr, \".set(\", ptrStr, \",\", localStr,\")\"].join(\"\"))\r\n\t            } else {\r\n\t              code = code.replace(re, [arrStr, \".get(\", ptrStr, \")\"].join(\"\"))\r\n\t            }*/\r\n\t            throw new Error(\"cwise: Generic arrays not supported in combination with blocks!\")\r\n\t          } else {\r\n\t            // This does not produce any local variables, even if variables are used multiple times. It would be possible to do so, but it would complicate things quite a bit.\r\n\t            code = code.replace(re, [arrStr, \"[\", ptrStr, \"]\"].join(\"\"))\r\n\t          }\r\n\t        }\r\n\t      break\r\n\t      case \"scalar\":\r\n\t        code = code.replace(re, \"Y\" + proc.scalarArgs.indexOf(i))\r\n\t      break\r\n\t      case \"index\":\r\n\t        code = code.replace(re, \"index\")\r\n\t      break\r\n\t      case \"shape\":\r\n\t        code = code.replace(re, \"shape\")\r\n\t      break\r\n\t    }\r\n\t  }\r\n\t  return [pre.join(\"\\n\"), code, post.join(\"\\n\")].join(\"\\n\").trim()\r\n\t}\r\n\t\r\n\tfunction typeSummary(dtypes) {\r\n\t  var summary = new Array(dtypes.length)\r\n\t  var allEqual = true\r\n\t  for(var i=0; i<dtypes.length; ++i) {\r\n\t    var t = dtypes[i]\r\n\t    var digits = t.match(/\\d+/)\r\n\t    if(!digits) {\r\n\t      digits = \"\"\r\n\t    } else {\r\n\t      digits = digits[0]\r\n\t    }\r\n\t    if(t.charAt(0) === 0) {\r\n\t      summary[i] = \"u\" + t.charAt(1) + digits\r\n\t    } else {\r\n\t      summary[i] = t.charAt(0) + digits\r\n\t    }\r\n\t    if(i > 0) {\r\n\t      allEqual = allEqual && summary[i] === summary[i-1]\r\n\t    }\r\n\t  }\r\n\t  if(allEqual) {\r\n\t    return summary[0]\r\n\t  }\r\n\t  return summary.join(\"\")\r\n\t}\r\n\t\r\n\t//Generates a cwise operator\r\n\tfunction generateCWiseOp(proc, typesig) {\r\n\t\r\n\t  //Compute dimension\r\n\t  // Arrays get put first in typesig, and there are two entries per array (dtype and order), so this gets the number of dimensions in the first array arg.\r\n\t  var dimension = (typesig[1].length - Math.abs(proc.arrayBlockIndices[0]))|0\r\n\t  var orders = new Array(proc.arrayArgs.length)\r\n\t  var dtypes = new Array(proc.arrayArgs.length)\r\n\t  for(var i=0; i<proc.arrayArgs.length; ++i) {\r\n\t    dtypes[i] = typesig[2*i]\r\n\t    orders[i] = typesig[2*i+1]\r\n\t  }\r\n\t  \r\n\t  //Determine where block and loop indices start and end\r\n\t  var blockBegin = [], blockEnd = [] // These indices are exposed as blocks\r\n\t  var loopBegin = [], loopEnd = [] // These indices are iterated over\r\n\t  var loopOrders = [] // orders restricted to the loop indices\r\n\t  for(var i=0; i<proc.arrayArgs.length; ++i) {\r\n\t    if (proc.arrayBlockIndices[i]<0) {\r\n\t      loopBegin.push(0)\r\n\t      loopEnd.push(dimension)\r\n\t      blockBegin.push(dimension)\r\n\t      blockEnd.push(dimension+proc.arrayBlockIndices[i])\r\n\t    } else {\r\n\t      loopBegin.push(proc.arrayBlockIndices[i]) // Non-negative\r\n\t      loopEnd.push(proc.arrayBlockIndices[i]+dimension)\r\n\t      blockBegin.push(0)\r\n\t      blockEnd.push(proc.arrayBlockIndices[i])\r\n\t    }\r\n\t    var newOrder = []\r\n\t    for(var j=0; j<orders[i].length; j++) {\r\n\t      if (loopBegin[i]<=orders[i][j] && orders[i][j]<loopEnd[i]) {\r\n\t        newOrder.push(orders[i][j]-loopBegin[i]) // If this is a loop index, put it in newOrder, subtracting loopBegin, to make sure that all loopOrders are using a common set of indices.\r\n\t      }\r\n\t    }\r\n\t    loopOrders.push(newOrder)\r\n\t  }\r\n\t\r\n\t  //First create arguments for procedure\r\n\t  var arglist = [\"SS\"] // SS is the overall shape over which we iterate\r\n\t  var code = [\"'use strict'\"]\r\n\t  var vars = []\r\n\t  \r\n\t  for(var j=0; j<dimension; ++j) {\r\n\t    vars.push([\"s\", j, \"=SS[\", j, \"]\"].join(\"\")) // The limits for each dimension.\r\n\t  }\r\n\t  for(var i=0; i<proc.arrayArgs.length; ++i) {\r\n\t    arglist.push(\"a\"+i) // Actual data array\r\n\t    arglist.push(\"t\"+i) // Strides\r\n\t    arglist.push(\"p\"+i) // Offset in the array at which the data starts (also used for iterating over the data)\r\n\t    \r\n\t    for(var j=0; j<dimension; ++j) { // Unpack the strides into vars for looping\r\n\t      vars.push([\"t\",i,\"p\",j,\"=t\",i,\"[\",loopBegin[i]+j,\"]\"].join(\"\"))\r\n\t    }\r\n\t    \r\n\t    for(var j=0; j<Math.abs(proc.arrayBlockIndices[i]); ++j) { // Unpack the strides into vars for block iteration\r\n\t      vars.push([\"t\",i,\"b\",j,\"=t\",i,\"[\",blockBegin[i]+j,\"]\"].join(\"\"))\r\n\t    }\r\n\t  }\r\n\t  for(var i=0; i<proc.scalarArgs.length; ++i) {\r\n\t    arglist.push(\"Y\" + i)\r\n\t  }\r\n\t  if(proc.shapeArgs.length > 0) {\r\n\t    vars.push(\"shape=SS.slice(0)\") // Makes the shape over which we iterate available to the user defined functions (so you can use width/height for example)\r\n\t  }\r\n\t  if(proc.indexArgs.length > 0) {\r\n\t    // Prepare an array to keep track of the (logical) indices, initialized to dimension zeroes.\r\n\t    var zeros = new Array(dimension)\r\n\t    for(var i=0; i<dimension; ++i) {\r\n\t      zeros[i] = \"0\"\r\n\t    }\r\n\t    vars.push([\"index=[\", zeros.join(\",\"), \"]\"].join(\"\"))\r\n\t  }\r\n\t  for(var i=0; i<proc.offsetArgs.length; ++i) { // Offset arguments used for stencil operations\r\n\t    var off_arg = proc.offsetArgs[i]\r\n\t    var init_string = []\r\n\t    for(var j=0; j<off_arg.offset.length; ++j) {\r\n\t      if(off_arg.offset[j] === 0) {\r\n\t        continue\r\n\t      } else if(off_arg.offset[j] === 1) {\r\n\t        init_string.push([\"t\", off_arg.array, \"p\", j].join(\"\"))      \r\n\t      } else {\r\n\t        init_string.push([off_arg.offset[j], \"*t\", off_arg.array, \"p\", j].join(\"\"))\r\n\t      }\r\n\t    }\r\n\t    if(init_string.length === 0) {\r\n\t      vars.push(\"q\" + i + \"=0\")\r\n\t    } else {\r\n\t      vars.push([\"q\", i, \"=\", init_string.join(\"+\")].join(\"\"))\r\n\t    }\r\n\t  }\r\n\t\r\n\t  //Prepare this variables\r\n\t  var thisVars = uniq([].concat(proc.pre.thisVars)\r\n\t                      .concat(proc.body.thisVars)\r\n\t                      .concat(proc.post.thisVars))\r\n\t  vars = vars.concat(thisVars)\r\n\t  code.push(\"var \" + vars.join(\",\"))\r\n\t  for(var i=0; i<proc.arrayArgs.length; ++i) {\r\n\t    code.push(\"p\"+i+\"|=0\")\r\n\t  }\r\n\t  \r\n\t  //Inline prelude\r\n\t  if(proc.pre.body.length > 3) {\r\n\t    code.push(processBlock(proc.pre, proc, dtypes))\r\n\t  }\r\n\t\r\n\t  //Process body\r\n\t  var body = processBlock(proc.body, proc, dtypes)\r\n\t  var matched = countMatches(loopOrders)\r\n\t  if(matched < dimension) {\r\n\t    code.push(outerFill(matched, loopOrders[0], proc, body)) // TODO: Rather than passing loopOrders[0], it might be interesting to look at passing an order that represents the majority of the arguments for example.\r\n\t  } else {\r\n\t    code.push(innerFill(loopOrders[0], proc, body))\r\n\t  }\r\n\t\r\n\t  //Inline epilog\r\n\t  if(proc.post.body.length > 3) {\r\n\t    code.push(processBlock(proc.post, proc, dtypes))\r\n\t  }\r\n\t  \r\n\t  if(proc.debug) {\r\n\t    console.log(\"-----Generated cwise routine for \", typesig, \":\\n\" + code.join(\"\\n\") + \"\\n----------\")\r\n\t  }\r\n\t  \r\n\t  var loopName = [(proc.funcName||\"unnamed\"), \"_cwise_loop_\", orders[0].join(\"s\"),\"m\",matched,typeSummary(dtypes)].join(\"\")\r\n\t  var f = new Function([\"function \",loopName,\"(\", arglist.join(\",\"),\"){\", code.join(\"\\n\"),\"} return \", loopName].join(\"\"))\r\n\t  return f()\r\n\t}\r\n\tmodule.exports = generateCWiseOp\r\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t\"use strict\"\n\t\n\tfunction unique_pred(list, compare) {\n\t  var ptr = 1\n\t    , len = list.length\n\t    , a=list[0], b=list[0]\n\t  for(var i=1; i<len; ++i) {\n\t    b = a\n\t    a = list[i]\n\t    if(compare(a, b)) {\n\t      if(i === ptr) {\n\t        ptr++\n\t        continue\n\t      }\n\t      list[ptr++] = a\n\t    }\n\t  }\n\t  list.length = ptr\n\t  return list\n\t}\n\t\n\tfunction unique_eq(list) {\n\t  var ptr = 1\n\t    , len = list.length\n\t    , a=list[0], b = list[0]\n\t  for(var i=1; i<len; ++i, b=a) {\n\t    b = a\n\t    a = list[i]\n\t    if(a !== b) {\n\t      if(i === ptr) {\n\t        ptr++\n\t        continue\n\t      }\n\t      list[ptr++] = a\n\t    }\n\t  }\n\t  list.length = ptr\n\t  return list\n\t}\n\t\n\tfunction unique(list, compare, sorted) {\n\t  if(list.length === 0) {\n\t    return list\n\t  }\n\t  if(compare) {\n\t    if(!sorted) {\n\t      list.sort(compare)\n\t    }\n\t    return unique_pred(list, compare)\n\t  }\n\t  if(!sorted) {\n\t    list.sort()\n\t  }\n\t  return unique_eq(list)\n\t}\n\t\n\tmodule.exports = unique\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\"\n\t\n\tvar parse   = __webpack_require__(11)\n\tvar compile = __webpack_require__(6)\n\t\n\tvar REQUIRED_FIELDS = [ \"args\", \"body\" ]\n\tvar OPTIONAL_FIELDS = [ \"pre\", \"post\", \"printCode\", \"funcName\", \"blockSize\" ]\n\t\n\tfunction createCWise(user_args) {\n\t  //Check parameters\n\t  for(var id in user_args) {\n\t    if(REQUIRED_FIELDS.indexOf(id) < 0 &&\n\t       OPTIONAL_FIELDS.indexOf(id) < 0) {\n\t      console.warn(\"cwise: Unknown argument '\"+id+\"' passed to expression compiler\")\n\t    }\n\t  }\n\t  for(var i=0; i<REQUIRED_FIELDS.length; ++i) {\n\t    if(!user_args[REQUIRED_FIELDS[i]]) {\n\t      throw new Error(\"cwise: Missing argument: \" + REQUIRED_FIELDS[i])\n\t    }\n\t  }\n\t  \n\t  //Parse blocks\n\t  return compile({\n\t    args:       user_args.args,\n\t    pre:        parse(user_args.pre || function(){}),\n\t    body:       parse(user_args.body),\n\t    post:       parse(user_args.post || function(){}),\n\t    debug:      !!user_args.printCode,\n\t    funcName:   user_args.funcName || user_args.body.name || \"cwise\",\n\t    blockSize:  user_args.blockSize || 64\n\t  })\n\t}\n\t\n\tmodule.exports = createCWise\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\"\r\n\t\r\n\tvar esprima = __webpack_require__(12)\r\n\tvar uniq = __webpack_require__(9)\r\n\t\r\n\tvar PREFIX_COUNTER = 0\r\n\t\r\n\tfunction CompiledArgument(name, lvalue, rvalue) {\r\n\t  this.name = name\r\n\t  this.lvalue = lvalue\r\n\t  this.rvalue = rvalue\r\n\t  this.count = 0\r\n\t}\r\n\t\r\n\tfunction CompiledRoutine(body, args, thisVars, localVars) {\r\n\t  this.body = body\r\n\t  this.args = args\r\n\t  this.thisVars = thisVars\r\n\t  this.localVars = localVars\r\n\t}\r\n\t\r\n\tfunction isGlobal(identifier) {\r\n\t  if(identifier === \"eval\") {\r\n\t    throw new Error(\"cwise-parser: eval() not allowed\")\r\n\t  }\r\n\t  if(typeof window !== \"undefined\") {\r\n\t    return identifier in window\r\n\t  } else if(typeof GLOBAL !== \"undefined\") {\r\n\t    return identifier in GLOBAL\r\n\t  } else if(typeof self !== \"undefined\") {\r\n\t    return identifier in self\r\n\t  } else {\r\n\t    return false\r\n\t  }\r\n\t}\r\n\t\r\n\tfunction getArgNames(ast) {\r\n\t  var params = ast.body[0].expression.callee.params\r\n\t  var names = new Array(params.length)\r\n\t  for(var i=0; i<params.length; ++i) {\r\n\t    names[i] = params[i].name\r\n\t  }\r\n\t  return names\r\n\t}\r\n\t\r\n\tfunction preprocess(func) {\r\n\t  var src = [\"(\", func, \")()\"].join(\"\")\r\n\t  var ast = esprima.parse(src, { range: true })\r\n\t  \r\n\t  //Compute new prefix\r\n\t  var prefix = \"_inline_\" + (PREFIX_COUNTER++) + \"_\"\r\n\t  \r\n\t  //Parse out arguments\r\n\t  var argNames = getArgNames(ast)\r\n\t  var compiledArgs = new Array(argNames.length)\r\n\t  for(var i=0; i<argNames.length; ++i) {\r\n\t    compiledArgs[i] = new CompiledArgument([prefix, \"arg\", i, \"_\"].join(\"\"), false, false)\r\n\t  }\r\n\t  \r\n\t  //Create temporary data structure for source rewriting\r\n\t  var exploded = new Array(src.length)\r\n\t  for(var i=0, n=src.length; i<n; ++i) {\r\n\t    exploded[i] = src.charAt(i)\r\n\t  }\r\n\t  \r\n\t  //Local variables\r\n\t  var localVars = []\r\n\t  var thisVars = []\r\n\t  var computedThis = false\r\n\t  \r\n\t  //Retrieves a local variable\r\n\t  function createLocal(id) {\r\n\t    var nstr = prefix + id.replace(/\\_/g, \"__\")\r\n\t    localVars.push(nstr)\r\n\t    return nstr\r\n\t  }\r\n\t  \r\n\t  //Creates a this variable\r\n\t  function createThisVar(id) {\r\n\t    var nstr = \"this_\" + id.replace(/\\_/g, \"__\")\r\n\t    thisVars.push(nstr)\r\n\t    return nstr\r\n\t  }\r\n\t  \r\n\t  //Rewrites an ast node\r\n\t  function rewrite(node, nstr) {\r\n\t    var lo = node.range[0], hi = node.range[1]\r\n\t    for(var i=lo+1; i<hi; ++i) {\r\n\t      exploded[i] = \"\"\r\n\t    }\r\n\t    exploded[lo] = nstr\r\n\t  }\r\n\t  \r\n\t  //Remove any underscores\r\n\t  function escapeString(str) {\r\n\t    return \"'\"+(str.replace(/\\_/g, \"\\\\_\").replace(/\\'/g, \"\\'\"))+\"'\"\r\n\t  }\r\n\t  \r\n\t  //Returns the source of an identifier\r\n\t  function source(node) {\r\n\t    return exploded.slice(node.range[0], node.range[1]).join(\"\")\r\n\t  }\r\n\t  \r\n\t  //Computes the usage of a node\r\n\t  var LVALUE = 1\r\n\t  var RVALUE = 2\r\n\t  function getUsage(node) {\r\n\t    if(node.parent.type === \"AssignmentExpression\") {\r\n\t      if(node.parent.left === node) {\r\n\t        if(node.parent.operator === \"=\") {\r\n\t          return LVALUE\r\n\t        }\r\n\t        return LVALUE|RVALUE\r\n\t      }\r\n\t    }\r\n\t    if(node.parent.type === \"UpdateExpression\") {\r\n\t      return LVALUE|RVALUE\r\n\t    }\r\n\t    return RVALUE\r\n\t  }\r\n\t  \r\n\t  //Handle visiting a node\r\n\t  (function visit(node, parent) {\r\n\t    node.parent = parent\r\n\t    if(node.type === \"MemberExpression\") {\r\n\t      //Handle member expression\r\n\t      if(node.computed) {\r\n\t        visit(node.object, node)\r\n\t        visit(node.property, node)\r\n\t      } else if(node.object.type === \"ThisExpression\") {\r\n\t        rewrite(node, createThisVar(node.property.name))\r\n\t      } else {\r\n\t        visit(node.object, node)\r\n\t      }\r\n\t    } else if(node.type === \"ThisExpression\") {\r\n\t      throw new Error(\"cwise-parser: Computed this is not allowed\")\r\n\t    } else if(node.type === \"Identifier\") {\r\n\t      //Handle identifier\r\n\t      var name = node.name\r\n\t      var argNo = argNames.indexOf(name)\r\n\t      if(argNo >= 0) {\r\n\t        var carg = compiledArgs[argNo]\r\n\t        var usage = getUsage(node)\r\n\t        if(usage & LVALUE) {\r\n\t          carg.lvalue = true\r\n\t        }\r\n\t        if(usage & RVALUE) {\r\n\t          carg.rvalue = true\r\n\t        }\r\n\t        ++carg.count\r\n\t        rewrite(node, carg.name)\r\n\t      } else if(isGlobal(name)) {\r\n\t        //Don't rewrite globals\r\n\t      } else {\r\n\t        rewrite(node, createLocal(name))\r\n\t      }\r\n\t    } else if(node.type === \"Literal\") {\r\n\t      if(typeof node.value === \"string\") {\r\n\t        rewrite(node, escapeString(node.value))\r\n\t      }\r\n\t    } else if(node.type === \"WithStatement\") {\r\n\t      throw new Error(\"cwise-parser: with() statements not allowed\")\r\n\t    } else {\r\n\t      //Visit all children\r\n\t      var keys = Object.keys(node)\r\n\t      for(var i=0, n=keys.length; i<n; ++i) {\r\n\t        if(keys[i] === \"parent\") {\r\n\t          continue\r\n\t        }\r\n\t        var value = node[keys[i]]\r\n\t        if(value) {\r\n\t          if(value instanceof Array) {\r\n\t            for(var j=0; j<value.length; ++j) {\r\n\t              if(value[j] && typeof value[j].type === \"string\") {\r\n\t                visit(value[j], node)\r\n\t              }\r\n\t            }\r\n\t          } else if(typeof value.type === \"string\") {\r\n\t            visit(value, node)\r\n\t          }\r\n\t        }\r\n\t      }\r\n\t    }\r\n\t  })(ast.body[0].expression.callee.body, undefined)\r\n\t  \r\n\t  //Remove duplicate variables\r\n\t  uniq(localVars)\r\n\t  uniq(thisVars)\r\n\t  \r\n\t  //Return body\r\n\t  var routine = new CompiledRoutine(source(ast.body[0].expression.callee.body), compiledArgs, thisVars, localVars)\r\n\t  return routine\r\n\t}\r\n\t\r\n\tmodule.exports = preprocess\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n\t  Copyright (C) 2013 Ariya Hidayat <ariya.hidayat@gmail.com>\n\t  Copyright (C) 2013 Thaddee Tyl <thaddee.tyl@gmail.com>\n\t  Copyright (C) 2013 Mathias Bynens <mathias@qiwi.be>\n\t  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n\t  Copyright (C) 2012 Mathias Bynens <mathias@qiwi.be>\n\t  Copyright (C) 2012 Joost-Wim Boekesteijn <joost-wim@boekesteijn.nl>\n\t  Copyright (C) 2012 Kris Kowal <kris.kowal@cixar.com>\n\t  Copyright (C) 2012 Yusuke Suzuki <utatane.tea@gmail.com>\n\t  Copyright (C) 2012 Arpad Borsos <arpad.borsos@googlemail.com>\n\t  Copyright (C) 2011 Ariya Hidayat <ariya.hidayat@gmail.com>\n\t\n\t  Redistribution and use in source and binary forms, with or without\n\t  modification, are permitted provided that the following conditions are met:\n\t\n\t    * Redistributions of source code must retain the above copyright\n\t      notice, this list of conditions and the following disclaimer.\n\t    * Redistributions in binary form must reproduce the above copyright\n\t      notice, this list of conditions and the following disclaimer in the\n\t      documentation and/or other materials provided with the distribution.\n\t\n\t  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\t  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\t  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\t  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n\t  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\t  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\t  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\t  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\t  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t*/\n\t\n\t/*jslint bitwise:true plusplus:true */\n\t/*global esprima:true, define:true, exports:true, window: true,\n\tthrowErrorTolerant: true,\n\tthrowError: true, generateStatement: true, peek: true,\n\tparseAssignmentExpression: true, parseBlock: true, parseExpression: true,\n\tparseFunctionDeclaration: true, parseFunctionExpression: true,\n\tparseFunctionSourceElements: true, parseVariableIdentifier: true,\n\tparseLeftHandSideExpression: true,\n\tparseUnaryExpression: true,\n\tparseStatement: true, parseSourceElement: true */\n\t\n\t(function (root, factory) {\n\t    'use strict';\n\t\n\t    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js,\n\t    // Rhino, and plain browser loading.\n\t\n\t    /* istanbul ignore next */\n\t    if (true) {\n\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    } else if (typeof exports !== 'undefined') {\n\t        factory(exports);\n\t    } else {\n\t        factory((root.esprima = {}));\n\t    }\n\t}(this, function (exports) {\n\t    'use strict';\n\t\n\t    var Token,\n\t        TokenName,\n\t        FnExprTokens,\n\t        Syntax,\n\t        PropertyKind,\n\t        Messages,\n\t        Regex,\n\t        SyntaxTreeDelegate,\n\t        source,\n\t        strict,\n\t        index,\n\t        lineNumber,\n\t        lineStart,\n\t        length,\n\t        delegate,\n\t        lookahead,\n\t        state,\n\t        extra;\n\t\n\t    Token = {\n\t        BooleanLiteral: 1,\n\t        EOF: 2,\n\t        Identifier: 3,\n\t        Keyword: 4,\n\t        NullLiteral: 5,\n\t        NumericLiteral: 6,\n\t        Punctuator: 7,\n\t        StringLiteral: 8,\n\t        RegularExpression: 9\n\t    };\n\t\n\t    TokenName = {};\n\t    TokenName[Token.BooleanLiteral] = 'Boolean';\n\t    TokenName[Token.EOF] = '<end>';\n\t    TokenName[Token.Identifier] = 'Identifier';\n\t    TokenName[Token.Keyword] = 'Keyword';\n\t    TokenName[Token.NullLiteral] = 'Null';\n\t    TokenName[Token.NumericLiteral] = 'Numeric';\n\t    TokenName[Token.Punctuator] = 'Punctuator';\n\t    TokenName[Token.StringLiteral] = 'String';\n\t    TokenName[Token.RegularExpression] = 'RegularExpression';\n\t\n\t    // A function following one of those tokens is an expression.\n\t    FnExprTokens = ['(', '{', '[', 'in', 'typeof', 'instanceof', 'new',\n\t                    'return', 'case', 'delete', 'throw', 'void',\n\t                    // assignment operators\n\t                    '=', '+=', '-=', '*=', '/=', '%=', '<<=', '>>=', '>>>=',\n\t                    '&=', '|=', '^=', ',',\n\t                    // binary/unary operators\n\t                    '+', '-', '*', '/', '%', '++', '--', '<<', '>>', '>>>', '&',\n\t                    '|', '^', '!', '~', '&&', '||', '?', ':', '===', '==', '>=',\n\t                    '<=', '<', '>', '!=', '!=='];\n\t\n\t    Syntax = {\n\t        AssignmentExpression: 'AssignmentExpression',\n\t        ArrayExpression: 'ArrayExpression',\n\t        BlockStatement: 'BlockStatement',\n\t        BinaryExpression: 'BinaryExpression',\n\t        BreakStatement: 'BreakStatement',\n\t        CallExpression: 'CallExpression',\n\t        CatchClause: 'CatchClause',\n\t        ConditionalExpression: 'ConditionalExpression',\n\t        ContinueStatement: 'ContinueStatement',\n\t        DoWhileStatement: 'DoWhileStatement',\n\t        DebuggerStatement: 'DebuggerStatement',\n\t        EmptyStatement: 'EmptyStatement',\n\t        ExpressionStatement: 'ExpressionStatement',\n\t        ForStatement: 'ForStatement',\n\t        ForInStatement: 'ForInStatement',\n\t        FunctionDeclaration: 'FunctionDeclaration',\n\t        FunctionExpression: 'FunctionExpression',\n\t        Identifier: 'Identifier',\n\t        IfStatement: 'IfStatement',\n\t        Literal: 'Literal',\n\t        LabeledStatement: 'LabeledStatement',\n\t        LogicalExpression: 'LogicalExpression',\n\t        MemberExpression: 'MemberExpression',\n\t        NewExpression: 'NewExpression',\n\t        ObjectExpression: 'ObjectExpression',\n\t        Program: 'Program',\n\t        Property: 'Property',\n\t        ReturnStatement: 'ReturnStatement',\n\t        SequenceExpression: 'SequenceExpression',\n\t        SwitchStatement: 'SwitchStatement',\n\t        SwitchCase: 'SwitchCase',\n\t        ThisExpression: 'ThisExpression',\n\t        ThrowStatement: 'ThrowStatement',\n\t        TryStatement: 'TryStatement',\n\t        UnaryExpression: 'UnaryExpression',\n\t        UpdateExpression: 'UpdateExpression',\n\t        VariableDeclaration: 'VariableDeclaration',\n\t        VariableDeclarator: 'VariableDeclarator',\n\t        WhileStatement: 'WhileStatement',\n\t        WithStatement: 'WithStatement'\n\t    };\n\t\n\t    PropertyKind = {\n\t        Data: 1,\n\t        Get: 2,\n\t        Set: 4\n\t    };\n\t\n\t    // Error messages should be identical to V8.\n\t    Messages = {\n\t        UnexpectedToken:  'Unexpected token %0',\n\t        UnexpectedNumber:  'Unexpected number',\n\t        UnexpectedString:  'Unexpected string',\n\t        UnexpectedIdentifier:  'Unexpected identifier',\n\t        UnexpectedReserved:  'Unexpected reserved word',\n\t        UnexpectedEOS:  'Unexpected end of input',\n\t        NewlineAfterThrow:  'Illegal newline after throw',\n\t        InvalidRegExp: 'Invalid regular expression',\n\t        UnterminatedRegExp:  'Invalid regular expression: missing /',\n\t        InvalidLHSInAssignment:  'Invalid left-hand side in assignment',\n\t        InvalidLHSInForIn:  'Invalid left-hand side in for-in',\n\t        MultipleDefaultsInSwitch: 'More than one default clause in switch statement',\n\t        NoCatchOrFinally:  'Missing catch or finally after try',\n\t        UnknownLabel: 'Undefined label \\'%0\\'',\n\t        Redeclaration: '%0 \\'%1\\' has already been declared',\n\t        IllegalContinue: 'Illegal continue statement',\n\t        IllegalBreak: 'Illegal break statement',\n\t        IllegalReturn: 'Illegal return statement',\n\t        StrictModeWith:  'Strict mode code may not include a with statement',\n\t        StrictCatchVariable:  'Catch variable may not be eval or arguments in strict mode',\n\t        StrictVarName:  'Variable name may not be eval or arguments in strict mode',\n\t        StrictParamName:  'Parameter name eval or arguments is not allowed in strict mode',\n\t        StrictParamDupe: 'Strict mode function may not have duplicate parameter names',\n\t        StrictFunctionName:  'Function name may not be eval or arguments in strict mode',\n\t        StrictOctalLiteral:  'Octal literals are not allowed in strict mode.',\n\t        StrictDelete:  'Delete of an unqualified identifier in strict mode.',\n\t        StrictDuplicateProperty:  'Duplicate data property in object literal not allowed in strict mode',\n\t        AccessorDataProperty:  'Object literal may not have data and accessor property with the same name',\n\t        AccessorGetSet:  'Object literal may not have multiple get/set accessors with the same name',\n\t        StrictLHSAssignment:  'Assignment to eval or arguments is not allowed in strict mode',\n\t        StrictLHSPostfix:  'Postfix increment/decrement may not have eval or arguments operand in strict mode',\n\t        StrictLHSPrefix:  'Prefix increment/decrement may not have eval or arguments operand in strict mode',\n\t        StrictReservedWord:  'Use of future reserved word in strict mode'\n\t    };\n\t\n\t    // See also tools/generate-unicode-regex.py.\n\t    Regex = {\n\t        NonAsciiIdentifierStart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F0\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]'),\n\t        NonAsciiIdentifierPart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0\\u08A2-\\u08AC\\u08E4-\\u08FE\\u0900-\\u0963\\u0966-\\u096F\\u0971-\\u0977\\u0979-\\u097F\\u0981-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C01-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C82\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D02\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F0\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1D00-\\u1DE6\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA697\\uA69F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7B\\uAA80-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE26\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]')\n\t    };\n\t\n\t    // Ensure the condition is true, otherwise throw an error.\n\t    // This is only to have a better contract semantic, i.e. another safety net\n\t    // to catch a logic error. The condition shall be fulfilled in normal case.\n\t    // Do NOT use this to enforce a certain condition on any user input.\n\t\n\t    function assert(condition, message) {\n\t        /* istanbul ignore if */\n\t        if (!condition) {\n\t            throw new Error('ASSERT: ' + message);\n\t        }\n\t    }\n\t\n\t    function isDecimalDigit(ch) {\n\t        return (ch >= 48 && ch <= 57);   // 0..9\n\t    }\n\t\n\t    function isHexDigit(ch) {\n\t        return '0123456789abcdefABCDEF'.indexOf(ch) >= 0;\n\t    }\n\t\n\t    function isOctalDigit(ch) {\n\t        return '01234567'.indexOf(ch) >= 0;\n\t    }\n\t\n\t\n\t    // 7.2 White Space\n\t\n\t    function isWhiteSpace(ch) {\n\t        return (ch === 0x20) || (ch === 0x09) || (ch === 0x0B) || (ch === 0x0C) || (ch === 0xA0) ||\n\t            (ch >= 0x1680 && [0x1680, 0x180E, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(ch) >= 0);\n\t    }\n\t\n\t    // 7.3 Line Terminators\n\t\n\t    function isLineTerminator(ch) {\n\t        return (ch === 0x0A) || (ch === 0x0D) || (ch === 0x2028) || (ch === 0x2029);\n\t    }\n\t\n\t    // 7.6 Identifier Names and Identifiers\n\t\n\t    function isIdentifierStart(ch) {\n\t        return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n\t            (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n\t            (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n\t            (ch === 0x5C) ||                      // \\ (backslash)\n\t            ((ch >= 0x80) && Regex.NonAsciiIdentifierStart.test(String.fromCharCode(ch)));\n\t    }\n\t\n\t    function isIdentifierPart(ch) {\n\t        return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n\t            (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n\t            (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n\t            (ch >= 0x30 && ch <= 0x39) ||         // 0..9\n\t            (ch === 0x5C) ||                      // \\ (backslash)\n\t            ((ch >= 0x80) && Regex.NonAsciiIdentifierPart.test(String.fromCharCode(ch)));\n\t    }\n\t\n\t    // 7.6.1.2 Future Reserved Words\n\t\n\t    function isFutureReservedWord(id) {\n\t        switch (id) {\n\t        case 'class':\n\t        case 'enum':\n\t        case 'export':\n\t        case 'extends':\n\t        case 'import':\n\t        case 'super':\n\t            return true;\n\t        default:\n\t            return false;\n\t        }\n\t    }\n\t\n\t    function isStrictModeReservedWord(id) {\n\t        switch (id) {\n\t        case 'implements':\n\t        case 'interface':\n\t        case 'package':\n\t        case 'private':\n\t        case 'protected':\n\t        case 'public':\n\t        case 'static':\n\t        case 'yield':\n\t        case 'let':\n\t            return true;\n\t        default:\n\t            return false;\n\t        }\n\t    }\n\t\n\t    function isRestrictedWord(id) {\n\t        return id === 'eval' || id === 'arguments';\n\t    }\n\t\n\t    // 7.6.1.1 Keywords\n\t\n\t    function isKeyword(id) {\n\t        if (strict && isStrictModeReservedWord(id)) {\n\t            return true;\n\t        }\n\t\n\t        // 'const' is specialized as Keyword in V8.\n\t        // 'yield' and 'let' are for compatiblity with SpiderMonkey and ES.next.\n\t        // Some others are from future reserved words.\n\t\n\t        switch (id.length) {\n\t        case 2:\n\t            return (id === 'if') || (id === 'in') || (id === 'do');\n\t        case 3:\n\t            return (id === 'var') || (id === 'for') || (id === 'new') ||\n\t                (id === 'try') || (id === 'let');\n\t        case 4:\n\t            return (id === 'this') || (id === 'else') || (id === 'case') ||\n\t                (id === 'void') || (id === 'with') || (id === 'enum');\n\t        case 5:\n\t            return (id === 'while') || (id === 'break') || (id === 'catch') ||\n\t                (id === 'throw') || (id === 'const') || (id === 'yield') ||\n\t                (id === 'class') || (id === 'super');\n\t        case 6:\n\t            return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n\t                (id === 'switch') || (id === 'export') || (id === 'import');\n\t        case 7:\n\t            return (id === 'default') || (id === 'finally') || (id === 'extends');\n\t        case 8:\n\t            return (id === 'function') || (id === 'continue') || (id === 'debugger');\n\t        case 10:\n\t            return (id === 'instanceof');\n\t        default:\n\t            return false;\n\t        }\n\t    }\n\t\n\t    // 7.4 Comments\n\t\n\t    function addComment(type, value, start, end, loc) {\n\t        var comment, attacher;\n\t\n\t        assert(typeof start === 'number', 'Comment must have valid position');\n\t\n\t        // Because the way the actual token is scanned, often the comments\n\t        // (if any) are skipped twice during the lexical analysis.\n\t        // Thus, we need to skip adding a comment if the comment array already\n\t        // handled it.\n\t        if (state.lastCommentStart >= start) {\n\t            return;\n\t        }\n\t        state.lastCommentStart = start;\n\t\n\t        comment = {\n\t            type: type,\n\t            value: value\n\t        };\n\t        if (extra.range) {\n\t            comment.range = [start, end];\n\t        }\n\t        if (extra.loc) {\n\t            comment.loc = loc;\n\t        }\n\t        extra.comments.push(comment);\n\t        if (extra.attachComment) {\n\t            extra.leadingComments.push(comment);\n\t            extra.trailingComments.push(comment);\n\t        }\n\t    }\n\t\n\t    function skipSingleLineComment(offset) {\n\t        var start, loc, ch, comment;\n\t\n\t        start = index - offset;\n\t        loc = {\n\t            start: {\n\t                line: lineNumber,\n\t                column: index - lineStart - offset\n\t            }\n\t        };\n\t\n\t        while (index < length) {\n\t            ch = source.charCodeAt(index);\n\t            ++index;\n\t            if (isLineTerminator(ch)) {\n\t                if (extra.comments) {\n\t                    comment = source.slice(start + offset, index - 1);\n\t                    loc.end = {\n\t                        line: lineNumber,\n\t                        column: index - lineStart - 1\n\t                    };\n\t                    addComment('Line', comment, start, index - 1, loc);\n\t                }\n\t                if (ch === 13 && source.charCodeAt(index) === 10) {\n\t                    ++index;\n\t                }\n\t                ++lineNumber;\n\t                lineStart = index;\n\t                return;\n\t            }\n\t        }\n\t\n\t        if (extra.comments) {\n\t            comment = source.slice(start + offset, index);\n\t            loc.end = {\n\t                line: lineNumber,\n\t                column: index - lineStart\n\t            };\n\t            addComment('Line', comment, start, index, loc);\n\t        }\n\t    }\n\t\n\t    function skipMultiLineComment() {\n\t        var start, loc, ch, comment;\n\t\n\t        if (extra.comments) {\n\t            start = index - 2;\n\t            loc = {\n\t                start: {\n\t                    line: lineNumber,\n\t                    column: index - lineStart - 2\n\t                }\n\t            };\n\t        }\n\t\n\t        while (index < length) {\n\t            ch = source.charCodeAt(index);\n\t            if (isLineTerminator(ch)) {\n\t                if (ch === 0x0D && source.charCodeAt(index + 1) === 0x0A) {\n\t                    ++index;\n\t                }\n\t                ++lineNumber;\n\t                ++index;\n\t                lineStart = index;\n\t                if (index >= length) {\n\t                    throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n\t                }\n\t            } else if (ch === 0x2A) {\n\t                // Block comment ends with '*/'.\n\t                if (source.charCodeAt(index + 1) === 0x2F) {\n\t                    ++index;\n\t                    ++index;\n\t                    if (extra.comments) {\n\t                        comment = source.slice(start + 2, index - 2);\n\t                        loc.end = {\n\t                            line: lineNumber,\n\t                            column: index - lineStart\n\t                        };\n\t                        addComment('Block', comment, start, index, loc);\n\t                    }\n\t                    return;\n\t                }\n\t                ++index;\n\t            } else {\n\t                ++index;\n\t            }\n\t        }\n\t\n\t        throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n\t    }\n\t\n\t    function skipComment() {\n\t        var ch, start;\n\t\n\t        start = (index === 0);\n\t        while (index < length) {\n\t            ch = source.charCodeAt(index);\n\t\n\t            if (isWhiteSpace(ch)) {\n\t                ++index;\n\t            } else if (isLineTerminator(ch)) {\n\t                ++index;\n\t                if (ch === 0x0D && source.charCodeAt(index) === 0x0A) {\n\t                    ++index;\n\t                }\n\t                ++lineNumber;\n\t                lineStart = index;\n\t                start = true;\n\t            } else if (ch === 0x2F) { // U+002F is '/'\n\t                ch = source.charCodeAt(index + 1);\n\t                if (ch === 0x2F) {\n\t                    ++index;\n\t                    ++index;\n\t                    skipSingleLineComment(2);\n\t                    start = true;\n\t                } else if (ch === 0x2A) {  // U+002A is '*'\n\t                    ++index;\n\t                    ++index;\n\t                    skipMultiLineComment();\n\t                } else {\n\t                    break;\n\t                }\n\t            } else if (start && ch === 0x2D) { // U+002D is '-'\n\t                // U+003E is '>'\n\t                if ((source.charCodeAt(index + 1) === 0x2D) && (source.charCodeAt(index + 2) === 0x3E)) {\n\t                    // '-->' is a single-line comment\n\t                    index += 3;\n\t                    skipSingleLineComment(3);\n\t                } else {\n\t                    break;\n\t                }\n\t            } else if (ch === 0x3C) { // U+003C is '<'\n\t                if (source.slice(index + 1, index + 4) === '!--') {\n\t                    ++index; // `<`\n\t                    ++index; // `!`\n\t                    ++index; // `-`\n\t                    ++index; // `-`\n\t                    skipSingleLineComment(4);\n\t                } else {\n\t                    break;\n\t                }\n\t            } else {\n\t                break;\n\t            }\n\t        }\n\t    }\n\t\n\t    function scanHexEscape(prefix) {\n\t        var i, len, ch, code = 0;\n\t\n\t        len = (prefix === 'u') ? 4 : 2;\n\t        for (i = 0; i < len; ++i) {\n\t            if (index < length && isHexDigit(source[index])) {\n\t                ch = source[index++];\n\t                code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n\t            } else {\n\t                return '';\n\t            }\n\t        }\n\t        return String.fromCharCode(code);\n\t    }\n\t\n\t    function getEscapedIdentifier() {\n\t        var ch, id;\n\t\n\t        ch = source.charCodeAt(index++);\n\t        id = String.fromCharCode(ch);\n\t\n\t        // '\\u' (U+005C, U+0075) denotes an escaped character.\n\t        if (ch === 0x5C) {\n\t            if (source.charCodeAt(index) !== 0x75) {\n\t                throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n\t            }\n\t            ++index;\n\t            ch = scanHexEscape('u');\n\t            if (!ch || ch === '\\\\' || !isIdentifierStart(ch.charCodeAt(0))) {\n\t                throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n\t            }\n\t            id = ch;\n\t        }\n\t\n\t        while (index < length) {\n\t            ch = source.charCodeAt(index);\n\t            if (!isIdentifierPart(ch)) {\n\t                break;\n\t            }\n\t            ++index;\n\t            id += String.fromCharCode(ch);\n\t\n\t            // '\\u' (U+005C, U+0075) denotes an escaped character.\n\t            if (ch === 0x5C) {\n\t                id = id.substr(0, id.length - 1);\n\t                if (source.charCodeAt(index) !== 0x75) {\n\t                    throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n\t                }\n\t                ++index;\n\t                ch = scanHexEscape('u');\n\t                if (!ch || ch === '\\\\' || !isIdentifierPart(ch.charCodeAt(0))) {\n\t                    throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n\t                }\n\t                id += ch;\n\t            }\n\t        }\n\t\n\t        return id;\n\t    }\n\t\n\t    function getIdentifier() {\n\t        var start, ch;\n\t\n\t        start = index++;\n\t        while (index < length) {\n\t            ch = source.charCodeAt(index);\n\t            if (ch === 0x5C) {\n\t                // Blackslash (U+005C) marks Unicode escape sequence.\n\t                index = start;\n\t                return getEscapedIdentifier();\n\t            }\n\t            if (isIdentifierPart(ch)) {\n\t                ++index;\n\t            } else {\n\t                break;\n\t            }\n\t        }\n\t\n\t        return source.slice(start, index);\n\t    }\n\t\n\t    function scanIdentifier() {\n\t        var start, id, type;\n\t\n\t        start = index;\n\t\n\t        // Backslash (U+005C) starts an escaped character.\n\t        id = (source.charCodeAt(index) === 0x5C) ? getEscapedIdentifier() : getIdentifier();\n\t\n\t        // There is no keyword or literal with only one character.\n\t        // Thus, it must be an identifier.\n\t        if (id.length === 1) {\n\t            type = Token.Identifier;\n\t        } else if (isKeyword(id)) {\n\t            type = Token.Keyword;\n\t        } else if (id === 'null') {\n\t            type = Token.NullLiteral;\n\t        } else if (id === 'true' || id === 'false') {\n\t            type = Token.BooleanLiteral;\n\t        } else {\n\t            type = Token.Identifier;\n\t        }\n\t\n\t        return {\n\t            type: type,\n\t            value: id,\n\t            lineNumber: lineNumber,\n\t            lineStart: lineStart,\n\t            start: start,\n\t            end: index\n\t        };\n\t    }\n\t\n\t\n\t    // 7.7 Punctuators\n\t\n\t    function scanPunctuator() {\n\t        var start = index,\n\t            code = source.charCodeAt(index),\n\t            code2,\n\t            ch1 = source[index],\n\t            ch2,\n\t            ch3,\n\t            ch4;\n\t\n\t        switch (code) {\n\t\n\t        // Check for most common single-character punctuators.\n\t        case 0x2E:  // . dot\n\t        case 0x28:  // ( open bracket\n\t        case 0x29:  // ) close bracket\n\t        case 0x3B:  // ; semicolon\n\t        case 0x2C:  // , comma\n\t        case 0x7B:  // { open curly brace\n\t        case 0x7D:  // } close curly brace\n\t        case 0x5B:  // [\n\t        case 0x5D:  // ]\n\t        case 0x3A:  // :\n\t        case 0x3F:  // ?\n\t        case 0x7E:  // ~\n\t            ++index;\n\t            if (extra.tokenize) {\n\t                if (code === 0x28) {\n\t                    extra.openParenToken = extra.tokens.length;\n\t                } else if (code === 0x7B) {\n\t                    extra.openCurlyToken = extra.tokens.length;\n\t                }\n\t            }\n\t            return {\n\t                type: Token.Punctuator,\n\t                value: String.fromCharCode(code),\n\t                lineNumber: lineNumber,\n\t                lineStart: lineStart,\n\t                start: start,\n\t                end: index\n\t            };\n\t\n\t        default:\n\t            code2 = source.charCodeAt(index + 1);\n\t\n\t            // '=' (U+003D) marks an assignment or comparison operator.\n\t            if (code2 === 0x3D) {\n\t                switch (code) {\n\t                case 0x2B:  // +\n\t                case 0x2D:  // -\n\t                case 0x2F:  // /\n\t                case 0x3C:  // <\n\t                case 0x3E:  // >\n\t                case 0x5E:  // ^\n\t                case 0x7C:  // |\n\t                case 0x25:  // %\n\t                case 0x26:  // &\n\t                case 0x2A:  // *\n\t                    index += 2;\n\t                    return {\n\t                        type: Token.Punctuator,\n\t                        value: String.fromCharCode(code) + String.fromCharCode(code2),\n\t                        lineNumber: lineNumber,\n\t                        lineStart: lineStart,\n\t                        start: start,\n\t                        end: index\n\t                    };\n\t\n\t                case 0x21: // !\n\t                case 0x3D: // =\n\t                    index += 2;\n\t\n\t                    // !== and ===\n\t                    if (source.charCodeAt(index) === 0x3D) {\n\t                        ++index;\n\t                    }\n\t                    return {\n\t                        type: Token.Punctuator,\n\t                        value: source.slice(start, index),\n\t                        lineNumber: lineNumber,\n\t                        lineStart: lineStart,\n\t                        start: start,\n\t                        end: index\n\t                    };\n\t                }\n\t            }\n\t        }\n\t\n\t        // 4-character punctuator: >>>=\n\t\n\t        ch4 = source.substr(index, 4);\n\t\n\t        if (ch4 === '>>>=') {\n\t            index += 4;\n\t            return {\n\t                type: Token.Punctuator,\n\t                value: ch4,\n\t                lineNumber: lineNumber,\n\t                lineStart: lineStart,\n\t                start: start,\n\t                end: index\n\t            };\n\t        }\n\t\n\t        // 3-character punctuators: === !== >>> <<= >>=\n\t\n\t        ch3 = ch4.substr(0, 3);\n\t\n\t        if (ch3 === '>>>' || ch3 === '<<=' || ch3 === '>>=') {\n\t            index += 3;\n\t            return {\n\t                type: Token.Punctuator,\n\t                value: ch3,\n\t                lineNumber: lineNumber,\n\t                lineStart: lineStart,\n\t                start: start,\n\t                end: index\n\t            };\n\t        }\n\t\n\t        // Other 2-character punctuators: ++ -- << >> && ||\n\t        ch2 = ch3.substr(0, 2);\n\t\n\t        if ((ch1 === ch2[1] && ('+-<>&|'.indexOf(ch1) >= 0)) || ch2 === '=>') {\n\t            index += 2;\n\t            return {\n\t                type: Token.Punctuator,\n\t                value: ch2,\n\t                lineNumber: lineNumber,\n\t                lineStart: lineStart,\n\t                start: start,\n\t                end: index\n\t            };\n\t        }\n\t\n\t        // 1-character punctuators: < > = ! + - * % & | ^ /\n\t        if ('<>=!+-*%&|^/'.indexOf(ch1) >= 0) {\n\t            ++index;\n\t            return {\n\t                type: Token.Punctuator,\n\t                value: ch1,\n\t                lineNumber: lineNumber,\n\t                lineStart: lineStart,\n\t                start: start,\n\t                end: index\n\t            };\n\t        }\n\t\n\t        throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n\t    }\n\t\n\t    // 7.8.3 Numeric Literals\n\t\n\t    function scanHexLiteral(start) {\n\t        var number = '';\n\t\n\t        while (index < length) {\n\t            if (!isHexDigit(source[index])) {\n\t                break;\n\t            }\n\t            number += source[index++];\n\t        }\n\t\n\t        if (number.length === 0) {\n\t            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n\t        }\n\t\n\t        if (isIdentifierStart(source.charCodeAt(index))) {\n\t            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n\t        }\n\t\n\t        return {\n\t            type: Token.NumericLiteral,\n\t            value: parseInt('0x' + number, 16),\n\t            lineNumber: lineNumber,\n\t            lineStart: lineStart,\n\t            start: start,\n\t            end: index\n\t        };\n\t    }\n\t\n\t    function scanOctalLiteral(start) {\n\t        var number = '0' + source[index++];\n\t        while (index < length) {\n\t            if (!isOctalDigit(source[index])) {\n\t                break;\n\t            }\n\t            number += source[index++];\n\t        }\n\t\n\t        if (isIdentifierStart(source.charCodeAt(index)) || isDecimalDigit(source.charCodeAt(index))) {\n\t            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n\t        }\n\t\n\t        return {\n\t            type: Token.NumericLiteral,\n\t            value: parseInt(number, 8),\n\t            octal: true,\n\t            lineNumber: lineNumber,\n\t            lineStart: lineStart,\n\t            start: start,\n\t            end: index\n\t        };\n\t    }\n\t\n\t    function isImplicitOctalLiteral() {\n\t        var i, ch;\n\t\n\t        // Implicit octal, unless there is a non-octal digit.\n\t        // (Annex B.1.1 on Numeric Literals)\n\t        for (i = index + 1; i < length; ++i) {\n\t            ch = source[i];\n\t            if (ch === '8' || ch === '9') {\n\t                return false;\n\t            }\n\t            if (!isOctalDigit(ch)) {\n\t                return true;\n\t            }\n\t        }\n\t\n\t        return true;\n\t    }\n\t\n\t    function scanNumericLiteral() {\n\t        var number, start, ch;\n\t\n\t        ch = source[index];\n\t        assert(isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'),\n\t            'Numeric literal must start with a decimal digit or a decimal point');\n\t\n\t        start = index;\n\t        number = '';\n\t        if (ch !== '.') {\n\t            number = source[index++];\n\t            ch = source[index];\n\t\n\t            // Hex number starts with '0x'.\n\t            // Octal number starts with '0'.\n\t            if (number === '0') {\n\t                if (ch === 'x' || ch === 'X') {\n\t                    ++index;\n\t                    return scanHexLiteral(start);\n\t                }\n\t                if (isOctalDigit(ch)) {\n\t                    if (isImplicitOctalLiteral()) {\n\t                        return scanOctalLiteral(start);\n\t                    }\n\t                }\n\t            }\n\t\n\t            while (isDecimalDigit(source.charCodeAt(index))) {\n\t                number += source[index++];\n\t            }\n\t            ch = source[index];\n\t        }\n\t\n\t        if (ch === '.') {\n\t            number += source[index++];\n\t            while (isDecimalDigit(source.charCodeAt(index))) {\n\t                number += source[index++];\n\t            }\n\t            ch = source[index];\n\t        }\n\t\n\t        if (ch === 'e' || ch === 'E') {\n\t            number += source[index++];\n\t\n\t            ch = source[index];\n\t            if (ch === '+' || ch === '-') {\n\t                number += source[index++];\n\t            }\n\t            if (isDecimalDigit(source.charCodeAt(index))) {\n\t                while (isDecimalDigit(source.charCodeAt(index))) {\n\t                    number += source[index++];\n\t                }\n\t            } else {\n\t                throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n\t            }\n\t        }\n\t\n\t        if (isIdentifierStart(source.charCodeAt(index))) {\n\t            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n\t        }\n\t\n\t        return {\n\t            type: Token.NumericLiteral,\n\t            value: parseFloat(number),\n\t            lineNumber: lineNumber,\n\t            lineStart: lineStart,\n\t            start: start,\n\t            end: index\n\t        };\n\t    }\n\t\n\t    // 7.8.4 String Literals\n\t\n\t    function scanStringLiteral() {\n\t        var str = '', quote, start, ch, code, unescaped, restore, octal = false, startLineNumber, startLineStart;\n\t        startLineNumber = lineNumber;\n\t        startLineStart = lineStart;\n\t\n\t        quote = source[index];\n\t        assert((quote === '\\'' || quote === '\"'),\n\t            'String literal must starts with a quote');\n\t\n\t        start = index;\n\t        ++index;\n\t\n\t        while (index < length) {\n\t            ch = source[index++];\n\t\n\t            if (ch === quote) {\n\t                quote = '';\n\t                break;\n\t            } else if (ch === '\\\\') {\n\t                ch = source[index++];\n\t                if (!ch || !isLineTerminator(ch.charCodeAt(0))) {\n\t                    switch (ch) {\n\t                    case 'u':\n\t                    case 'x':\n\t                        restore = index;\n\t                        unescaped = scanHexEscape(ch);\n\t                        if (unescaped) {\n\t                            str += unescaped;\n\t                        } else {\n\t                            index = restore;\n\t                            str += ch;\n\t                        }\n\t                        break;\n\t                    case 'n':\n\t                        str += '\\n';\n\t                        break;\n\t                    case 'r':\n\t                        str += '\\r';\n\t                        break;\n\t                    case 't':\n\t                        str += '\\t';\n\t                        break;\n\t                    case 'b':\n\t                        str += '\\b';\n\t                        break;\n\t                    case 'f':\n\t                        str += '\\f';\n\t                        break;\n\t                    case 'v':\n\t                        str += '\\x0B';\n\t                        break;\n\t\n\t                    default:\n\t                        if (isOctalDigit(ch)) {\n\t                            code = '01234567'.indexOf(ch);\n\t\n\t                            // \\0 is not octal escape sequence\n\t                            if (code !== 0) {\n\t                                octal = true;\n\t                            }\n\t\n\t                            if (index < length && isOctalDigit(source[index])) {\n\t                                octal = true;\n\t                                code = code * 8 + '01234567'.indexOf(source[index++]);\n\t\n\t                                // 3 digits are only allowed when string starts\n\t                                // with 0, 1, 2, 3\n\t                                if ('0123'.indexOf(ch) >= 0 &&\n\t                                        index < length &&\n\t                                        isOctalDigit(source[index])) {\n\t                                    code = code * 8 + '01234567'.indexOf(source[index++]);\n\t                                }\n\t                            }\n\t                            str += String.fromCharCode(code);\n\t                        } else {\n\t                            str += ch;\n\t                        }\n\t                        break;\n\t                    }\n\t                } else {\n\t                    ++lineNumber;\n\t                    if (ch ===  '\\r' && source[index] === '\\n') {\n\t                        ++index;\n\t                    }\n\t                    lineStart = index;\n\t                }\n\t            } else if (isLineTerminator(ch.charCodeAt(0))) {\n\t                break;\n\t            } else {\n\t                str += ch;\n\t            }\n\t        }\n\t\n\t        if (quote !== '') {\n\t            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n\t        }\n\t\n\t        return {\n\t            type: Token.StringLiteral,\n\t            value: str,\n\t            octal: octal,\n\t            startLineNumber: startLineNumber,\n\t            startLineStart: startLineStart,\n\t            lineNumber: lineNumber,\n\t            lineStart: lineStart,\n\t            start: start,\n\t            end: index\n\t        };\n\t    }\n\t\n\t    function testRegExp(pattern, flags) {\n\t        var value;\n\t        try {\n\t            value = new RegExp(pattern, flags);\n\t        } catch (e) {\n\t            throwError({}, Messages.InvalidRegExp);\n\t        }\n\t        return value;\n\t    }\n\t\n\t    function scanRegExpBody() {\n\t        var ch, str, classMarker, terminated, body;\n\t\n\t        ch = source[index];\n\t        assert(ch === '/', 'Regular expression literal must start with a slash');\n\t        str = source[index++];\n\t\n\t        classMarker = false;\n\t        terminated = false;\n\t        while (index < length) {\n\t            ch = source[index++];\n\t            str += ch;\n\t            if (ch === '\\\\') {\n\t                ch = source[index++];\n\t                // ECMA-262 7.8.5\n\t                if (isLineTerminator(ch.charCodeAt(0))) {\n\t                    throwError({}, Messages.UnterminatedRegExp);\n\t                }\n\t                str += ch;\n\t            } else if (isLineTerminator(ch.charCodeAt(0))) {\n\t                throwError({}, Messages.UnterminatedRegExp);\n\t            } else if (classMarker) {\n\t                if (ch === ']') {\n\t                    classMarker = false;\n\t                }\n\t            } else {\n\t                if (ch === '/') {\n\t                    terminated = true;\n\t                    break;\n\t                } else if (ch === '[') {\n\t                    classMarker = true;\n\t                }\n\t            }\n\t        }\n\t\n\t        if (!terminated) {\n\t            throwError({}, Messages.UnterminatedRegExp);\n\t        }\n\t\n\t        // Exclude leading and trailing slash.\n\t        body = str.substr(1, str.length - 2);\n\t        return {\n\t            value: body,\n\t            literal: str\n\t        };\n\t    }\n\t\n\t    function scanRegExpFlags() {\n\t        var ch, str, flags, restore;\n\t\n\t        str = '';\n\t        flags = '';\n\t        while (index < length) {\n\t            ch = source[index];\n\t            if (!isIdentifierPart(ch.charCodeAt(0))) {\n\t                break;\n\t            }\n\t\n\t            ++index;\n\t            if (ch === '\\\\' && index < length) {\n\t                ch = source[index];\n\t                if (ch === 'u') {\n\t                    ++index;\n\t                    restore = index;\n\t                    ch = scanHexEscape('u');\n\t                    if (ch) {\n\t                        flags += ch;\n\t                        for (str += '\\\\u'; restore < index; ++restore) {\n\t                            str += source[restore];\n\t                        }\n\t                    } else {\n\t                        index = restore;\n\t                        flags += 'u';\n\t                        str += '\\\\u';\n\t                    }\n\t                    throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n\t                } else {\n\t                    str += '\\\\';\n\t                    throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n\t                }\n\t            } else {\n\t                flags += ch;\n\t                str += ch;\n\t            }\n\t        }\n\t\n\t        return {\n\t            value: flags,\n\t            literal: str\n\t        };\n\t    }\n\t\n\t    function scanRegExp() {\n\t        var start, body, flags, pattern, value;\n\t\n\t        lookahead = null;\n\t        skipComment();\n\t        start = index;\n\t\n\t        body = scanRegExpBody();\n\t        flags = scanRegExpFlags();\n\t        value = testRegExp(body.value, flags.value);\n\t\n\t        if (extra.tokenize) {\n\t            return {\n\t                type: Token.RegularExpression,\n\t                value: value,\n\t                lineNumber: lineNumber,\n\t                lineStart: lineStart,\n\t                start: start,\n\t                end: index\n\t            };\n\t        }\n\t\n\t        return {\n\t            literal: body.literal + flags.literal,\n\t            value: value,\n\t            start: start,\n\t            end: index\n\t        };\n\t    }\n\t\n\t    function collectRegex() {\n\t        var pos, loc, regex, token;\n\t\n\t        skipComment();\n\t\n\t        pos = index;\n\t        loc = {\n\t            start: {\n\t                line: lineNumber,\n\t                column: index - lineStart\n\t            }\n\t        };\n\t\n\t        regex = scanRegExp();\n\t        loc.end = {\n\t            line: lineNumber,\n\t            column: index - lineStart\n\t        };\n\t\n\t        /* istanbul ignore next */\n\t        if (!extra.tokenize) {\n\t            // Pop the previous token, which is likely '/' or '/='\n\t            if (extra.tokens.length > 0) {\n\t                token = extra.tokens[extra.tokens.length - 1];\n\t                if (token.range[0] === pos && token.type === 'Punctuator') {\n\t                    if (token.value === '/' || token.value === '/=') {\n\t                        extra.tokens.pop();\n\t                    }\n\t                }\n\t            }\n\t\n\t            extra.tokens.push({\n\t                type: 'RegularExpression',\n\t                value: regex.literal,\n\t                range: [pos, index],\n\t                loc: loc\n\t            });\n\t        }\n\t\n\t        return regex;\n\t    }\n\t\n\t    function isIdentifierName(token) {\n\t        return token.type === Token.Identifier ||\n\t            token.type === Token.Keyword ||\n\t            token.type === Token.BooleanLiteral ||\n\t            token.type === Token.NullLiteral;\n\t    }\n\t\n\t    function advanceSlash() {\n\t        var prevToken,\n\t            checkToken;\n\t        // Using the following algorithm:\n\t        // https://github.com/mozilla/sweet.js/wiki/design\n\t        prevToken = extra.tokens[extra.tokens.length - 1];\n\t        if (!prevToken) {\n\t            // Nothing before that: it cannot be a division.\n\t            return collectRegex();\n\t        }\n\t        if (prevToken.type === 'Punctuator') {\n\t            if (prevToken.value === ']') {\n\t                return scanPunctuator();\n\t            }\n\t            if (prevToken.value === ')') {\n\t                checkToken = extra.tokens[extra.openParenToken - 1];\n\t                if (checkToken &&\n\t                        checkToken.type === 'Keyword' &&\n\t                        (checkToken.value === 'if' ||\n\t                         checkToken.value === 'while' ||\n\t                         checkToken.value === 'for' ||\n\t                         checkToken.value === 'with')) {\n\t                    return collectRegex();\n\t                }\n\t                return scanPunctuator();\n\t            }\n\t            if (prevToken.value === '}') {\n\t                // Dividing a function by anything makes little sense,\n\t                // but we have to check for that.\n\t                if (extra.tokens[extra.openCurlyToken - 3] &&\n\t                        extra.tokens[extra.openCurlyToken - 3].type === 'Keyword') {\n\t                    // Anonymous function.\n\t                    checkToken = extra.tokens[extra.openCurlyToken - 4];\n\t                    if (!checkToken) {\n\t                        return scanPunctuator();\n\t                    }\n\t                } else if (extra.tokens[extra.openCurlyToken - 4] &&\n\t                        extra.tokens[extra.openCurlyToken - 4].type === 'Keyword') {\n\t                    // Named function.\n\t                    checkToken = extra.tokens[extra.openCurlyToken - 5];\n\t                    if (!checkToken) {\n\t                        return collectRegex();\n\t                    }\n\t                } else {\n\t                    return scanPunctuator();\n\t                }\n\t                // checkToken determines whether the function is\n\t                // a declaration or an expression.\n\t                if (FnExprTokens.indexOf(checkToken.value) >= 0) {\n\t                    // It is an expression.\n\t                    return scanPunctuator();\n\t                }\n\t                // It is a declaration.\n\t                return collectRegex();\n\t            }\n\t            return collectRegex();\n\t        }\n\t        if (prevToken.type === 'Keyword' && prevToken.value !== 'this') {\n\t            return collectRegex();\n\t        }\n\t        return scanPunctuator();\n\t    }\n\t\n\t    function advance() {\n\t        var ch;\n\t\n\t        skipComment();\n\t\n\t        if (index >= length) {\n\t            return {\n\t                type: Token.EOF,\n\t                lineNumber: lineNumber,\n\t                lineStart: lineStart,\n\t                start: index,\n\t                end: index\n\t            };\n\t        }\n\t\n\t        ch = source.charCodeAt(index);\n\t\n\t        if (isIdentifierStart(ch)) {\n\t            return scanIdentifier();\n\t        }\n\t\n\t        // Very common: ( and ) and ;\n\t        if (ch === 0x28 || ch === 0x29 || ch === 0x3B) {\n\t            return scanPunctuator();\n\t        }\n\t\n\t        // String literal starts with single quote (U+0027) or double quote (U+0022).\n\t        if (ch === 0x27 || ch === 0x22) {\n\t            return scanStringLiteral();\n\t        }\n\t\n\t\n\t        // Dot (.) U+002E can also start a floating-point number, hence the need\n\t        // to check the next character.\n\t        if (ch === 0x2E) {\n\t            if (isDecimalDigit(source.charCodeAt(index + 1))) {\n\t                return scanNumericLiteral();\n\t            }\n\t            return scanPunctuator();\n\t        }\n\t\n\t        if (isDecimalDigit(ch)) {\n\t            return scanNumericLiteral();\n\t        }\n\t\n\t        // Slash (/) U+002F can also start a regex.\n\t        if (extra.tokenize && ch === 0x2F) {\n\t            return advanceSlash();\n\t        }\n\t\n\t        return scanPunctuator();\n\t    }\n\t\n\t    function collectToken() {\n\t        var loc, token, range, value;\n\t\n\t        skipComment();\n\t        loc = {\n\t            start: {\n\t                line: lineNumber,\n\t                column: index - lineStart\n\t            }\n\t        };\n\t\n\t        token = advance();\n\t        loc.end = {\n\t            line: lineNumber,\n\t            column: index - lineStart\n\t        };\n\t\n\t        if (token.type !== Token.EOF) {\n\t            value = source.slice(token.start, token.end);\n\t            extra.tokens.push({\n\t                type: TokenName[token.type],\n\t                value: value,\n\t                range: [token.start, token.end],\n\t                loc: loc\n\t            });\n\t        }\n\t\n\t        return token;\n\t    }\n\t\n\t    function lex() {\n\t        var token;\n\t\n\t        token = lookahead;\n\t        index = token.end;\n\t        lineNumber = token.lineNumber;\n\t        lineStart = token.lineStart;\n\t\n\t        lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n\t\n\t        index = token.end;\n\t        lineNumber = token.lineNumber;\n\t        lineStart = token.lineStart;\n\t\n\t        return token;\n\t    }\n\t\n\t    function peek() {\n\t        var pos, line, start;\n\t\n\t        pos = index;\n\t        line = lineNumber;\n\t        start = lineStart;\n\t        lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n\t        index = pos;\n\t        lineNumber = line;\n\t        lineStart = start;\n\t    }\n\t\n\t    function Position(line, column) {\n\t        this.line = line;\n\t        this.column = column;\n\t    }\n\t\n\t    function SourceLocation(startLine, startColumn, line, column) {\n\t        this.start = new Position(startLine, startColumn);\n\t        this.end = new Position(line, column);\n\t    }\n\t\n\t    SyntaxTreeDelegate = {\n\t\n\t        name: 'SyntaxTree',\n\t\n\t        processComment: function (node) {\n\t            var lastChild, trailingComments;\n\t\n\t            if (node.type === Syntax.Program) {\n\t                if (node.body.length > 0) {\n\t                    return;\n\t                }\n\t            }\n\t\n\t            if (extra.trailingComments.length > 0) {\n\t                if (extra.trailingComments[0].range[0] >= node.range[1]) {\n\t                    trailingComments = extra.trailingComments;\n\t                    extra.trailingComments = [];\n\t                } else {\n\t                    extra.trailingComments.length = 0;\n\t                }\n\t            } else {\n\t                if (extra.bottomRightStack.length > 0 &&\n\t                        extra.bottomRightStack[extra.bottomRightStack.length - 1].trailingComments &&\n\t                        extra.bottomRightStack[extra.bottomRightStack.length - 1].trailingComments[0].range[0] >= node.range[1]) {\n\t                    trailingComments = extra.bottomRightStack[extra.bottomRightStack.length - 1].trailingComments;\n\t                    delete extra.bottomRightStack[extra.bottomRightStack.length - 1].trailingComments;\n\t                }\n\t            }\n\t\n\t            // Eating the stack.\n\t            while (extra.bottomRightStack.length > 0 && extra.bottomRightStack[extra.bottomRightStack.length - 1].range[0] >= node.range[0]) {\n\t                lastChild = extra.bottomRightStack.pop();\n\t            }\n\t\n\t            if (lastChild) {\n\t                if (lastChild.leadingComments && lastChild.leadingComments[lastChild.leadingComments.length - 1].range[1] <= node.range[0]) {\n\t                    node.leadingComments = lastChild.leadingComments;\n\t                    delete lastChild.leadingComments;\n\t                }\n\t            } else if (extra.leadingComments.length > 0 && extra.leadingComments[extra.leadingComments.length - 1].range[1] <= node.range[0]) {\n\t                node.leadingComments = extra.leadingComments;\n\t                extra.leadingComments = [];\n\t            }\n\t\n\t\n\t            if (trailingComments) {\n\t                node.trailingComments = trailingComments;\n\t            }\n\t\n\t            extra.bottomRightStack.push(node);\n\t        },\n\t\n\t        markEnd: function (node, startToken) {\n\t            if (extra.range) {\n\t                node.range = [startToken.start, index];\n\t            }\n\t            if (extra.loc) {\n\t                node.loc = new SourceLocation(\n\t                    startToken.startLineNumber === undefined ?  startToken.lineNumber : startToken.startLineNumber,\n\t                    startToken.start - (startToken.startLineStart === undefined ?  startToken.lineStart : startToken.startLineStart),\n\t                    lineNumber,\n\t                    index - lineStart\n\t                );\n\t                this.postProcess(node);\n\t            }\n\t\n\t            if (extra.attachComment) {\n\t                this.processComment(node);\n\t            }\n\t            return node;\n\t        },\n\t\n\t        postProcess: function (node) {\n\t            if (extra.source) {\n\t                node.loc.source = extra.source;\n\t            }\n\t            return node;\n\t        },\n\t\n\t        createArrayExpression: function (elements) {\n\t            return {\n\t                type: Syntax.ArrayExpression,\n\t                elements: elements\n\t            };\n\t        },\n\t\n\t        createAssignmentExpression: function (operator, left, right) {\n\t            return {\n\t                type: Syntax.AssignmentExpression,\n\t                operator: operator,\n\t                left: left,\n\t                right: right\n\t            };\n\t        },\n\t\n\t        createBinaryExpression: function (operator, left, right) {\n\t            var type = (operator === '||' || operator === '&&') ? Syntax.LogicalExpression :\n\t                        Syntax.BinaryExpression;\n\t            return {\n\t                type: type,\n\t                operator: operator,\n\t                left: left,\n\t                right: right\n\t            };\n\t        },\n\t\n\t        createBlockStatement: function (body) {\n\t            return {\n\t                type: Syntax.BlockStatement,\n\t                body: body\n\t            };\n\t        },\n\t\n\t        createBreakStatement: function (label) {\n\t            return {\n\t                type: Syntax.BreakStatement,\n\t                label: label\n\t            };\n\t        },\n\t\n\t        createCallExpression: function (callee, args) {\n\t            return {\n\t                type: Syntax.CallExpression,\n\t                callee: callee,\n\t                'arguments': args\n\t            };\n\t        },\n\t\n\t        createCatchClause: function (param, body) {\n\t            return {\n\t                type: Syntax.CatchClause,\n\t                param: param,\n\t                body: body\n\t            };\n\t        },\n\t\n\t        createConditionalExpression: function (test, consequent, alternate) {\n\t            return {\n\t                type: Syntax.ConditionalExpression,\n\t                test: test,\n\t                consequent: consequent,\n\t                alternate: alternate\n\t            };\n\t        },\n\t\n\t        createContinueStatement: function (label) {\n\t            return {\n\t                type: Syntax.ContinueStatement,\n\t                label: label\n\t            };\n\t        },\n\t\n\t        createDebuggerStatement: function () {\n\t            return {\n\t                type: Syntax.DebuggerStatement\n\t            };\n\t        },\n\t\n\t        createDoWhileStatement: function (body, test) {\n\t            return {\n\t                type: Syntax.DoWhileStatement,\n\t                body: body,\n\t                test: test\n\t            };\n\t        },\n\t\n\t        createEmptyStatement: function () {\n\t            return {\n\t                type: Syntax.EmptyStatement\n\t            };\n\t        },\n\t\n\t        createExpressionStatement: function (expression) {\n\t            return {\n\t                type: Syntax.ExpressionStatement,\n\t                expression: expression\n\t            };\n\t        },\n\t\n\t        createForStatement: function (init, test, update, body) {\n\t            return {\n\t                type: Syntax.ForStatement,\n\t                init: init,\n\t                test: test,\n\t                update: update,\n\t                body: body\n\t            };\n\t        },\n\t\n\t        createForInStatement: function (left, right, body) {\n\t            return {\n\t                type: Syntax.ForInStatement,\n\t                left: left,\n\t                right: right,\n\t                body: body,\n\t                each: false\n\t            };\n\t        },\n\t\n\t        createFunctionDeclaration: function (id, params, defaults, body) {\n\t            return {\n\t                type: Syntax.FunctionDeclaration,\n\t                id: id,\n\t                params: params,\n\t                defaults: defaults,\n\t                body: body,\n\t                rest: null,\n\t                generator: false,\n\t                expression: false\n\t            };\n\t        },\n\t\n\t        createFunctionExpression: function (id, params, defaults, body) {\n\t            return {\n\t                type: Syntax.FunctionExpression,\n\t                id: id,\n\t                params: params,\n\t                defaults: defaults,\n\t                body: body,\n\t                rest: null,\n\t                generator: false,\n\t                expression: false\n\t            };\n\t        },\n\t\n\t        createIdentifier: function (name) {\n\t            return {\n\t                type: Syntax.Identifier,\n\t                name: name\n\t            };\n\t        },\n\t\n\t        createIfStatement: function (test, consequent, alternate) {\n\t            return {\n\t                type: Syntax.IfStatement,\n\t                test: test,\n\t                consequent: consequent,\n\t                alternate: alternate\n\t            };\n\t        },\n\t\n\t        createLabeledStatement: function (label, body) {\n\t            return {\n\t                type: Syntax.LabeledStatement,\n\t                label: label,\n\t                body: body\n\t            };\n\t        },\n\t\n\t        createLiteral: function (token) {\n\t            return {\n\t                type: Syntax.Literal,\n\t                value: token.value,\n\t                raw: source.slice(token.start, token.end)\n\t            };\n\t        },\n\t\n\t        createMemberExpression: function (accessor, object, property) {\n\t            return {\n\t                type: Syntax.MemberExpression,\n\t                computed: accessor === '[',\n\t                object: object,\n\t                property: property\n\t            };\n\t        },\n\t\n\t        createNewExpression: function (callee, args) {\n\t            return {\n\t                type: Syntax.NewExpression,\n\t                callee: callee,\n\t                'arguments': args\n\t            };\n\t        },\n\t\n\t        createObjectExpression: function (properties) {\n\t            return {\n\t                type: Syntax.ObjectExpression,\n\t                properties: properties\n\t            };\n\t        },\n\t\n\t        createPostfixExpression: function (operator, argument) {\n\t            return {\n\t                type: Syntax.UpdateExpression,\n\t                operator: operator,\n\t                argument: argument,\n\t                prefix: false\n\t            };\n\t        },\n\t\n\t        createProgram: function (body) {\n\t            return {\n\t                type: Syntax.Program,\n\t                body: body\n\t            };\n\t        },\n\t\n\t        createProperty: function (kind, key, value) {\n\t            return {\n\t                type: Syntax.Property,\n\t                key: key,\n\t                value: value,\n\t                kind: kind\n\t            };\n\t        },\n\t\n\t        createReturnStatement: function (argument) {\n\t            return {\n\t                type: Syntax.ReturnStatement,\n\t                argument: argument\n\t            };\n\t        },\n\t\n\t        createSequenceExpression: function (expressions) {\n\t            return {\n\t                type: Syntax.SequenceExpression,\n\t                expressions: expressions\n\t            };\n\t        },\n\t\n\t        createSwitchCase: function (test, consequent) {\n\t            return {\n\t                type: Syntax.SwitchCase,\n\t                test: test,\n\t                consequent: consequent\n\t            };\n\t        },\n\t\n\t        createSwitchStatement: function (discriminant, cases) {\n\t            return {\n\t                type: Syntax.SwitchStatement,\n\t                discriminant: discriminant,\n\t                cases: cases\n\t            };\n\t        },\n\t\n\t        createThisExpression: function () {\n\t            return {\n\t                type: Syntax.ThisExpression\n\t            };\n\t        },\n\t\n\t        createThrowStatement: function (argument) {\n\t            return {\n\t                type: Syntax.ThrowStatement,\n\t                argument: argument\n\t            };\n\t        },\n\t\n\t        createTryStatement: function (block, guardedHandlers, handlers, finalizer) {\n\t            return {\n\t                type: Syntax.TryStatement,\n\t                block: block,\n\t                guardedHandlers: guardedHandlers,\n\t                handlers: handlers,\n\t                finalizer: finalizer\n\t            };\n\t        },\n\t\n\t        createUnaryExpression: function (operator, argument) {\n\t            if (operator === '++' || operator === '--') {\n\t                return {\n\t                    type: Syntax.UpdateExpression,\n\t                    operator: operator,\n\t                    argument: argument,\n\t                    prefix: true\n\t                };\n\t            }\n\t            return {\n\t                type: Syntax.UnaryExpression,\n\t                operator: operator,\n\t                argument: argument,\n\t                prefix: true\n\t            };\n\t        },\n\t\n\t        createVariableDeclaration: function (declarations, kind) {\n\t            return {\n\t                type: Syntax.VariableDeclaration,\n\t                declarations: declarations,\n\t                kind: kind\n\t            };\n\t        },\n\t\n\t        createVariableDeclarator: function (id, init) {\n\t            return {\n\t                type: Syntax.VariableDeclarator,\n\t                id: id,\n\t                init: init\n\t            };\n\t        },\n\t\n\t        createWhileStatement: function (test, body) {\n\t            return {\n\t                type: Syntax.WhileStatement,\n\t                test: test,\n\t                body: body\n\t            };\n\t        },\n\t\n\t        createWithStatement: function (object, body) {\n\t            return {\n\t                type: Syntax.WithStatement,\n\t                object: object,\n\t                body: body\n\t            };\n\t        }\n\t    };\n\t\n\t    // Return true if there is a line terminator before the next token.\n\t\n\t    function peekLineTerminator() {\n\t        var pos, line, start, found;\n\t\n\t        pos = index;\n\t        line = lineNumber;\n\t        start = lineStart;\n\t        skipComment();\n\t        found = lineNumber !== line;\n\t        index = pos;\n\t        lineNumber = line;\n\t        lineStart = start;\n\t\n\t        return found;\n\t    }\n\t\n\t    // Throw an exception\n\t\n\t    function throwError(token, messageFormat) {\n\t        var error,\n\t            args = Array.prototype.slice.call(arguments, 2),\n\t            msg = messageFormat.replace(\n\t                /%(\\d)/g,\n\t                function (whole, index) {\n\t                    assert(index < args.length, 'Message reference must be in range');\n\t                    return args[index];\n\t                }\n\t            );\n\t\n\t        if (typeof token.lineNumber === 'number') {\n\t            error = new Error('Line ' + token.lineNumber + ': ' + msg);\n\t            error.index = token.start;\n\t            error.lineNumber = token.lineNumber;\n\t            error.column = token.start - lineStart + 1;\n\t        } else {\n\t            error = new Error('Line ' + lineNumber + ': ' + msg);\n\t            error.index = index;\n\t            error.lineNumber = lineNumber;\n\t            error.column = index - lineStart + 1;\n\t        }\n\t\n\t        error.description = msg;\n\t        throw error;\n\t    }\n\t\n\t    function throwErrorTolerant() {\n\t        try {\n\t            throwError.apply(null, arguments);\n\t        } catch (e) {\n\t            if (extra.errors) {\n\t                extra.errors.push(e);\n\t            } else {\n\t                throw e;\n\t            }\n\t        }\n\t    }\n\t\n\t\n\t    // Throw an exception because of the token.\n\t\n\t    function throwUnexpected(token) {\n\t        if (token.type === Token.EOF) {\n\t            throwError(token, Messages.UnexpectedEOS);\n\t        }\n\t\n\t        if (token.type === Token.NumericLiteral) {\n\t            throwError(token, Messages.UnexpectedNumber);\n\t        }\n\t\n\t        if (token.type === Token.StringLiteral) {\n\t            throwError(token, Messages.UnexpectedString);\n\t        }\n\t\n\t        if (token.type === Token.Identifier) {\n\t            throwError(token, Messages.UnexpectedIdentifier);\n\t        }\n\t\n\t        if (token.type === Token.Keyword) {\n\t            if (isFutureReservedWord(token.value)) {\n\t                throwError(token, Messages.UnexpectedReserved);\n\t            } else if (strict && isStrictModeReservedWord(token.value)) {\n\t                throwErrorTolerant(token, Messages.StrictReservedWord);\n\t                return;\n\t            }\n\t            throwError(token, Messages.UnexpectedToken, token.value);\n\t        }\n\t\n\t        // BooleanLiteral, NullLiteral, or Punctuator.\n\t        throwError(token, Messages.UnexpectedToken, token.value);\n\t    }\n\t\n\t    // Expect the next token to match the specified punctuator.\n\t    // If not, an exception will be thrown.\n\t\n\t    function expect(value) {\n\t        var token = lex();\n\t        if (token.type !== Token.Punctuator || token.value !== value) {\n\t            throwUnexpected(token);\n\t        }\n\t    }\n\t\n\t    // Expect the next token to match the specified keyword.\n\t    // If not, an exception will be thrown.\n\t\n\t    function expectKeyword(keyword) {\n\t        var token = lex();\n\t        if (token.type !== Token.Keyword || token.value !== keyword) {\n\t            throwUnexpected(token);\n\t        }\n\t    }\n\t\n\t    // Return true if the next token matches the specified punctuator.\n\t\n\t    function match(value) {\n\t        return lookahead.type === Token.Punctuator && lookahead.value === value;\n\t    }\n\t\n\t    // Return true if the next token matches the specified keyword\n\t\n\t    function matchKeyword(keyword) {\n\t        return lookahead.type === Token.Keyword && lookahead.value === keyword;\n\t    }\n\t\n\t    // Return true if the next token is an assignment operator\n\t\n\t    function matchAssign() {\n\t        var op;\n\t\n\t        if (lookahead.type !== Token.Punctuator) {\n\t            return false;\n\t        }\n\t        op = lookahead.value;\n\t        return op === '=' ||\n\t            op === '*=' ||\n\t            op === '/=' ||\n\t            op === '%=' ||\n\t            op === '+=' ||\n\t            op === '-=' ||\n\t            op === '<<=' ||\n\t            op === '>>=' ||\n\t            op === '>>>=' ||\n\t            op === '&=' ||\n\t            op === '^=' ||\n\t            op === '|=';\n\t    }\n\t\n\t    function consumeSemicolon() {\n\t        var line, oldIndex = index, oldLineNumber = lineNumber,\n\t            oldLineStart = lineStart, oldLookahead = lookahead;\n\t\n\t        // Catch the very common case first: immediately a semicolon (U+003B).\n\t        if (source.charCodeAt(index) === 0x3B || match(';')) {\n\t            lex();\n\t            return;\n\t        }\n\t\n\t        line = lineNumber;\n\t        skipComment();\n\t        if (lineNumber !== line) {\n\t            index = oldIndex;\n\t            lineNumber = oldLineNumber;\n\t            lineStart = oldLineStart;\n\t            lookahead = oldLookahead;\n\t            return;\n\t        }\n\t\n\t        if (lookahead.type !== Token.EOF && !match('}')) {\n\t            throwUnexpected(lookahead);\n\t        }\n\t    }\n\t\n\t    // Return true if provided expression is LeftHandSideExpression\n\t\n\t    function isLeftHandSide(expr) {\n\t        return expr.type === Syntax.Identifier || expr.type === Syntax.MemberExpression;\n\t    }\n\t\n\t    // 11.1.4 Array Initialiser\n\t\n\t    function parseArrayInitialiser() {\n\t        var elements = [], startToken;\n\t\n\t        startToken = lookahead;\n\t        expect('[');\n\t\n\t        while (!match(']')) {\n\t            if (match(',')) {\n\t                lex();\n\t                elements.push(null);\n\t            } else {\n\t                elements.push(parseAssignmentExpression());\n\t\n\t                if (!match(']')) {\n\t                    expect(',');\n\t                }\n\t            }\n\t        }\n\t\n\t        lex();\n\t\n\t        return delegate.markEnd(delegate.createArrayExpression(elements), startToken);\n\t    }\n\t\n\t    // 11.1.5 Object Initialiser\n\t\n\t    function parsePropertyFunction(param, first) {\n\t        var previousStrict, body, startToken;\n\t\n\t        previousStrict = strict;\n\t        startToken = lookahead;\n\t        body = parseFunctionSourceElements();\n\t        if (first && strict && isRestrictedWord(param[0].name)) {\n\t            throwErrorTolerant(first, Messages.StrictParamName);\n\t        }\n\t        strict = previousStrict;\n\t        return delegate.markEnd(delegate.createFunctionExpression(null, param, [], body), startToken);\n\t    }\n\t\n\t    function parseObjectPropertyKey() {\n\t        var token, startToken;\n\t\n\t        startToken = lookahead;\n\t        token = lex();\n\t\n\t        // Note: This function is called only from parseObjectProperty(), where\n\t        // EOF and Punctuator tokens are already filtered out.\n\t\n\t        if (token.type === Token.StringLiteral || token.type === Token.NumericLiteral) {\n\t            if (strict && token.octal) {\n\t                throwErrorTolerant(token, Messages.StrictOctalLiteral);\n\t            }\n\t            return delegate.markEnd(delegate.createLiteral(token), startToken);\n\t        }\n\t\n\t        return delegate.markEnd(delegate.createIdentifier(token.value), startToken);\n\t    }\n\t\n\t    function parseObjectProperty() {\n\t        var token, key, id, value, param, startToken;\n\t\n\t        token = lookahead;\n\t        startToken = lookahead;\n\t\n\t        if (token.type === Token.Identifier) {\n\t\n\t            id = parseObjectPropertyKey();\n\t\n\t            // Property Assignment: Getter and Setter.\n\t\n\t            if (token.value === 'get' && !match(':')) {\n\t                key = parseObjectPropertyKey();\n\t                expect('(');\n\t                expect(')');\n\t                value = parsePropertyFunction([]);\n\t                return delegate.markEnd(delegate.createProperty('get', key, value), startToken);\n\t            }\n\t            if (token.value === 'set' && !match(':')) {\n\t                key = parseObjectPropertyKey();\n\t                expect('(');\n\t                token = lookahead;\n\t                if (token.type !== Token.Identifier) {\n\t                    expect(')');\n\t                    throwErrorTolerant(token, Messages.UnexpectedToken, token.value);\n\t                    value = parsePropertyFunction([]);\n\t                } else {\n\t                    param = [ parseVariableIdentifier() ];\n\t                    expect(')');\n\t                    value = parsePropertyFunction(param, token);\n\t                }\n\t                return delegate.markEnd(delegate.createProperty('set', key, value), startToken);\n\t            }\n\t            expect(':');\n\t            value = parseAssignmentExpression();\n\t            return delegate.markEnd(delegate.createProperty('init', id, value), startToken);\n\t        }\n\t        if (token.type === Token.EOF || token.type === Token.Punctuator) {\n\t            throwUnexpected(token);\n\t        } else {\n\t            key = parseObjectPropertyKey();\n\t            expect(':');\n\t            value = parseAssignmentExpression();\n\t            return delegate.markEnd(delegate.createProperty('init', key, value), startToken);\n\t        }\n\t    }\n\t\n\t    function parseObjectInitialiser() {\n\t        var properties = [], property, name, key, kind, map = {}, toString = String, startToken;\n\t\n\t        startToken = lookahead;\n\t\n\t        expect('{');\n\t\n\t        while (!match('}')) {\n\t            property = parseObjectProperty();\n\t\n\t            if (property.key.type === Syntax.Identifier) {\n\t                name = property.key.name;\n\t            } else {\n\t                name = toString(property.key.value);\n\t            }\n\t            kind = (property.kind === 'init') ? PropertyKind.Data : (property.kind === 'get') ? PropertyKind.Get : PropertyKind.Set;\n\t\n\t            key = '$' + name;\n\t            if (Object.prototype.hasOwnProperty.call(map, key)) {\n\t                if (map[key] === PropertyKind.Data) {\n\t                    if (strict && kind === PropertyKind.Data) {\n\t                        throwErrorTolerant({}, Messages.StrictDuplicateProperty);\n\t                    } else if (kind !== PropertyKind.Data) {\n\t                        throwErrorTolerant({}, Messages.AccessorDataProperty);\n\t                    }\n\t                } else {\n\t                    if (kind === PropertyKind.Data) {\n\t                        throwErrorTolerant({}, Messages.AccessorDataProperty);\n\t                    } else if (map[key] & kind) {\n\t                        throwErrorTolerant({}, Messages.AccessorGetSet);\n\t                    }\n\t                }\n\t                map[key] |= kind;\n\t            } else {\n\t                map[key] = kind;\n\t            }\n\t\n\t            properties.push(property);\n\t\n\t            if (!match('}')) {\n\t                expect(',');\n\t            }\n\t        }\n\t\n\t        expect('}');\n\t\n\t        return delegate.markEnd(delegate.createObjectExpression(properties), startToken);\n\t    }\n\t\n\t    // 11.1.6 The Grouping Operator\n\t\n\t    function parseGroupExpression() {\n\t        var expr;\n\t\n\t        expect('(');\n\t\n\t        expr = parseExpression();\n\t\n\t        expect(')');\n\t\n\t        return expr;\n\t    }\n\t\n\t\n\t    // 11.1 Primary Expressions\n\t\n\t    function parsePrimaryExpression() {\n\t        var type, token, expr, startToken;\n\t\n\t        if (match('(')) {\n\t            return parseGroupExpression();\n\t        }\n\t\n\t        if (match('[')) {\n\t            return parseArrayInitialiser();\n\t        }\n\t\n\t        if (match('{')) {\n\t            return parseObjectInitialiser();\n\t        }\n\t\n\t        type = lookahead.type;\n\t        startToken = lookahead;\n\t\n\t        if (type === Token.Identifier) {\n\t            expr =  delegate.createIdentifier(lex().value);\n\t        } else if (type === Token.StringLiteral || type === Token.NumericLiteral) {\n\t            if (strict && lookahead.octal) {\n\t                throwErrorTolerant(lookahead, Messages.StrictOctalLiteral);\n\t            }\n\t            expr = delegate.createLiteral(lex());\n\t        } else if (type === Token.Keyword) {\n\t            if (matchKeyword('function')) {\n\t                return parseFunctionExpression();\n\t            }\n\t            if (matchKeyword('this')) {\n\t                lex();\n\t                expr = delegate.createThisExpression();\n\t            } else {\n\t                throwUnexpected(lex());\n\t            }\n\t        } else if (type === Token.BooleanLiteral) {\n\t            token = lex();\n\t            token.value = (token.value === 'true');\n\t            expr = delegate.createLiteral(token);\n\t        } else if (type === Token.NullLiteral) {\n\t            token = lex();\n\t            token.value = null;\n\t            expr = delegate.createLiteral(token);\n\t        } else if (match('/') || match('/=')) {\n\t            if (typeof extra.tokens !== 'undefined') {\n\t                expr = delegate.createLiteral(collectRegex());\n\t            } else {\n\t                expr = delegate.createLiteral(scanRegExp());\n\t            }\n\t            peek();\n\t        } else {\n\t            throwUnexpected(lex());\n\t        }\n\t\n\t        return delegate.markEnd(expr, startToken);\n\t    }\n\t\n\t    // 11.2 Left-Hand-Side Expressions\n\t\n\t    function parseArguments() {\n\t        var args = [];\n\t\n\t        expect('(');\n\t\n\t        if (!match(')')) {\n\t            while (index < length) {\n\t                args.push(parseAssignmentExpression());\n\t                if (match(')')) {\n\t                    break;\n\t                }\n\t                expect(',');\n\t            }\n\t        }\n\t\n\t        expect(')');\n\t\n\t        return args;\n\t    }\n\t\n\t    function parseNonComputedProperty() {\n\t        var token, startToken;\n\t\n\t        startToken = lookahead;\n\t        token = lex();\n\t\n\t        if (!isIdentifierName(token)) {\n\t            throwUnexpected(token);\n\t        }\n\t\n\t        return delegate.markEnd(delegate.createIdentifier(token.value), startToken);\n\t    }\n\t\n\t    function parseNonComputedMember() {\n\t        expect('.');\n\t\n\t        return parseNonComputedProperty();\n\t    }\n\t\n\t    function parseComputedMember() {\n\t        var expr;\n\t\n\t        expect('[');\n\t\n\t        expr = parseExpression();\n\t\n\t        expect(']');\n\t\n\t        return expr;\n\t    }\n\t\n\t    function parseNewExpression() {\n\t        var callee, args, startToken;\n\t\n\t        startToken = lookahead;\n\t        expectKeyword('new');\n\t        callee = parseLeftHandSideExpression();\n\t        args = match('(') ? parseArguments() : [];\n\t\n\t        return delegate.markEnd(delegate.createNewExpression(callee, args), startToken);\n\t    }\n\t\n\t    function parseLeftHandSideExpressionAllowCall() {\n\t        var expr, args, property, startToken, previousAllowIn = state.allowIn;\n\t\n\t        startToken = lookahead;\n\t        state.allowIn = true;\n\t        expr = matchKeyword('new') ? parseNewExpression() : parsePrimaryExpression();\n\t\n\t        for (;;) {\n\t            if (match('.')) {\n\t                property = parseNonComputedMember();\n\t                expr = delegate.createMemberExpression('.', expr, property);\n\t            } else if (match('(')) {\n\t                args = parseArguments();\n\t                expr = delegate.createCallExpression(expr, args);\n\t            } else if (match('[')) {\n\t                property = parseComputedMember();\n\t                expr = delegate.createMemberExpression('[', expr, property);\n\t            } else {\n\t                break;\n\t            }\n\t            delegate.markEnd(expr, startToken);\n\t        }\n\t        state.allowIn = previousAllowIn;\n\t\n\t        return expr;\n\t    }\n\t\n\t    function parseLeftHandSideExpression() {\n\t        var expr, property, startToken;\n\t        assert(state.allowIn, 'callee of new expression always allow in keyword.');\n\t\n\t        startToken = lookahead;\n\t\n\t        expr = matchKeyword('new') ? parseNewExpression() : parsePrimaryExpression();\n\t\n\t        while (match('.') || match('[')) {\n\t            if (match('[')) {\n\t                property = parseComputedMember();\n\t                expr = delegate.createMemberExpression('[', expr, property);\n\t            } else {\n\t                property = parseNonComputedMember();\n\t                expr = delegate.createMemberExpression('.', expr, property);\n\t            }\n\t            delegate.markEnd(expr, startToken);\n\t        }\n\t        return expr;\n\t    }\n\t\n\t    // 11.3 Postfix Expressions\n\t\n\t    function parsePostfixExpression() {\n\t        var expr, token, startToken = lookahead;\n\t\n\t        expr = parseLeftHandSideExpressionAllowCall();\n\t\n\t        if (lookahead.type === Token.Punctuator) {\n\t            if ((match('++') || match('--')) && !peekLineTerminator()) {\n\t                // 11.3.1, 11.3.2\n\t                if (strict && expr.type === Syntax.Identifier && isRestrictedWord(expr.name)) {\n\t                    throwErrorTolerant({}, Messages.StrictLHSPostfix);\n\t                }\n\t\n\t                if (!isLeftHandSide(expr)) {\n\t                    throwErrorTolerant({}, Messages.InvalidLHSInAssignment);\n\t                }\n\t\n\t                token = lex();\n\t                expr = delegate.markEnd(delegate.createPostfixExpression(token.value, expr), startToken);\n\t            }\n\t        }\n\t\n\t        return expr;\n\t    }\n\t\n\t    // 11.4 Unary Operators\n\t\n\t    function parseUnaryExpression() {\n\t        var token, expr, startToken;\n\t\n\t        if (lookahead.type !== Token.Punctuator && lookahead.type !== Token.Keyword) {\n\t            expr = parsePostfixExpression();\n\t        } else if (match('++') || match('--')) {\n\t            startToken = lookahead;\n\t            token = lex();\n\t            expr = parseUnaryExpression();\n\t            // 11.4.4, 11.4.5\n\t            if (strict && expr.type === Syntax.Identifier && isRestrictedWord(expr.name)) {\n\t                throwErrorTolerant({}, Messages.StrictLHSPrefix);\n\t            }\n\t\n\t            if (!isLeftHandSide(expr)) {\n\t                throwErrorTolerant({}, Messages.InvalidLHSInAssignment);\n\t            }\n\t\n\t            expr = delegate.createUnaryExpression(token.value, expr);\n\t            expr = delegate.markEnd(expr, startToken);\n\t        } else if (match('+') || match('-') || match('~') || match('!')) {\n\t            startToken = lookahead;\n\t            token = lex();\n\t            expr = parseUnaryExpression();\n\t            expr = delegate.createUnaryExpression(token.value, expr);\n\t            expr = delegate.markEnd(expr, startToken);\n\t        } else if (matchKeyword('delete') || matchKeyword('void') || matchKeyword('typeof')) {\n\t            startToken = lookahead;\n\t            token = lex();\n\t            expr = parseUnaryExpression();\n\t            expr = delegate.createUnaryExpression(token.value, expr);\n\t            expr = delegate.markEnd(expr, startToken);\n\t            if (strict && expr.operator === 'delete' && expr.argument.type === Syntax.Identifier) {\n\t                throwErrorTolerant({}, Messages.StrictDelete);\n\t            }\n\t        } else {\n\t            expr = parsePostfixExpression();\n\t        }\n\t\n\t        return expr;\n\t    }\n\t\n\t    function binaryPrecedence(token, allowIn) {\n\t        var prec = 0;\n\t\n\t        if (token.type !== Token.Punctuator && token.type !== Token.Keyword) {\n\t            return 0;\n\t        }\n\t\n\t        switch (token.value) {\n\t        case '||':\n\t            prec = 1;\n\t            break;\n\t\n\t        case '&&':\n\t            prec = 2;\n\t            break;\n\t\n\t        case '|':\n\t            prec = 3;\n\t            break;\n\t\n\t        case '^':\n\t            prec = 4;\n\t            break;\n\t\n\t        case '&':\n\t            prec = 5;\n\t            break;\n\t\n\t        case '==':\n\t        case '!=':\n\t        case '===':\n\t        case '!==':\n\t            prec = 6;\n\t            break;\n\t\n\t        case '<':\n\t        case '>':\n\t        case '<=':\n\t        case '>=':\n\t        case 'instanceof':\n\t            prec = 7;\n\t            break;\n\t\n\t        case 'in':\n\t            prec = allowIn ? 7 : 0;\n\t            break;\n\t\n\t        case '<<':\n\t        case '>>':\n\t        case '>>>':\n\t            prec = 8;\n\t            break;\n\t\n\t        case '+':\n\t        case '-':\n\t            prec = 9;\n\t            break;\n\t\n\t        case '*':\n\t        case '/':\n\t        case '%':\n\t            prec = 11;\n\t            break;\n\t\n\t        default:\n\t            break;\n\t        }\n\t\n\t        return prec;\n\t    }\n\t\n\t    // 11.5 Multiplicative Operators\n\t    // 11.6 Additive Operators\n\t    // 11.7 Bitwise Shift Operators\n\t    // 11.8 Relational Operators\n\t    // 11.9 Equality Operators\n\t    // 11.10 Binary Bitwise Operators\n\t    // 11.11 Binary Logical Operators\n\t\n\t    function parseBinaryExpression() {\n\t        var marker, markers, expr, token, prec, stack, right, operator, left, i;\n\t\n\t        marker = lookahead;\n\t        left = parseUnaryExpression();\n\t\n\t        token = lookahead;\n\t        prec = binaryPrecedence(token, state.allowIn);\n\t        if (prec === 0) {\n\t            return left;\n\t        }\n\t        token.prec = prec;\n\t        lex();\n\t\n\t        markers = [marker, lookahead];\n\t        right = parseUnaryExpression();\n\t\n\t        stack = [left, token, right];\n\t\n\t        while ((prec = binaryPrecedence(lookahead, state.allowIn)) > 0) {\n\t\n\t            // Reduce: make a binary expression from the three topmost entries.\n\t            while ((stack.length > 2) && (prec <= stack[stack.length - 2].prec)) {\n\t                right = stack.pop();\n\t                operator = stack.pop().value;\n\t                left = stack.pop();\n\t                expr = delegate.createBinaryExpression(operator, left, right);\n\t                markers.pop();\n\t                marker = markers[markers.length - 1];\n\t                delegate.markEnd(expr, marker);\n\t                stack.push(expr);\n\t            }\n\t\n\t            // Shift.\n\t            token = lex();\n\t            token.prec = prec;\n\t            stack.push(token);\n\t            markers.push(lookahead);\n\t            expr = parseUnaryExpression();\n\t            stack.push(expr);\n\t        }\n\t\n\t        // Final reduce to clean-up the stack.\n\t        i = stack.length - 1;\n\t        expr = stack[i];\n\t        markers.pop();\n\t        while (i > 1) {\n\t            expr = delegate.createBinaryExpression(stack[i - 1].value, stack[i - 2], expr);\n\t            i -= 2;\n\t            marker = markers.pop();\n\t            delegate.markEnd(expr, marker);\n\t        }\n\t\n\t        return expr;\n\t    }\n\t\n\t\n\t    // 11.12 Conditional Operator\n\t\n\t    function parseConditionalExpression() {\n\t        var expr, previousAllowIn, consequent, alternate, startToken;\n\t\n\t        startToken = lookahead;\n\t\n\t        expr = parseBinaryExpression();\n\t\n\t        if (match('?')) {\n\t            lex();\n\t            previousAllowIn = state.allowIn;\n\t            state.allowIn = true;\n\t            consequent = parseAssignmentExpression();\n\t            state.allowIn = previousAllowIn;\n\t            expect(':');\n\t            alternate = parseAssignmentExpression();\n\t\n\t            expr = delegate.createConditionalExpression(expr, consequent, alternate);\n\t            delegate.markEnd(expr, startToken);\n\t        }\n\t\n\t        return expr;\n\t    }\n\t\n\t    // 11.13 Assignment Operators\n\t\n\t    function parseAssignmentExpression() {\n\t        var token, left, right, node, startToken;\n\t\n\t        token = lookahead;\n\t        startToken = lookahead;\n\t\n\t        node = left = parseConditionalExpression();\n\t\n\t        if (matchAssign()) {\n\t            // LeftHandSideExpression\n\t            if (!isLeftHandSide(left)) {\n\t                throwErrorTolerant({}, Messages.InvalidLHSInAssignment);\n\t            }\n\t\n\t            // 11.13.1\n\t            if (strict && left.type === Syntax.Identifier && isRestrictedWord(left.name)) {\n\t                throwErrorTolerant(token, Messages.StrictLHSAssignment);\n\t            }\n\t\n\t            token = lex();\n\t            right = parseAssignmentExpression();\n\t            node = delegate.markEnd(delegate.createAssignmentExpression(token.value, left, right), startToken);\n\t        }\n\t\n\t        return node;\n\t    }\n\t\n\t    // 11.14 Comma Operator\n\t\n\t    function parseExpression() {\n\t        var expr, startToken = lookahead;\n\t\n\t        expr = parseAssignmentExpression();\n\t\n\t        if (match(',')) {\n\t            expr = delegate.createSequenceExpression([ expr ]);\n\t\n\t            while (index < length) {\n\t                if (!match(',')) {\n\t                    break;\n\t                }\n\t                lex();\n\t                expr.expressions.push(parseAssignmentExpression());\n\t            }\n\t\n\t            delegate.markEnd(expr, startToken);\n\t        }\n\t\n\t        return expr;\n\t    }\n\t\n\t    // 12.1 Block\n\t\n\t    function parseStatementList() {\n\t        var list = [],\n\t            statement;\n\t\n\t        while (index < length) {\n\t            if (match('}')) {\n\t                break;\n\t            }\n\t            statement = parseSourceElement();\n\t            if (typeof statement === 'undefined') {\n\t                break;\n\t            }\n\t            list.push(statement);\n\t        }\n\t\n\t        return list;\n\t    }\n\t\n\t    function parseBlock() {\n\t        var block, startToken;\n\t\n\t        startToken = lookahead;\n\t        expect('{');\n\t\n\t        block = parseStatementList();\n\t\n\t        expect('}');\n\t\n\t        return delegate.markEnd(delegate.createBlockStatement(block), startToken);\n\t    }\n\t\n\t    // 12.2 Variable Statement\n\t\n\t    function parseVariableIdentifier() {\n\t        var token, startToken;\n\t\n\t        startToken = lookahead;\n\t        token = lex();\n\t\n\t        if (token.type !== Token.Identifier) {\n\t            throwUnexpected(token);\n\t        }\n\t\n\t        return delegate.markEnd(delegate.createIdentifier(token.value), startToken);\n\t    }\n\t\n\t    function parseVariableDeclaration(kind) {\n\t        var init = null, id, startToken;\n\t\n\t        startToken = lookahead;\n\t        id = parseVariableIdentifier();\n\t\n\t        // 12.2.1\n\t        if (strict && isRestrictedWord(id.name)) {\n\t            throwErrorTolerant({}, Messages.StrictVarName);\n\t        }\n\t\n\t        if (kind === 'const') {\n\t            expect('=');\n\t            init = parseAssignmentExpression();\n\t        } else if (match('=')) {\n\t            lex();\n\t            init = parseAssignmentExpression();\n\t        }\n\t\n\t        return delegate.markEnd(delegate.createVariableDeclarator(id, init), startToken);\n\t    }\n\t\n\t    function parseVariableDeclarationList(kind) {\n\t        var list = [];\n\t\n\t        do {\n\t            list.push(parseVariableDeclaration(kind));\n\t            if (!match(',')) {\n\t                break;\n\t            }\n\t            lex();\n\t        } while (index < length);\n\t\n\t        return list;\n\t    }\n\t\n\t    function parseVariableStatement() {\n\t        var declarations;\n\t\n\t        expectKeyword('var');\n\t\n\t        declarations = parseVariableDeclarationList();\n\t\n\t        consumeSemicolon();\n\t\n\t        return delegate.createVariableDeclaration(declarations, 'var');\n\t    }\n\t\n\t    // kind may be `const` or `let`\n\t    // Both are experimental and not in the specification yet.\n\t    // see http://wiki.ecmascript.org/doku.php?id=harmony:const\n\t    // and http://wiki.ecmascript.org/doku.php?id=harmony:let\n\t    function parseConstLetDeclaration(kind) {\n\t        var declarations, startToken;\n\t\n\t        startToken = lookahead;\n\t\n\t        expectKeyword(kind);\n\t\n\t        declarations = parseVariableDeclarationList(kind);\n\t\n\t        consumeSemicolon();\n\t\n\t        return delegate.markEnd(delegate.createVariableDeclaration(declarations, kind), startToken);\n\t    }\n\t\n\t    // 12.3 Empty Statement\n\t\n\t    function parseEmptyStatement() {\n\t        expect(';');\n\t        return delegate.createEmptyStatement();\n\t    }\n\t\n\t    // 12.4 Expression Statement\n\t\n\t    function parseExpressionStatement() {\n\t        var expr = parseExpression();\n\t        consumeSemicolon();\n\t        return delegate.createExpressionStatement(expr);\n\t    }\n\t\n\t    // 12.5 If statement\n\t\n\t    function parseIfStatement() {\n\t        var test, consequent, alternate;\n\t\n\t        expectKeyword('if');\n\t\n\t        expect('(');\n\t\n\t        test = parseExpression();\n\t\n\t        expect(')');\n\t\n\t        consequent = parseStatement();\n\t\n\t        if (matchKeyword('else')) {\n\t            lex();\n\t            alternate = parseStatement();\n\t        } else {\n\t            alternate = null;\n\t        }\n\t\n\t        return delegate.createIfStatement(test, consequent, alternate);\n\t    }\n\t\n\t    // 12.6 Iteration Statements\n\t\n\t    function parseDoWhileStatement() {\n\t        var body, test, oldInIteration;\n\t\n\t        expectKeyword('do');\n\t\n\t        oldInIteration = state.inIteration;\n\t        state.inIteration = true;\n\t\n\t        body = parseStatement();\n\t\n\t        state.inIteration = oldInIteration;\n\t\n\t        expectKeyword('while');\n\t\n\t        expect('(');\n\t\n\t        test = parseExpression();\n\t\n\t        expect(')');\n\t\n\t        if (match(';')) {\n\t            lex();\n\t        }\n\t\n\t        return delegate.createDoWhileStatement(body, test);\n\t    }\n\t\n\t    function parseWhileStatement() {\n\t        var test, body, oldInIteration;\n\t\n\t        expectKeyword('while');\n\t\n\t        expect('(');\n\t\n\t        test = parseExpression();\n\t\n\t        expect(')');\n\t\n\t        oldInIteration = state.inIteration;\n\t        state.inIteration = true;\n\t\n\t        body = parseStatement();\n\t\n\t        state.inIteration = oldInIteration;\n\t\n\t        return delegate.createWhileStatement(test, body);\n\t    }\n\t\n\t    function parseForVariableDeclaration() {\n\t        var token, declarations, startToken;\n\t\n\t        startToken = lookahead;\n\t        token = lex();\n\t        declarations = parseVariableDeclarationList();\n\t\n\t        return delegate.markEnd(delegate.createVariableDeclaration(declarations, token.value), startToken);\n\t    }\n\t\n\t    function parseForStatement() {\n\t        var init, test, update, left, right, body, oldInIteration, previousAllowIn = state.allowIn;\n\t\n\t        init = test = update = null;\n\t\n\t        expectKeyword('for');\n\t\n\t        expect('(');\n\t\n\t        if (match(';')) {\n\t            lex();\n\t        } else {\n\t            if (matchKeyword('var') || matchKeyword('let')) {\n\t                state.allowIn = false;\n\t                init = parseForVariableDeclaration();\n\t                state.allowIn = previousAllowIn;\n\t\n\t                if (init.declarations.length === 1 && matchKeyword('in')) {\n\t                    lex();\n\t                    left = init;\n\t                    right = parseExpression();\n\t                    init = null;\n\t                }\n\t            } else {\n\t                state.allowIn = false;\n\t                init = parseExpression();\n\t                state.allowIn = previousAllowIn;\n\t\n\t                if (matchKeyword('in')) {\n\t                    // LeftHandSideExpression\n\t                    if (!isLeftHandSide(init)) {\n\t                        throwErrorTolerant({}, Messages.InvalidLHSInForIn);\n\t                    }\n\t\n\t                    lex();\n\t                    left = init;\n\t                    right = parseExpression();\n\t                    init = null;\n\t                }\n\t            }\n\t\n\t            if (typeof left === 'undefined') {\n\t                expect(';');\n\t            }\n\t        }\n\t\n\t        if (typeof left === 'undefined') {\n\t\n\t            if (!match(';')) {\n\t                test = parseExpression();\n\t            }\n\t            expect(';');\n\t\n\t            if (!match(')')) {\n\t                update = parseExpression();\n\t            }\n\t        }\n\t\n\t        expect(')');\n\t\n\t        oldInIteration = state.inIteration;\n\t        state.inIteration = true;\n\t\n\t        body = parseStatement();\n\t\n\t        state.inIteration = oldInIteration;\n\t\n\t        return (typeof left === 'undefined') ?\n\t                delegate.createForStatement(init, test, update, body) :\n\t                delegate.createForInStatement(left, right, body);\n\t    }\n\t\n\t    // 12.7 The continue statement\n\t\n\t    function parseContinueStatement() {\n\t        var label = null, key;\n\t\n\t        expectKeyword('continue');\n\t\n\t        // Optimize the most common form: 'continue;'.\n\t        if (source.charCodeAt(index) === 0x3B) {\n\t            lex();\n\t\n\t            if (!state.inIteration) {\n\t                throwError({}, Messages.IllegalContinue);\n\t            }\n\t\n\t            return delegate.createContinueStatement(null);\n\t        }\n\t\n\t        if (peekLineTerminator()) {\n\t            if (!state.inIteration) {\n\t                throwError({}, Messages.IllegalContinue);\n\t            }\n\t\n\t            return delegate.createContinueStatement(null);\n\t        }\n\t\n\t        if (lookahead.type === Token.Identifier) {\n\t            label = parseVariableIdentifier();\n\t\n\t            key = '$' + label.name;\n\t            if (!Object.prototype.hasOwnProperty.call(state.labelSet, key)) {\n\t                throwError({}, Messages.UnknownLabel, label.name);\n\t            }\n\t        }\n\t\n\t        consumeSemicolon();\n\t\n\t        if (label === null && !state.inIteration) {\n\t            throwError({}, Messages.IllegalContinue);\n\t        }\n\t\n\t        return delegate.createContinueStatement(label);\n\t    }\n\t\n\t    // 12.8 The break statement\n\t\n\t    function parseBreakStatement() {\n\t        var label = null, key;\n\t\n\t        expectKeyword('break');\n\t\n\t        // Catch the very common case first: immediately a semicolon (U+003B).\n\t        if (source.charCodeAt(index) === 0x3B) {\n\t            lex();\n\t\n\t            if (!(state.inIteration || state.inSwitch)) {\n\t                throwError({}, Messages.IllegalBreak);\n\t            }\n\t\n\t            return delegate.createBreakStatement(null);\n\t        }\n\t\n\t        if (peekLineTerminator()) {\n\t            if (!(state.inIteration || state.inSwitch)) {\n\t                throwError({}, Messages.IllegalBreak);\n\t            }\n\t\n\t            return delegate.createBreakStatement(null);\n\t        }\n\t\n\t        if (lookahead.type === Token.Identifier) {\n\t            label = parseVariableIdentifier();\n\t\n\t            key = '$' + label.name;\n\t            if (!Object.prototype.hasOwnProperty.call(state.labelSet, key)) {\n\t                throwError({}, Messages.UnknownLabel, label.name);\n\t            }\n\t        }\n\t\n\t        consumeSemicolon();\n\t\n\t        if (label === null && !(state.inIteration || state.inSwitch)) {\n\t            throwError({}, Messages.IllegalBreak);\n\t        }\n\t\n\t        return delegate.createBreakStatement(label);\n\t    }\n\t\n\t    // 12.9 The return statement\n\t\n\t    function parseReturnStatement() {\n\t        var argument = null;\n\t\n\t        expectKeyword('return');\n\t\n\t        if (!state.inFunctionBody) {\n\t            throwErrorTolerant({}, Messages.IllegalReturn);\n\t        }\n\t\n\t        // 'return' followed by a space and an identifier is very common.\n\t        if (source.charCodeAt(index) === 0x20) {\n\t            if (isIdentifierStart(source.charCodeAt(index + 1))) {\n\t                argument = parseExpression();\n\t                consumeSemicolon();\n\t                return delegate.createReturnStatement(argument);\n\t            }\n\t        }\n\t\n\t        if (peekLineTerminator()) {\n\t            return delegate.createReturnStatement(null);\n\t        }\n\t\n\t        if (!match(';')) {\n\t            if (!match('}') && lookahead.type !== Token.EOF) {\n\t                argument = parseExpression();\n\t            }\n\t        }\n\t\n\t        consumeSemicolon();\n\t\n\t        return delegate.createReturnStatement(argument);\n\t    }\n\t\n\t    // 12.10 The with statement\n\t\n\t    function parseWithStatement() {\n\t        var object, body;\n\t\n\t        if (strict) {\n\t            // TODO(ikarienator): Should we update the test cases instead?\n\t            skipComment();\n\t            throwErrorTolerant({}, Messages.StrictModeWith);\n\t        }\n\t\n\t        expectKeyword('with');\n\t\n\t        expect('(');\n\t\n\t        object = parseExpression();\n\t\n\t        expect(')');\n\t\n\t        body = parseStatement();\n\t\n\t        return delegate.createWithStatement(object, body);\n\t    }\n\t\n\t    // 12.10 The swith statement\n\t\n\t    function parseSwitchCase() {\n\t        var test, consequent = [], statement, startToken;\n\t\n\t        startToken = lookahead;\n\t        if (matchKeyword('default')) {\n\t            lex();\n\t            test = null;\n\t        } else {\n\t            expectKeyword('case');\n\t            test = parseExpression();\n\t        }\n\t        expect(':');\n\t\n\t        while (index < length) {\n\t            if (match('}') || matchKeyword('default') || matchKeyword('case')) {\n\t                break;\n\t            }\n\t            statement = parseStatement();\n\t            consequent.push(statement);\n\t        }\n\t\n\t        return delegate.markEnd(delegate.createSwitchCase(test, consequent), startToken);\n\t    }\n\t\n\t    function parseSwitchStatement() {\n\t        var discriminant, cases, clause, oldInSwitch, defaultFound;\n\t\n\t        expectKeyword('switch');\n\t\n\t        expect('(');\n\t\n\t        discriminant = parseExpression();\n\t\n\t        expect(')');\n\t\n\t        expect('{');\n\t\n\t        cases = [];\n\t\n\t        if (match('}')) {\n\t            lex();\n\t            return delegate.createSwitchStatement(discriminant, cases);\n\t        }\n\t\n\t        oldInSwitch = state.inSwitch;\n\t        state.inSwitch = true;\n\t        defaultFound = false;\n\t\n\t        while (index < length) {\n\t            if (match('}')) {\n\t                break;\n\t            }\n\t            clause = parseSwitchCase();\n\t            if (clause.test === null) {\n\t                if (defaultFound) {\n\t                    throwError({}, Messages.MultipleDefaultsInSwitch);\n\t                }\n\t                defaultFound = true;\n\t            }\n\t            cases.push(clause);\n\t        }\n\t\n\t        state.inSwitch = oldInSwitch;\n\t\n\t        expect('}');\n\t\n\t        return delegate.createSwitchStatement(discriminant, cases);\n\t    }\n\t\n\t    // 12.13 The throw statement\n\t\n\t    function parseThrowStatement() {\n\t        var argument;\n\t\n\t        expectKeyword('throw');\n\t\n\t        if (peekLineTerminator()) {\n\t            throwError({}, Messages.NewlineAfterThrow);\n\t        }\n\t\n\t        argument = parseExpression();\n\t\n\t        consumeSemicolon();\n\t\n\t        return delegate.createThrowStatement(argument);\n\t    }\n\t\n\t    // 12.14 The try statement\n\t\n\t    function parseCatchClause() {\n\t        var param, body, startToken;\n\t\n\t        startToken = lookahead;\n\t        expectKeyword('catch');\n\t\n\t        expect('(');\n\t        if (match(')')) {\n\t            throwUnexpected(lookahead);\n\t        }\n\t\n\t        param = parseVariableIdentifier();\n\t        // 12.14.1\n\t        if (strict && isRestrictedWord(param.name)) {\n\t            throwErrorTolerant({}, Messages.StrictCatchVariable);\n\t        }\n\t\n\t        expect(')');\n\t        body = parseBlock();\n\t        return delegate.markEnd(delegate.createCatchClause(param, body), startToken);\n\t    }\n\t\n\t    function parseTryStatement() {\n\t        var block, handlers = [], finalizer = null;\n\t\n\t        expectKeyword('try');\n\t\n\t        block = parseBlock();\n\t\n\t        if (matchKeyword('catch')) {\n\t            handlers.push(parseCatchClause());\n\t        }\n\t\n\t        if (matchKeyword('finally')) {\n\t            lex();\n\t            finalizer = parseBlock();\n\t        }\n\t\n\t        if (handlers.length === 0 && !finalizer) {\n\t            throwError({}, Messages.NoCatchOrFinally);\n\t        }\n\t\n\t        return delegate.createTryStatement(block, [], handlers, finalizer);\n\t    }\n\t\n\t    // 12.15 The debugger statement\n\t\n\t    function parseDebuggerStatement() {\n\t        expectKeyword('debugger');\n\t\n\t        consumeSemicolon();\n\t\n\t        return delegate.createDebuggerStatement();\n\t    }\n\t\n\t    // 12 Statements\n\t\n\t    function parseStatement() {\n\t        var type = lookahead.type,\n\t            expr,\n\t            labeledBody,\n\t            key,\n\t            startToken;\n\t\n\t        if (type === Token.EOF) {\n\t            throwUnexpected(lookahead);\n\t        }\n\t\n\t        if (type === Token.Punctuator && lookahead.value === '{') {\n\t            return parseBlock();\n\t        }\n\t\n\t        startToken = lookahead;\n\t\n\t        if (type === Token.Punctuator) {\n\t            switch (lookahead.value) {\n\t            case ';':\n\t                return delegate.markEnd(parseEmptyStatement(), startToken);\n\t            case '(':\n\t                return delegate.markEnd(parseExpressionStatement(), startToken);\n\t            default:\n\t                break;\n\t            }\n\t        }\n\t\n\t        if (type === Token.Keyword) {\n\t            switch (lookahead.value) {\n\t            case 'break':\n\t                return delegate.markEnd(parseBreakStatement(), startToken);\n\t            case 'continue':\n\t                return delegate.markEnd(parseContinueStatement(), startToken);\n\t            case 'debugger':\n\t                return delegate.markEnd(parseDebuggerStatement(), startToken);\n\t            case 'do':\n\t                return delegate.markEnd(parseDoWhileStatement(), startToken);\n\t            case 'for':\n\t                return delegate.markEnd(parseForStatement(), startToken);\n\t            case 'function':\n\t                return delegate.markEnd(parseFunctionDeclaration(), startToken);\n\t            case 'if':\n\t                return delegate.markEnd(parseIfStatement(), startToken);\n\t            case 'return':\n\t                return delegate.markEnd(parseReturnStatement(), startToken);\n\t            case 'switch':\n\t                return delegate.markEnd(parseSwitchStatement(), startToken);\n\t            case 'throw':\n\t                return delegate.markEnd(parseThrowStatement(), startToken);\n\t            case 'try':\n\t                return delegate.markEnd(parseTryStatement(), startToken);\n\t            case 'var':\n\t                return delegate.markEnd(parseVariableStatement(), startToken);\n\t            case 'while':\n\t                return delegate.markEnd(parseWhileStatement(), startToken);\n\t            case 'with':\n\t                return delegate.markEnd(parseWithStatement(), startToken);\n\t            default:\n\t                break;\n\t            }\n\t        }\n\t\n\t        expr = parseExpression();\n\t\n\t        // 12.12 Labelled Statements\n\t        if ((expr.type === Syntax.Identifier) && match(':')) {\n\t            lex();\n\t\n\t            key = '$' + expr.name;\n\t            if (Object.prototype.hasOwnProperty.call(state.labelSet, key)) {\n\t                throwError({}, Messages.Redeclaration, 'Label', expr.name);\n\t            }\n\t\n\t            state.labelSet[key] = true;\n\t            labeledBody = parseStatement();\n\t            delete state.labelSet[key];\n\t            return delegate.markEnd(delegate.createLabeledStatement(expr, labeledBody), startToken);\n\t        }\n\t\n\t        consumeSemicolon();\n\t\n\t        return delegate.markEnd(delegate.createExpressionStatement(expr), startToken);\n\t    }\n\t\n\t    // 13 Function Definition\n\t\n\t    function parseFunctionSourceElements() {\n\t        var sourceElement, sourceElements = [], token, directive, firstRestricted,\n\t            oldLabelSet, oldInIteration, oldInSwitch, oldInFunctionBody, startToken;\n\t\n\t        startToken = lookahead;\n\t        expect('{');\n\t\n\t        while (index < length) {\n\t            if (lookahead.type !== Token.StringLiteral) {\n\t                break;\n\t            }\n\t            token = lookahead;\n\t\n\t            sourceElement = parseSourceElement();\n\t            sourceElements.push(sourceElement);\n\t            if (sourceElement.expression.type !== Syntax.Literal) {\n\t                // this is not directive\n\t                break;\n\t            }\n\t            directive = source.slice(token.start + 1, token.end - 1);\n\t            if (directive === 'use strict') {\n\t                strict = true;\n\t                if (firstRestricted) {\n\t                    throwErrorTolerant(firstRestricted, Messages.StrictOctalLiteral);\n\t                }\n\t            } else {\n\t                if (!firstRestricted && token.octal) {\n\t                    firstRestricted = token;\n\t                }\n\t            }\n\t        }\n\t\n\t        oldLabelSet = state.labelSet;\n\t        oldInIteration = state.inIteration;\n\t        oldInSwitch = state.inSwitch;\n\t        oldInFunctionBody = state.inFunctionBody;\n\t\n\t        state.labelSet = {};\n\t        state.inIteration = false;\n\t        state.inSwitch = false;\n\t        state.inFunctionBody = true;\n\t\n\t        while (index < length) {\n\t            if (match('}')) {\n\t                break;\n\t            }\n\t            sourceElement = parseSourceElement();\n\t            if (typeof sourceElement === 'undefined') {\n\t                break;\n\t            }\n\t            sourceElements.push(sourceElement);\n\t        }\n\t\n\t        expect('}');\n\t\n\t        state.labelSet = oldLabelSet;\n\t        state.inIteration = oldInIteration;\n\t        state.inSwitch = oldInSwitch;\n\t        state.inFunctionBody = oldInFunctionBody;\n\t\n\t        return delegate.markEnd(delegate.createBlockStatement(sourceElements), startToken);\n\t    }\n\t\n\t    function parseParams(firstRestricted) {\n\t        var param, params = [], token, stricted, paramSet, key, message;\n\t        expect('(');\n\t\n\t        if (!match(')')) {\n\t            paramSet = {};\n\t            while (index < length) {\n\t                token = lookahead;\n\t                param = parseVariableIdentifier();\n\t                key = '$' + token.value;\n\t                if (strict) {\n\t                    if (isRestrictedWord(token.value)) {\n\t                        stricted = token;\n\t                        message = Messages.StrictParamName;\n\t                    }\n\t                    if (Object.prototype.hasOwnProperty.call(paramSet, key)) {\n\t                        stricted = token;\n\t                        message = Messages.StrictParamDupe;\n\t                    }\n\t                } else if (!firstRestricted) {\n\t                    if (isRestrictedWord(token.value)) {\n\t                        firstRestricted = token;\n\t                        message = Messages.StrictParamName;\n\t                    } else if (isStrictModeReservedWord(token.value)) {\n\t                        firstRestricted = token;\n\t                        message = Messages.StrictReservedWord;\n\t                    } else if (Object.prototype.hasOwnProperty.call(paramSet, key)) {\n\t                        firstRestricted = token;\n\t                        message = Messages.StrictParamDupe;\n\t                    }\n\t                }\n\t                params.push(param);\n\t                paramSet[key] = true;\n\t                if (match(')')) {\n\t                    break;\n\t                }\n\t                expect(',');\n\t            }\n\t        }\n\t\n\t        expect(')');\n\t\n\t        return {\n\t            params: params,\n\t            stricted: stricted,\n\t            firstRestricted: firstRestricted,\n\t            message: message\n\t        };\n\t    }\n\t\n\t    function parseFunctionDeclaration() {\n\t        var id, params = [], body, token, stricted, tmp, firstRestricted, message, previousStrict, startToken;\n\t\n\t        startToken = lookahead;\n\t\n\t        expectKeyword('function');\n\t        token = lookahead;\n\t        id = parseVariableIdentifier();\n\t        if (strict) {\n\t            if (isRestrictedWord(token.value)) {\n\t                throwErrorTolerant(token, Messages.StrictFunctionName);\n\t            }\n\t        } else {\n\t            if (isRestrictedWord(token.value)) {\n\t                firstRestricted = token;\n\t                message = Messages.StrictFunctionName;\n\t            } else if (isStrictModeReservedWord(token.value)) {\n\t                firstRestricted = token;\n\t                message = Messages.StrictReservedWord;\n\t            }\n\t        }\n\t\n\t        tmp = parseParams(firstRestricted);\n\t        params = tmp.params;\n\t        stricted = tmp.stricted;\n\t        firstRestricted = tmp.firstRestricted;\n\t        if (tmp.message) {\n\t            message = tmp.message;\n\t        }\n\t\n\t        previousStrict = strict;\n\t        body = parseFunctionSourceElements();\n\t        if (strict && firstRestricted) {\n\t            throwError(firstRestricted, message);\n\t        }\n\t        if (strict && stricted) {\n\t            throwErrorTolerant(stricted, message);\n\t        }\n\t        strict = previousStrict;\n\t\n\t        return delegate.markEnd(delegate.createFunctionDeclaration(id, params, [], body), startToken);\n\t    }\n\t\n\t    function parseFunctionExpression() {\n\t        var token, id = null, stricted, firstRestricted, message, tmp, params = [], body, previousStrict, startToken;\n\t\n\t        startToken = lookahead;\n\t        expectKeyword('function');\n\t\n\t        if (!match('(')) {\n\t            token = lookahead;\n\t            id = parseVariableIdentifier();\n\t            if (strict) {\n\t                if (isRestrictedWord(token.value)) {\n\t                    throwErrorTolerant(token, Messages.StrictFunctionName);\n\t                }\n\t            } else {\n\t                if (isRestrictedWord(token.value)) {\n\t                    firstRestricted = token;\n\t                    message = Messages.StrictFunctionName;\n\t                } else if (isStrictModeReservedWord(token.value)) {\n\t                    firstRestricted = token;\n\t                    message = Messages.StrictReservedWord;\n\t                }\n\t            }\n\t        }\n\t\n\t        tmp = parseParams(firstRestricted);\n\t        params = tmp.params;\n\t        stricted = tmp.stricted;\n\t        firstRestricted = tmp.firstRestricted;\n\t        if (tmp.message) {\n\t            message = tmp.message;\n\t        }\n\t\n\t        previousStrict = strict;\n\t        body = parseFunctionSourceElements();\n\t        if (strict && firstRestricted) {\n\t            throwError(firstRestricted, message);\n\t        }\n\t        if (strict && stricted) {\n\t            throwErrorTolerant(stricted, message);\n\t        }\n\t        strict = previousStrict;\n\t\n\t        return delegate.markEnd(delegate.createFunctionExpression(id, params, [], body), startToken);\n\t    }\n\t\n\t    // 14 Program\n\t\n\t    function parseSourceElement() {\n\t        if (lookahead.type === Token.Keyword) {\n\t            switch (lookahead.value) {\n\t            case 'const':\n\t            case 'let':\n\t                return parseConstLetDeclaration(lookahead.value);\n\t            case 'function':\n\t                return parseFunctionDeclaration();\n\t            default:\n\t                return parseStatement();\n\t            }\n\t        }\n\t\n\t        if (lookahead.type !== Token.EOF) {\n\t            return parseStatement();\n\t        }\n\t    }\n\t\n\t    function parseSourceElements() {\n\t        var sourceElement, sourceElements = [], token, directive, firstRestricted;\n\t\n\t        while (index < length) {\n\t            token = lookahead;\n\t            if (token.type !== Token.StringLiteral) {\n\t                break;\n\t            }\n\t\n\t            sourceElement = parseSourceElement();\n\t            sourceElements.push(sourceElement);\n\t            if (sourceElement.expression.type !== Syntax.Literal) {\n\t                // this is not directive\n\t                break;\n\t            }\n\t            directive = source.slice(token.start + 1, token.end - 1);\n\t            if (directive === 'use strict') {\n\t                strict = true;\n\t                if (firstRestricted) {\n\t                    throwErrorTolerant(firstRestricted, Messages.StrictOctalLiteral);\n\t                }\n\t            } else {\n\t                if (!firstRestricted && token.octal) {\n\t                    firstRestricted = token;\n\t                }\n\t            }\n\t        }\n\t\n\t        while (index < length) {\n\t            sourceElement = parseSourceElement();\n\t            /* istanbul ignore if */\n\t            if (typeof sourceElement === 'undefined') {\n\t                break;\n\t            }\n\t            sourceElements.push(sourceElement);\n\t        }\n\t        return sourceElements;\n\t    }\n\t\n\t    function parseProgram() {\n\t        var body, startToken;\n\t\n\t        skipComment();\n\t        peek();\n\t        startToken = lookahead;\n\t        strict = false;\n\t\n\t        body = parseSourceElements();\n\t        return delegate.markEnd(delegate.createProgram(body), startToken);\n\t    }\n\t\n\t    function filterTokenLocation() {\n\t        var i, entry, token, tokens = [];\n\t\n\t        for (i = 0; i < extra.tokens.length; ++i) {\n\t            entry = extra.tokens[i];\n\t            token = {\n\t                type: entry.type,\n\t                value: entry.value\n\t            };\n\t            if (extra.range) {\n\t                token.range = entry.range;\n\t            }\n\t            if (extra.loc) {\n\t                token.loc = entry.loc;\n\t            }\n\t            tokens.push(token);\n\t        }\n\t\n\t        extra.tokens = tokens;\n\t    }\n\t\n\t    function tokenize(code, options) {\n\t        var toString,\n\t            token,\n\t            tokens;\n\t\n\t        toString = String;\n\t        if (typeof code !== 'string' && !(code instanceof String)) {\n\t            code = toString(code);\n\t        }\n\t\n\t        delegate = SyntaxTreeDelegate;\n\t        source = code;\n\t        index = 0;\n\t        lineNumber = (source.length > 0) ? 1 : 0;\n\t        lineStart = 0;\n\t        length = source.length;\n\t        lookahead = null;\n\t        state = {\n\t            allowIn: true,\n\t            labelSet: {},\n\t            inFunctionBody: false,\n\t            inIteration: false,\n\t            inSwitch: false,\n\t            lastCommentStart: -1\n\t        };\n\t\n\t        extra = {};\n\t\n\t        // Options matching.\n\t        options = options || {};\n\t\n\t        // Of course we collect tokens here.\n\t        options.tokens = true;\n\t        extra.tokens = [];\n\t        extra.tokenize = true;\n\t        // The following two fields are necessary to compute the Regex tokens.\n\t        extra.openParenToken = -1;\n\t        extra.openCurlyToken = -1;\n\t\n\t        extra.range = (typeof options.range === 'boolean') && options.range;\n\t        extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\t\n\t        if (typeof options.comment === 'boolean' && options.comment) {\n\t            extra.comments = [];\n\t        }\n\t        if (typeof options.tolerant === 'boolean' && options.tolerant) {\n\t            extra.errors = [];\n\t        }\n\t\n\t        try {\n\t            peek();\n\t            if (lookahead.type === Token.EOF) {\n\t                return extra.tokens;\n\t            }\n\t\n\t            token = lex();\n\t            while (lookahead.type !== Token.EOF) {\n\t                try {\n\t                    token = lex();\n\t                } catch (lexError) {\n\t                    token = lookahead;\n\t                    if (extra.errors) {\n\t                        extra.errors.push(lexError);\n\t                        // We have to break on the first error\n\t                        // to avoid infinite loops.\n\t                        break;\n\t                    } else {\n\t                        throw lexError;\n\t                    }\n\t                }\n\t            }\n\t\n\t            filterTokenLocation();\n\t            tokens = extra.tokens;\n\t            if (typeof extra.comments !== 'undefined') {\n\t                tokens.comments = extra.comments;\n\t            }\n\t            if (typeof extra.errors !== 'undefined') {\n\t                tokens.errors = extra.errors;\n\t            }\n\t        } catch (e) {\n\t            throw e;\n\t        } finally {\n\t            extra = {};\n\t        }\n\t        return tokens;\n\t    }\n\t\n\t    function parse(code, options) {\n\t        var program, toString;\n\t\n\t        toString = String;\n\t        if (typeof code !== 'string' && !(code instanceof String)) {\n\t            code = toString(code);\n\t        }\n\t\n\t        delegate = SyntaxTreeDelegate;\n\t        source = code;\n\t        index = 0;\n\t        lineNumber = (source.length > 0) ? 1 : 0;\n\t        lineStart = 0;\n\t        length = source.length;\n\t        lookahead = null;\n\t        state = {\n\t            allowIn: true,\n\t            labelSet: {},\n\t            inFunctionBody: false,\n\t            inIteration: false,\n\t            inSwitch: false,\n\t            lastCommentStart: -1\n\t        };\n\t\n\t        extra = {};\n\t        if (typeof options !== 'undefined') {\n\t            extra.range = (typeof options.range === 'boolean') && options.range;\n\t            extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\t            extra.attachComment = (typeof options.attachComment === 'boolean') && options.attachComment;\n\t\n\t            if (extra.loc && options.source !== null && options.source !== undefined) {\n\t                extra.source = toString(options.source);\n\t            }\n\t\n\t            if (typeof options.tokens === 'boolean' && options.tokens) {\n\t                extra.tokens = [];\n\t            }\n\t            if (typeof options.comment === 'boolean' && options.comment) {\n\t                extra.comments = [];\n\t            }\n\t            if (typeof options.tolerant === 'boolean' && options.tolerant) {\n\t                extra.errors = [];\n\t            }\n\t            if (extra.attachComment) {\n\t                extra.range = true;\n\t                extra.comments = [];\n\t                extra.bottomRightStack = [];\n\t                extra.trailingComments = [];\n\t                extra.leadingComments = [];\n\t            }\n\t        }\n\t\n\t        try {\n\t            program = parseProgram();\n\t            if (typeof extra.comments !== 'undefined') {\n\t                program.comments = extra.comments;\n\t            }\n\t            if (typeof extra.tokens !== 'undefined') {\n\t                filterTokenLocation();\n\t                program.tokens = extra.tokens;\n\t            }\n\t            if (typeof extra.errors !== 'undefined') {\n\t                program.errors = extra.errors;\n\t            }\n\t        } catch (e) {\n\t            throw e;\n\t        } finally {\n\t            extra = {};\n\t        }\n\t\n\t        return program;\n\t    }\n\t\n\t    // Sync with *.json manifests.\n\t    exports.version = '1.2.5';\n\t\n\t    exports.tokenize = tokenize;\n\t\n\t    exports.parse = parse;\n\t\n\t    // Deep copy.\n\t   /* istanbul ignore next */\n\t    exports.Syntax = (function () {\n\t        var name, types = {};\n\t\n\t        if (typeof Object.create === 'function') {\n\t            types = Object.create(null);\n\t        }\n\t\n\t        for (name in Syntax) {\n\t            if (Syntax.hasOwnProperty(name)) {\n\t                types[name] = Syntax[name];\n\t            }\n\t        }\n\t\n\t        if (typeof Object.freeze === 'function') {\n\t            Object.freeze(types);\n\t        }\n\t\n\t        return types;\n\t    }());\n\t\n\t}));\n\t/* vim: set sw=4 ts=4 et tw=80 : */\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function (global, factory) {\n\t   true ? factory(exports) :\n\t  typeof define === 'function' && define.amd ? define('d3-array', ['exports'], factory) :\n\t  factory((global.d3_array = {}));\n\t}(this, function (exports) { 'use strict';\n\t\n\t  function ascending(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  };\n\t\n\t  function bisector(compare) {\n\t    if (compare.length === 1) compare = ascendingComparator(compare);\n\t    return {\n\t      left: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) < 0) lo = mid + 1;\n\t          else hi = mid;\n\t        }\n\t        return lo;\n\t      },\n\t      right: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) > 0) hi = mid;\n\t          else lo = mid + 1;\n\t        }\n\t        return lo;\n\t      }\n\t    };\n\t  };\n\t\n\t  function ascendingComparator(f) {\n\t    return function(d, x) {\n\t      return ascending(f(d), x);\n\t    };\n\t  }\n\t\n\t  var ascendingBisect = bisector(ascending);\n\t  var bisectRight = ascendingBisect.right;\n\t  var bisectLeft = ascendingBisect.left;\n\t\n\t  function descending(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  };\n\t\n\t  function number$1(x) {\n\t    return x === null ? NaN : +x;\n\t  };\n\t\n\t  function variance(array, f) {\n\t    var n = array.length,\n\t        m = 0,\n\t        a,\n\t        d,\n\t        s = 0,\n\t        i = -1,\n\t        j = 0;\n\t\n\t    if (arguments.length === 1) {\n\t      while (++i < n) {\n\t        if (!isNaN(a = number$1(array[i]))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    }\n\t\n\t    else {\n\t      while (++i < n) {\n\t        if (!isNaN(a = number$1(f(array[i], i, array)))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    }\n\t\n\t    if (j > 1) return s / (j - 1);\n\t  };\n\t\n\t  function deviation() {\n\t    var v = variance.apply(this, arguments);\n\t    return v ? Math.sqrt(v) : v;\n\t  };\n\t\n\t  function extent(array, f) {\n\t    var i = -1,\n\t        n = array.length,\n\t        a,\n\t        b,\n\t        c;\n\t\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n\t      while (++i < n) if ((b = array[i]) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t\n\t    else {\n\t      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n\t      while (++i < n) if ((b = f(array[i], i, array)) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t\n\t    return [a, c];\n\t  };\n\t\n\t  function constant(x) {\n\t    return function() {\n\t      return x;\n\t    };\n\t  };\n\t\n\t  function identity(x) {\n\t    return x;\n\t  };\n\t\n\t  function range(start, stop, step) {\n\t    if ((n = arguments.length) < 3) {\n\t      step = 1;\n\t      if (n < 2) {\n\t        stop = start;\n\t        start = 0;\n\t      }\n\t    }\n\t\n\t    var i = -1,\n\t        n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n\t        range = new Array(n);\n\t\n\t    while (++i < n) {\n\t      range[i] = start + i * step;\n\t    }\n\t\n\t    return range;\n\t  };\n\t\n\t  var e10 = Math.sqrt(50);\n\t  var e5 = Math.sqrt(10);\n\t  var e2 = Math.sqrt(2);\n\t  function ticks(start, stop, count) {\n\t    var step = tickStep(start, stop, count);\n\t    return range(\n\t      Math.ceil(start / step) * step,\n\t      Math.floor(stop / step) * step + step / 2, // inclusive\n\t      step\n\t    );\n\t  };\n\t\n\t  function tickStep(start, stop, count) {\n\t    var step0 = Math.abs(stop - start) / Math.max(0, count),\n\t        step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n\t        error = step0 / step1;\n\t    if (error >= e10) step1 *= 10;\n\t    else if (error >= e5) step1 *= 5;\n\t    else if (error >= e2) step1 *= 2;\n\t    return stop < start ? -step1 : step1;\n\t  };\n\t\n\t  function sturges(values) {\n\t    return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n\t  };\n\t\n\t  function number(x) {\n\t    return +x;\n\t  }\n\t\n\t  function histogram() {\n\t    var value = identity,\n\t        domain = extent,\n\t        threshold = sturges;\n\t\n\t    function histogram(data) {\n\t      var i,\n\t          n = data.length,\n\t          x,\n\t          values = new Array(n);\n\t\n\t      // Coerce values to numbers.\n\t      for (i = 0; i < n; ++i) {\n\t        values[i] = +value(data[i], i, data);\n\t      }\n\t\n\t      var xz = domain(values),\n\t          x0 = +xz[0],\n\t          x1 = +xz[1],\n\t          tz = threshold(values, x0, x1);\n\t\n\t      // Convert number of thresholds into uniform thresholds.\n\t      if (!Array.isArray(tz)) tz = ticks(x0, x1, +tz);\n\t\n\t      // Coerce thresholds to numbers, ignoring any outside the domain.\n\t      var m = tz.length;\n\t      for (i = 0; i < m; ++i) tz[i] = +tz[i];\n\t      while (tz[0] <= x0) tz.shift(), --m;\n\t      while (tz[m - 1] >= x1) tz.pop(), --m;\n\t\n\t      var bins = new Array(m + 1),\n\t          bin;\n\t\n\t      // Initialize bins.\n\t      for (i = 0; i <= m; ++i) {\n\t        bin = bins[i] = [];\n\t        bin.x0 = i > 0 ? tz[i - 1] : x0;\n\t        bin.x1 = i < m ? tz[i] : x1;\n\t      }\n\t\n\t      // Assign data to bins by value, ignoring any outside the domain.\n\t      for (i = 0; i < n; ++i) {\n\t        x = values[i];\n\t        if (x0 <= x && x <= x1) {\n\t          bins[bisectRight(tz, x, 0, m)].push(data[i]);\n\t        }\n\t      }\n\t\n\t      return bins;\n\t    }\n\t\n\t    histogram.value = function(_) {\n\t      return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), histogram) : value;\n\t    };\n\t\n\t    histogram.domain = function(_) {\n\t      return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), histogram) : domain;\n\t    };\n\t\n\t    histogram.thresholds = function(_) {\n\t      if (!arguments.length) return threshold;\n\t      threshold = typeof _ === \"function\" ? _\n\t          : Array.isArray(_) ? constant(Array.prototype.map.call(_, number))\n\t          : constant(+_);\n\t      return histogram;\n\t    };\n\t\n\t    return histogram;\n\t  };\n\t\n\t  function quantile(array, p, f) {\n\t    if (arguments.length < 3) f = number$1;\n\t    if (!(n = array.length)) return;\n\t    if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n\t    if (p >= 1) return +f(array[n - 1], n - 1, array);\n\t    var n,\n\t        h = (n - 1) * p,\n\t        i = Math.floor(h),\n\t        a = +f(array[i], i, array),\n\t        b = +f(array[i + 1], i + 1, array);\n\t    return a + (b - a) * (h - i);\n\t  };\n\t\n\t  function freedmanDiaconis(values, min, max) {\n\t    values.sort(ascending);\n\t    return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n\t  };\n\t\n\t  function scott(values, min, max) {\n\t    return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n\t  };\n\t\n\t  function max(array, f) {\n\t    var i = -1,\n\t        n = array.length,\n\t        a,\n\t        b;\n\t\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n\t      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t    }\n\t\n\t    else {\n\t      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n\t      while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n\t    }\n\t\n\t    return a;\n\t  };\n\t\n\t  function mean(array, f) {\n\t    var s = 0,\n\t        n = array.length,\n\t        a,\n\t        i = -1,\n\t        j = n;\n\t\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (!isNaN(a = number$1(array[i]))) s += a; else --j;\n\t    }\n\t\n\t    else {\n\t      while (++i < n) if (!isNaN(a = number$1(f(array[i], i, array)))) s += a; else --j;\n\t    }\n\t\n\t    if (j) return s / j;\n\t  };\n\t\n\t  function median(array, f) {\n\t    var numbers = [],\n\t        n = array.length,\n\t        a,\n\t        i = -1;\n\t\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (!isNaN(a = number$1(array[i]))) numbers.push(a);\n\t    }\n\t\n\t    else {\n\t      while (++i < n) if (!isNaN(a = number$1(f(array[i], i, array)))) numbers.push(a);\n\t    }\n\t\n\t    return quantile(numbers.sort(ascending), 0.5);\n\t  };\n\t\n\t  function merge(arrays) {\n\t    var n = arrays.length,\n\t        m,\n\t        i = -1,\n\t        j = 0,\n\t        merged,\n\t        array;\n\t\n\t    while (++i < n) j += arrays[i].length;\n\t    merged = new Array(j);\n\t\n\t    while (--n >= 0) {\n\t      array = arrays[n];\n\t      m = array.length;\n\t      while (--m >= 0) {\n\t        merged[--j] = array[m];\n\t      }\n\t    }\n\t\n\t    return merged;\n\t  };\n\t\n\t  function min(array, f) {\n\t    var i = -1,\n\t        n = array.length,\n\t        a,\n\t        b;\n\t\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n\t      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t    }\n\t\n\t    else {\n\t      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n\t      while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n\t    }\n\t\n\t    return a;\n\t  };\n\t\n\t  function pairs(array) {\n\t    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t    while (i < n) pairs[i] = [p0 = p1, p1 = array[++i]];\n\t    return pairs;\n\t  };\n\t\n\t  function permute(array, indexes) {\n\t    var i = indexes.length, permutes = new Array(i);\n\t    while (i--) permutes[i] = array[indexes[i]];\n\t    return permutes;\n\t  };\n\t\n\t  function scan(array, compare) {\n\t    if (!(n = array.length)) return;\n\t    var i = 0,\n\t        n,\n\t        j = 0,\n\t        xi,\n\t        xj = array[j];\n\t\n\t    if (!compare) compare = ascending;\n\t\n\t    while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\t\n\t    if (compare(xj, xj) === 0) return j;\n\t  };\n\t\n\t  function shuffle(array, i0, i1) {\n\t    if ((m = arguments.length) < 3) {\n\t      i1 = array.length;\n\t      if (m < 2) i0 = 0;\n\t    }\n\t\n\t    var m = i1 - i0,\n\t        t,\n\t        i;\n\t\n\t    while (m) {\n\t      i = Math.random() * m-- | 0;\n\t      t = array[m + i0];\n\t      array[m + i0] = array[i + i0];\n\t      array[i + i0] = t;\n\t    }\n\t\n\t    return array;\n\t  };\n\t\n\t  function sum(array, f) {\n\t    var s = 0,\n\t        n = array.length,\n\t        a,\n\t        i = -1;\n\t\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n\t    }\n\t\n\t    else {\n\t      while (++i < n) if (a = +f(array[i], i, array)) s += a;\n\t    }\n\t\n\t    return s;\n\t  };\n\t\n\t  function transpose(matrix) {\n\t    if (!(n = matrix.length)) return [];\n\t    for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n\t      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n\t        row[j] = matrix[j][i];\n\t      }\n\t    }\n\t    return transpose;\n\t  };\n\t\n\t  function length(d) {\n\t    return d.length;\n\t  }\n\t\n\t  function zip() {\n\t    return transpose(arguments);\n\t  };\n\t\n\t  var version = \"0.7.0\";\n\t\n\t  exports.version = version;\n\t  exports.bisect = bisectRight;\n\t  exports.bisectRight = bisectRight;\n\t  exports.bisectLeft = bisectLeft;\n\t  exports.ascending = ascending;\n\t  exports.bisector = bisector;\n\t  exports.descending = descending;\n\t  exports.deviation = deviation;\n\t  exports.extent = extent;\n\t  exports.histogram = histogram;\n\t  exports.thresholdFreedmanDiaconis = freedmanDiaconis;\n\t  exports.thresholdScott = scott;\n\t  exports.thresholdSturges = sturges;\n\t  exports.max = max;\n\t  exports.mean = mean;\n\t  exports.median = median;\n\t  exports.merge = merge;\n\t  exports.min = min;\n\t  exports.pairs = pairs;\n\t  exports.permute = permute;\n\t  exports.quantile = quantile;\n\t  exports.range = range;\n\t  exports.scan = scan;\n\t  exports.shuffle = shuffle;\n\t  exports.sum = sum;\n\t  exports.ticks = ticks;\n\t  exports.tickStep = tickStep;\n\t  exports.transpose = transpose;\n\t  exports.variance = variance;\n\t  exports.zip = zip;\n\t\n\t}));\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function (global, factory) {\n\t   true ? factory(exports, __webpack_require__(15)) :\n\t  typeof define === 'function' && define.amd ? define('d3-interpolate', ['exports', 'd3-color'], factory) :\n\t  factory((global.d3_interpolate = {}),global.d3_color);\n\t}(this, function (exports,d3Color) { 'use strict';\n\t\n\t  function rgb(a, b) {\n\t    a = d3Color.rgb(a);\n\t    b = d3Color.rgb(b);\n\t    var ar = a.r,\n\t        ag = a.g,\n\t        ab = a.b,\n\t        br = b.r - ar,\n\t        bg = b.g - ag,\n\t        bb = b.b - ab;\n\t    return function(t) {\n\t      a.r = ar + br * t;\n\t      a.g = ag + bg * t;\n\t      a.b = ab + bb * t;\n\t      return a + \"\";\n\t    };\n\t  };\n\t\n\t  // TODO sparse arrays?\n\t  function array(a, b) {\n\t    var x = [],\n\t        c = [],\n\t        na = a ? a.length : 0,\n\t        nb = b ? b.length : 0,\n\t        n0 = Math.min(na, nb),\n\t        i;\n\t\n\t    for (i = 0; i < n0; ++i) x.push(value(a[i], b[i]));\n\t    for (; i < na; ++i) c[i] = a[i];\n\t    for (; i < nb; ++i) c[i] = b[i];\n\t\n\t    return function(t) {\n\t      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n\t      return c;\n\t    };\n\t  };\n\t\n\t  function number(a, b) {\n\t    return a = +a, b -= a, function(t) {\n\t      return a + b * t;\n\t    };\n\t  };\n\t\n\t  function object(a, b) {\n\t    var i = {},\n\t        c = {},\n\t        k;\n\t\n\t    if (a === null || typeof a !== \"object\") a = {};\n\t    if (b === null || typeof b !== \"object\") b = {};\n\t\n\t    for (k in a) {\n\t      if (k in b) {\n\t        i[k] = value(a[k], b[k]);\n\t      } else {\n\t        c[k] = a[k];\n\t      }\n\t    }\n\t\n\t    for (k in b) {\n\t      if (!(k in a)) {\n\t        c[k] = b[k];\n\t      }\n\t    }\n\t\n\t    return function(t) {\n\t      for (k in i) c[k] = i[k](t);\n\t      return c;\n\t    };\n\t  };\n\t\n\t  var reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n\t  var reB = new RegExp(reA.source, \"g\");\n\t  function zero(b) {\n\t    return function() {\n\t      return b;\n\t    };\n\t  }\n\t\n\t  function one(b) {\n\t    return function(t) {\n\t      return b(t) + \"\";\n\t    };\n\t  }\n\t\n\t  function string(a, b) {\n\t    var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n\t        am, // current match in a\n\t        bm, // current match in b\n\t        bs, // string preceding current number in b, if any\n\t        i = -1, // index in s\n\t        s = [], // string constants and placeholders\n\t        q = []; // number interpolators\n\t\n\t    // Coerce inputs to strings.\n\t    a = a + \"\", b = b + \"\";\n\t\n\t    // Interpolate pairs of numbers in a & b.\n\t    while ((am = reA.exec(a))\n\t        && (bm = reB.exec(b))) {\n\t      if ((bs = bm.index) > bi) { // a string precedes the next number in b\n\t        bs = b.slice(bi, bs);\n\t        if (s[i]) s[i] += bs; // coalesce with previous string\n\t        else s[++i] = bs;\n\t      }\n\t      if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n\t        if (s[i]) s[i] += bm; // coalesce with previous string\n\t        else s[++i] = bm;\n\t      } else { // interpolate non-matching numbers\n\t        s[++i] = null;\n\t        q.push({i: i, x: number(am, bm)});\n\t      }\n\t      bi = reB.lastIndex;\n\t    }\n\t\n\t    // Add remains of b.\n\t    if (bi < b.length) {\n\t      bs = b.slice(bi);\n\t      if (s[i]) s[i] += bs; // coalesce with previous string\n\t      else s[++i] = bs;\n\t    }\n\t\n\t    // Special optimization for only a single match.\n\t    // Otherwise, interpolate each of the numbers and rejoin the string.\n\t    return s.length < 2 ? (q[0]\n\t        ? one(q[0].x)\n\t        : zero(b))\n\t        : (b = q.length, function(t) {\n\t            for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t            return s.join(\"\");\n\t          });\n\t  };\n\t\n\t  var values = [\n\t    function(a, b) {\n\t      var t = typeof b, c;\n\t      return (t === \"string\" ? ((c = d3Color.color(b)) ? (b = c, rgb) : string)\n\t          : b instanceof d3Color.color ? rgb\n\t          : Array.isArray(b) ? array\n\t          : t === \"object\" && isNaN(b) ? object\n\t          : number)(a, b);\n\t    }\n\t  ];\n\t\n\t  function value(a, b) {\n\t    var i = values.length, f;\n\t    while (--i >= 0 && !(f = values[i](a, b)));\n\t    return f;\n\t  };\n\t\n\t  function round(a, b) {\n\t    return a = +a, b -= a, function(t) {\n\t      return Math.round(a + b * t);\n\t    };\n\t  };\n\t\n\t  var rad2deg = 180 / Math.PI;\n\t  var identity = {a: 1, b: 0, c: 0, d: 1, e: 0, f: 0};\n\t  var g;\n\t  // Compute x-scale and normalize the first row.\n\t  // Compute shear and make second row orthogonal to first.\n\t  // Compute y-scale and normalize the second row.\n\t  // Finally, compute the rotation.\n\t  function Transform(string) {\n\t    if (!g) g = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\t    if (string) g.setAttribute(\"transform\", string), t = g.transform.baseVal.consolidate();\n\t\n\t    var t,\n\t        m = t ? t.matrix : identity,\n\t        r0 = [m.a, m.b],\n\t        r1 = [m.c, m.d],\n\t        kx = normalize(r0),\n\t        kz = dot(r0, r1),\n\t        ky = normalize(combine(r1, r0, -kz)) || 0;\n\t\n\t    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n\t      r0[0] *= -1;\n\t      r0[1] *= -1;\n\t      kx *= -1;\n\t      kz *= -1;\n\t    }\n\t\n\t    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * rad2deg;\n\t    this.translate = [m.e, m.f];\n\t    this.scale = [kx, ky];\n\t    this.skew = ky ? Math.atan2(kz, ky) * rad2deg : 0;\n\t  }\n\t\n\t  function dot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1];\n\t  }\n\t\n\t  function normalize(a) {\n\t    var k = Math.sqrt(dot(a, a));\n\t    if (k) a[0] /= k, a[1] /= k;\n\t    return k;\n\t  }\n\t\n\t  function combine(a, b, k) {\n\t    a[0] += k * b[0];\n\t    a[1] += k * b[1];\n\t    return a;\n\t  }\n\t\n\t  function pop(s) {\n\t    return s.length ? s.pop() + \",\" : \"\";\n\t  }\n\t\n\t  function translate(ta, tb, s, q) {\n\t    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n\t      var i = s.push(\"translate(\", null, \",\", null, \")\");\n\t      q.push({i: i - 4, x: number(ta[0], tb[0])}, {i: i - 2, x: number(ta[1], tb[1])});\n\t    } else if (tb[0] || tb[1]) {\n\t      s.push(\"translate(\" + tb + \")\");\n\t    }\n\t  }\n\t\n\t  function rotate(ra, rb, s, q) {\n\t    if (ra !== rb) {\n\t      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360; // shortest path\n\t      q.push({i: s.push(pop(s) + \"rotate(\", null, \")\") - 2, x: number(ra, rb)});\n\t    } else if (rb) {\n\t      s.push(pop(s) + \"rotate(\" + rb + \")\");\n\t    }\n\t  }\n\t\n\t  function skew(wa, wb, s, q) {\n\t    if (wa !== wb) {\n\t      q.push({i: s.push(pop(s) + \"skewX(\", null, \")\") - 2, x: number(wa, wb)});\n\t    } else if (wb) {\n\t      s.push(pop(s) + \"skewX(\" + wb + \")\");\n\t    }\n\t  }\n\t\n\t  function scale(ka, kb, s, q) {\n\t    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n\t      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({i: i - 4, x: number(ka[0], kb[0])}, {i: i - 2, x: number(ka[1], kb[1])});\n\t    } else if (kb[0] !== 1 || kb[1] !== 1) {\n\t      s.push(pop(s) + \"scale(\" + kb + \")\");\n\t    }\n\t  }\n\t\n\t  function transform(a, b) {\n\t    var s = [], // string constants and placeholders\n\t        q = []; // number interpolators\n\t    a = new Transform(a), b = new Transform(b);\n\t    translate(a.translate, b.translate, s, q);\n\t    rotate(a.rotate, b.rotate, s, q);\n\t    skew(a.skew, b.skew, s, q);\n\t    scale(a.scale, b.scale, s, q);\n\t    a = b = null; // gc\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  };\n\t\n\t  var rho = Math.SQRT2;\n\t  var rho2 = 2;\n\t  var rho4 = 4;\n\t  var epsilon2 = 1e-12;\n\t  function cosh(x) {\n\t    return ((x = Math.exp(x)) + 1 / x) / 2;\n\t  }\n\t\n\t  function sinh(x) {\n\t    return ((x = Math.exp(x)) - 1 / x) / 2;\n\t  }\n\t\n\t  function tanh(x) {\n\t    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t  }\n\t\n\t  // p0 = [ux0, uy0, w0]\n\t  // p1 = [ux1, uy1, w1]\n\t  function zoom(p0, p1) {\n\t    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n\t        ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n\t        dx = ux1 - ux0,\n\t        dy = uy1 - uy0,\n\t        d2 = dx * dx + dy * dy,\n\t        i,\n\t        S;\n\t\n\t    // Special case for u0 ≅ u1.\n\t    if (d2 < epsilon2) {\n\t      S = Math.log(w1 / w0) / rho;\n\t      i = function(t) {\n\t        return [\n\t          ux0 + t * dx,\n\t          uy0 + t * dy,\n\t          w0 * Math.exp(rho * t * S)\n\t        ];\n\t      }\n\t    }\n\t\n\t    // General case.\n\t    else {\n\t      var d1 = Math.sqrt(d2),\n\t          b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n\t          b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n\t          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n\t          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t      S = (r1 - r0) / rho;\n\t      i = function(t) {\n\t        var s = t * S,\n\t            coshr0 = cosh(r0),\n\t            u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n\t        return [\n\t          ux0 + u * dx,\n\t          uy0 + u * dy,\n\t          w0 * coshr0 / cosh(rho * s + r0)\n\t        ];\n\t      }\n\t    }\n\t\n\t    i.duration = S * 1000;\n\t\n\t    return i;\n\t  };\n\t\n\t  function deltaHue(h1, h0) {\n\t    var delta = h1 - h0;\n\t    return delta > 180 || delta < -180\n\t        ? delta - 360 * Math.round(delta / 360)\n\t        : delta;\n\t  };\n\t\n\t  function hsl(a, b) {\n\t    a = d3Color.hsl(a);\n\t    b = d3Color.hsl(b);\n\t    var ah = isNaN(a.h) ? b.h : a.h,\n\t        as = isNaN(a.s) ? b.s : a.s,\n\t        al = a.l,\n\t        bh = isNaN(b.h) ? 0 : deltaHue(b.h, ah),\n\t        bs = isNaN(b.s) ? 0 : b.s - as,\n\t        bl = b.l - al;\n\t    return function(t) {\n\t      a.h = ah + bh * t;\n\t      a.s = as + bs * t;\n\t      a.l = al + bl * t;\n\t      return a + \"\";\n\t    };\n\t  };\n\t\n\t  function hslLong(a, b) {\n\t    a = d3Color.hsl(a);\n\t    b = d3Color.hsl(b);\n\t    var ah = isNaN(a.h) ? b.h : a.h,\n\t        as = isNaN(a.s) ? b.s : a.s,\n\t        al = a.l,\n\t        bh = isNaN(b.h) ? 0 : b.h - ah,\n\t        bs = isNaN(b.s) ? 0 : b.s - as,\n\t        bl = b.l - al;\n\t    return function(t) {\n\t      a.h = ah + bh * t;\n\t      a.s = as + bs * t;\n\t      a.l = al + bl * t;\n\t      return a + \"\";\n\t    };\n\t  };\n\t\n\t  function lab(a, b) {\n\t    a = d3Color.lab(a);\n\t    b = d3Color.lab(b);\n\t    var al = a.l,\n\t        aa = a.a,\n\t        ab = a.b,\n\t        bl = b.l - al,\n\t        ba = b.a - aa,\n\t        bb = b.b - ab;\n\t    return function(t) {\n\t      a.l = al + bl * t;\n\t      a.a = aa + ba * t;\n\t      a.b = ab + bb * t;\n\t      return a + \"\";\n\t    };\n\t  };\n\t\n\t  function hcl(a, b) {\n\t    a = d3Color.hcl(a);\n\t    b = d3Color.hcl(b);\n\t    var ah = isNaN(a.h) ? b.h : a.h,\n\t        ac = isNaN(a.c) ? b.c : a.c,\n\t        al = a.l,\n\t        bh = isNaN(b.h) ? 0 : deltaHue(b.h, ah),\n\t        bc = isNaN(b.c) ? 0 : b.c - ac,\n\t        bl = b.l - al;\n\t    return function(t) {\n\t      a.h = ah + bh * t;\n\t      a.c = ac + bc * t;\n\t      a.l = al + bl * t;\n\t      return a + \"\";\n\t    };\n\t  };\n\t\n\t  function hclLong(a, b) {\n\t    a = d3Color.hcl(a);\n\t    b = d3Color.hcl(b);\n\t    var ah = isNaN(a.h) ? b.h : a.h,\n\t        ac = isNaN(a.c) ? b.c : a.c,\n\t        al = a.l,\n\t        bh = isNaN(b.h) ? 0 : b.h - ah,\n\t        bc = isNaN(b.c) ? 0 : b.c - ac,\n\t        bl = b.l - al;\n\t    return function(t) {\n\t      a.h = ah + bh * t;\n\t      a.c = ac + bc * t;\n\t      a.l = al + bl * t;\n\t      return a + \"\";\n\t    };\n\t  };\n\t\n\t  function cubehelix(a, b, gamma) {\n\t    if (arguments.length < 3) gamma = 1;\n\t    a = d3Color.cubehelix(a);\n\t    b = d3Color.cubehelix(b);\n\t    var ah = isNaN(a.h) ? b.h : a.h,\n\t        as = isNaN(a.s) ? b.s : a.s,\n\t        al = a.l,\n\t        bh = isNaN(b.h) ? 0 : deltaHue(b.h, ah),\n\t        bs = isNaN(b.s) ? 0 : b.s - as,\n\t        bl = b.l - al;\n\t    return function(t) {\n\t      a.h = ah + bh * t;\n\t      a.s = as + bs * t;\n\t      a.l = al + bl * Math.pow(t, gamma);\n\t      return a + \"\";\n\t    };\n\t  };\n\t\n\t  function cubehelixLong(a, b, gamma) {\n\t    if (arguments.length < 3) gamma = 1;\n\t    a = d3Color.cubehelix(a);\n\t    b = d3Color.cubehelix(b);\n\t    var ah = isNaN(a.h) ? b.h : a.h,\n\t        as = isNaN(a.s) ? b.s : a.s,\n\t        al = a.l,\n\t        bh = isNaN(b.h) ? 0 : b.h - ah,\n\t        bs = isNaN(b.s) ? 0 : b.s - as,\n\t        bl = b.l - al;\n\t    return function(t) {\n\t      a.h = ah + bh * t;\n\t      a.s = as + bs * t;\n\t      a.l = al + bl * Math.pow(t, gamma);\n\t      return a + \"\";\n\t    };\n\t  };\n\t\n\t  var slice = Array.prototype.slice;\n\t\n\t  function bindN(type, args) {\n\t    args = slice.call(args);\n\t    args[0] = null;\n\t    args.unshift(null);\n\t    return function(a, b) {\n\t      args[0] = a;\n\t      args[1] = b;\n\t      return type.apply(null, args);\n\t    };\n\t  }\n\t\n\t  function bind(type) {\n\t    return arguments.length === 1 ? type : bindN(type, arguments);\n\t  };\n\t\n\t  var version = \"0.4.0\";\n\t\n\t  exports.version = version;\n\t  exports.interpolate = value;\n\t  exports.interpolators = values;\n\t  exports.interpolateArray = array;\n\t  exports.interpolateNumber = number;\n\t  exports.interpolateObject = object;\n\t  exports.interpolateRound = round;\n\t  exports.interpolateString = string;\n\t  exports.interpolateTransform = transform;\n\t  exports.interpolateZoom = zoom;\n\t  exports.interpolateRgb = rgb;\n\t  exports.interpolateHsl = hsl;\n\t  exports.interpolateHslLong = hslLong;\n\t  exports.interpolateLab = lab;\n\t  exports.interpolateHcl = hcl;\n\t  exports.interpolateHclLong = hclLong;\n\t  exports.interpolateCubehelix = cubehelix;\n\t  exports.interpolateCubehelixLong = cubehelixLong;\n\t  exports.interpolateBind = bind;\n\t\n\t}));\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function (global, factory) {\n\t   true ? factory(exports) :\n\t  typeof define === 'function' && define.amd ? define('d3-color', ['exports'], factory) :\n\t  factory((global.d3_color = {}));\n\t}(this, function (exports) { 'use strict';\n\t\n\t  function Color() {};\n\t\n\t  var darker = 0.7;\n\t  var brighter = 1 / darker;\n\t\n\t  var reHex3 = /^#([0-9a-f]{3})$/;\n\t  var reHex6 = /^#([0-9a-f]{6})$/;\n\t  var reRgbInteger = /^rgb\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*\\)$/;\n\t  var reRgbPercent = /^rgb\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n\t  var reHslPercent = /^hsl\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n\t  var named = {\n\t    aliceblue: 0xf0f8ff,\n\t    antiquewhite: 0xfaebd7,\n\t    aqua: 0x00ffff,\n\t    aquamarine: 0x7fffd4,\n\t    azure: 0xf0ffff,\n\t    beige: 0xf5f5dc,\n\t    bisque: 0xffe4c4,\n\t    black: 0x000000,\n\t    blanchedalmond: 0xffebcd,\n\t    blue: 0x0000ff,\n\t    blueviolet: 0x8a2be2,\n\t    brown: 0xa52a2a,\n\t    burlywood: 0xdeb887,\n\t    cadetblue: 0x5f9ea0,\n\t    chartreuse: 0x7fff00,\n\t    chocolate: 0xd2691e,\n\t    coral: 0xff7f50,\n\t    cornflowerblue: 0x6495ed,\n\t    cornsilk: 0xfff8dc,\n\t    crimson: 0xdc143c,\n\t    cyan: 0x00ffff,\n\t    darkblue: 0x00008b,\n\t    darkcyan: 0x008b8b,\n\t    darkgoldenrod: 0xb8860b,\n\t    darkgray: 0xa9a9a9,\n\t    darkgreen: 0x006400,\n\t    darkgrey: 0xa9a9a9,\n\t    darkkhaki: 0xbdb76b,\n\t    darkmagenta: 0x8b008b,\n\t    darkolivegreen: 0x556b2f,\n\t    darkorange: 0xff8c00,\n\t    darkorchid: 0x9932cc,\n\t    darkred: 0x8b0000,\n\t    darksalmon: 0xe9967a,\n\t    darkseagreen: 0x8fbc8f,\n\t    darkslateblue: 0x483d8b,\n\t    darkslategray: 0x2f4f4f,\n\t    darkslategrey: 0x2f4f4f,\n\t    darkturquoise: 0x00ced1,\n\t    darkviolet: 0x9400d3,\n\t    deeppink: 0xff1493,\n\t    deepskyblue: 0x00bfff,\n\t    dimgray: 0x696969,\n\t    dimgrey: 0x696969,\n\t    dodgerblue: 0x1e90ff,\n\t    firebrick: 0xb22222,\n\t    floralwhite: 0xfffaf0,\n\t    forestgreen: 0x228b22,\n\t    fuchsia: 0xff00ff,\n\t    gainsboro: 0xdcdcdc,\n\t    ghostwhite: 0xf8f8ff,\n\t    gold: 0xffd700,\n\t    goldenrod: 0xdaa520,\n\t    gray: 0x808080,\n\t    green: 0x008000,\n\t    greenyellow: 0xadff2f,\n\t    grey: 0x808080,\n\t    honeydew: 0xf0fff0,\n\t    hotpink: 0xff69b4,\n\t    indianred: 0xcd5c5c,\n\t    indigo: 0x4b0082,\n\t    ivory: 0xfffff0,\n\t    khaki: 0xf0e68c,\n\t    lavender: 0xe6e6fa,\n\t    lavenderblush: 0xfff0f5,\n\t    lawngreen: 0x7cfc00,\n\t    lemonchiffon: 0xfffacd,\n\t    lightblue: 0xadd8e6,\n\t    lightcoral: 0xf08080,\n\t    lightcyan: 0xe0ffff,\n\t    lightgoldenrodyellow: 0xfafad2,\n\t    lightgray: 0xd3d3d3,\n\t    lightgreen: 0x90ee90,\n\t    lightgrey: 0xd3d3d3,\n\t    lightpink: 0xffb6c1,\n\t    lightsalmon: 0xffa07a,\n\t    lightseagreen: 0x20b2aa,\n\t    lightskyblue: 0x87cefa,\n\t    lightslategray: 0x778899,\n\t    lightslategrey: 0x778899,\n\t    lightsteelblue: 0xb0c4de,\n\t    lightyellow: 0xffffe0,\n\t    lime: 0x00ff00,\n\t    limegreen: 0x32cd32,\n\t    linen: 0xfaf0e6,\n\t    magenta: 0xff00ff,\n\t    maroon: 0x800000,\n\t    mediumaquamarine: 0x66cdaa,\n\t    mediumblue: 0x0000cd,\n\t    mediumorchid: 0xba55d3,\n\t    mediumpurple: 0x9370db,\n\t    mediumseagreen: 0x3cb371,\n\t    mediumslateblue: 0x7b68ee,\n\t    mediumspringgreen: 0x00fa9a,\n\t    mediumturquoise: 0x48d1cc,\n\t    mediumvioletred: 0xc71585,\n\t    midnightblue: 0x191970,\n\t    mintcream: 0xf5fffa,\n\t    mistyrose: 0xffe4e1,\n\t    moccasin: 0xffe4b5,\n\t    navajowhite: 0xffdead,\n\t    navy: 0x000080,\n\t    oldlace: 0xfdf5e6,\n\t    olive: 0x808000,\n\t    olivedrab: 0x6b8e23,\n\t    orange: 0xffa500,\n\t    orangered: 0xff4500,\n\t    orchid: 0xda70d6,\n\t    palegoldenrod: 0xeee8aa,\n\t    palegreen: 0x98fb98,\n\t    paleturquoise: 0xafeeee,\n\t    palevioletred: 0xdb7093,\n\t    papayawhip: 0xffefd5,\n\t    peachpuff: 0xffdab9,\n\t    peru: 0xcd853f,\n\t    pink: 0xffc0cb,\n\t    plum: 0xdda0dd,\n\t    powderblue: 0xb0e0e6,\n\t    purple: 0x800080,\n\t    rebeccapurple: 0x663399,\n\t    red: 0xff0000,\n\t    rosybrown: 0xbc8f8f,\n\t    royalblue: 0x4169e1,\n\t    saddlebrown: 0x8b4513,\n\t    salmon: 0xfa8072,\n\t    sandybrown: 0xf4a460,\n\t    seagreen: 0x2e8b57,\n\t    seashell: 0xfff5ee,\n\t    sienna: 0xa0522d,\n\t    silver: 0xc0c0c0,\n\t    skyblue: 0x87ceeb,\n\t    slateblue: 0x6a5acd,\n\t    slategray: 0x708090,\n\t    slategrey: 0x708090,\n\t    snow: 0xfffafa,\n\t    springgreen: 0x00ff7f,\n\t    steelblue: 0x4682b4,\n\t    tan: 0xd2b48c,\n\t    teal: 0x008080,\n\t    thistle: 0xd8bfd8,\n\t    tomato: 0xff6347,\n\t    turquoise: 0x40e0d0,\n\t    violet: 0xee82ee,\n\t    wheat: 0xf5deb3,\n\t    white: 0xffffff,\n\t    whitesmoke: 0xf5f5f5,\n\t    yellow: 0xffff00,\n\t    yellowgreen: 0x9acd32\n\t  };\n\t\n\t  color.prototype = Color.prototype = {\n\t    displayable: function() {\n\t      return this.rgb().displayable();\n\t    },\n\t    toString: function() {\n\t      return this.rgb() + \"\";\n\t    }\n\t  };\n\t\n\t  function color(format) {\n\t    var m;\n\t    format = (format + \"\").trim().toLowerCase();\n\t    return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf))) // #f00\n\t        : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n\t        : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3]) // rgb(255,0,0)\n\t        : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100) // rgb(100%,0%,0%)\n\t        : (m = reHslPercent.exec(format)) ? new Hsl(m[1], m[2] / 100, m[3] / 100) // hsl(120,50%,50%)\n\t        : named.hasOwnProperty(format) ? rgbn(named[format])\n\t        : null;\n\t  };\n\t\n\t  function rgbn(n) {\n\t    return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff);\n\t  }\n\t\n\t  function rgb(r, g, b) {\n\t    if (arguments.length === 1) {\n\t      if (!(r instanceof Color)) r = color(r);\n\t      if (r) {\n\t        r = r.rgb();\n\t        b = r.b;\n\t        g = r.g;\n\t        r = r.r;\n\t      } else {\n\t        r = g = b = NaN;\n\t      }\n\t    }\n\t    return new Rgb(r, g, b);\n\t  };\n\t\n\t  function Rgb(r, g, b) {\n\t    this.r = +r;\n\t    this.g = +g;\n\t    this.b = +b;\n\t  };\n\t\n\t  var _rgb = rgb.prototype = Rgb.prototype = new Color;\n\t\n\t  _rgb.brighter = function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k);\n\t  };\n\t\n\t  _rgb.darker = function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k);\n\t  };\n\t\n\t  _rgb.rgb = function() {\n\t    return this;\n\t  };\n\t\n\t  _rgb.displayable = function() {\n\t    return (0 <= this.r && this.r <= 255)\n\t        && (0 <= this.g && this.g <= 255)\n\t        && (0 <= this.b && this.b <= 255);\n\t  };\n\t\n\t  _rgb.toString = function() {\n\t    var r = Math.round(this.r),\n\t        g = Math.round(this.g),\n\t        b = Math.round(this.b);\n\t    return \"#\"\n\t        + (isNaN(r) || r <= 0 ? \"00\" : r < 16 ? \"0\" + r.toString(16) : r >= 255 ? \"ff\" : r.toString(16))\n\t        + (isNaN(g) || g <= 0 ? \"00\" : g < 16 ? \"0\" + g.toString(16) : g >= 255 ? \"ff\" : g.toString(16))\n\t        + (isNaN(b) || b <= 0 ? \"00\" : b < 16 ? \"0\" + b.toString(16) : b >= 255 ? \"ff\" : b.toString(16));\n\t  };\n\t\n\t  function hsl(h, s, l) {\n\t    if (arguments.length === 1) {\n\t      if (h instanceof Hsl) {\n\t        l = h.l;\n\t        s = h.s;\n\t        h = h.h;\n\t      } else {\n\t        if (!(h instanceof Color)) h = color(h);\n\t        if (h) {\n\t          if (h instanceof Hsl) return h;\n\t          h = h.rgb();\n\t          var r = h.r / 255,\n\t              g = h.g / 255,\n\t              b = h.b / 255,\n\t              min = Math.min(r, g, b),\n\t              max = Math.max(r, g, b),\n\t              range = max - min;\n\t          l = (max + min) / 2;\n\t          if (range) {\n\t            s = l < 0.5 ? range / (max + min) : range / (2 - max - min);\n\t            if (r === max) h = (g - b) / range + (g < b) * 6;\n\t            else if (g === max) h = (b - r) / range + 2;\n\t            else h = (r - g) / range + 4;\n\t            h *= 60;\n\t          } else {\n\t            h = NaN;\n\t            s = l > 0 && l < 1 ? 0 : h;\n\t          }\n\t        } else {\n\t          h = s = l = NaN;\n\t        }\n\t      }\n\t    }\n\t    return new Hsl(h, s, l);\n\t  };\n\t\n\t  function Hsl(h, s, l) {\n\t    this.h = +h;\n\t    this.s = +s;\n\t    this.l = +l;\n\t  };\n\t\n\t  var _hsl = hsl.prototype = Hsl.prototype = new Color;\n\t\n\t  _hsl.brighter = function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Hsl(this.h, this.s, this.l * k);\n\t  };\n\t\n\t  _hsl.darker = function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Hsl(this.h, this.s, this.l * k);\n\t  };\n\t\n\t  _hsl.rgb = function() {\n\t    var h = this.h % 360 + (this.h < 0) * 360,\n\t        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n\t        l = this.l,\n\t        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n\t        m1 = 2 * l - m2;\n\t    return new Rgb(\n\t      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n\t      hsl2rgb(h, m1, m2),\n\t      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2)\n\t    );\n\t  };\n\t\n\t  _hsl.displayable = function() {\n\t    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n\t        && (0 <= this.l && this.l <= 1);\n\t  };\n\t\n\t  /* From FvD 13.37, CSS Color Module Level 3 */\n\t  function hsl2rgb(h, m1, m2) {\n\t    return (h < 60 ? m1 + (m2 - m1) * h / 60\n\t        : h < 180 ? m2\n\t        : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n\t        : m1) * 255;\n\t  }\n\t\n\t  var deg2rad = Math.PI / 180;\n\t  var rad2deg = 180 / Math.PI;\n\t\n\t  var Kn = 18;\n\t  var Xn = 0.950470;\n\t  var Yn = 1;\n\t  var Zn = 1.088830;\n\t  var t0 = 4 / 29;\n\t  var t1 = 6 / 29;\n\t  var t2 = 3 * t1 * t1;\n\t  var t3 = t1 * t1 * t1;\n\t  function lab(l, a, b) {\n\t    if (arguments.length === 1) {\n\t      if (l instanceof Lab) {\n\t        b = l.b;\n\t        a = l.a;\n\t        l = l.l;\n\t      } else if (l instanceof Hcl) {\n\t        var h = l.h * deg2rad;\n\t        b = Math.sin(h) * l.c;\n\t        a = Math.cos(h) * l.c;\n\t        l = l.l;\n\t      } else {\n\t        if (!(l instanceof Rgb)) l = rgb(l);\n\t        var r = rgb2xyz(l.r),\n\t            g = rgb2xyz(l.g),\n\t            b = rgb2xyz(l.b),\n\t            x = xyz2lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / Xn),\n\t            y = xyz2lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / Yn),\n\t            z = xyz2lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / Zn);\n\t        b = 200 * (y - z);\n\t        a = 500 * (x - y);\n\t        l = 116 * y - 16;\n\t      }\n\t    }\n\t    return new Lab(l, a, b);\n\t  };\n\t\n\t  function Lab(l, a, b) {\n\t    this.l = +l;\n\t    this.a = +a;\n\t    this.b = +b;\n\t  };\n\t\n\t  var _lab = lab.prototype = Lab.prototype = new Color;\n\t\n\t  _lab.brighter = function(k) {\n\t    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b);\n\t  };\n\t\n\t  _lab.darker = function(k) {\n\t    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b);\n\t  };\n\t\n\t  _lab.rgb = function() {\n\t    var y = (this.l + 16) / 116,\n\t        x = isNaN(this.a) ? y : y + this.a / 500,\n\t        z = isNaN(this.b) ? y : y - this.b / 200;\n\t    y = Yn * lab2xyz(y);\n\t    x = Xn * lab2xyz(x);\n\t    z = Zn * lab2xyz(z);\n\t    return new Rgb(\n\t      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n\t      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n\t      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z)\n\t    );\n\t  };\n\t\n\t  function xyz2lab(t) {\n\t    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n\t  }\n\t\n\t  function lab2xyz(t) {\n\t    return t > t1 ? t * t * t : t2 * (t - t0);\n\t  }\n\t\n\t  function xyz2rgb(x) {\n\t    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n\t  }\n\t\n\t  function rgb2xyz(x) {\n\t    return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n\t  }\n\t\n\t  function hcl(h, c, l) {\n\t    if (arguments.length === 1) {\n\t      if (h instanceof Hcl) {\n\t        l = h.l;\n\t        c = h.c;\n\t        h = h.h;\n\t      } else {\n\t        if (!(h instanceof Lab)) h = lab(h);\n\t        l = h.l;\n\t        c = Math.sqrt(h.a * h.a + h.b * h.b);\n\t        h = Math.atan2(h.b, h.a) * rad2deg;\n\t        if (h < 0) h += 360;\n\t      }\n\t    }\n\t    return new Hcl(h, c, l);\n\t  };\n\t\n\t  function Hcl(h, c, l) {\n\t    this.h = +h;\n\t    this.c = +c;\n\t    this.l = +l;\n\t  };\n\t\n\t  var _hcl = hcl.prototype = Hcl.prototype = new Color;\n\t\n\t  _hcl.brighter = function(k) {\n\t    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k));\n\t  };\n\t\n\t  _hcl.darker = function(k) {\n\t    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k));\n\t  };\n\t\n\t  _hcl.rgb = function() {\n\t    return lab(this).rgb();\n\t  };\n\t\n\t  var A = -0.14861;\n\t  var B = +1.78277;\n\t  var C = -0.29227;\n\t  var D = -0.90649;\n\t  var E = +1.97294;\n\t  var ED = E * D;\n\t  var EB = E * B;\n\t  var BC_DA = B * C - D * A;\n\t  function cubehelix(h, s, l) {\n\t    if (arguments.length === 1) {\n\t      if (h instanceof Cubehelix) {\n\t        l = h.l;\n\t        s = h.s;\n\t        h = h.h;\n\t      } else {\n\t        if (!(h instanceof Rgb)) h = rgb(h);\n\t        var r = h.r / 255, g = h.g / 255, b = h.b / 255;\n\t        l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB);\n\t        var bl = b - l, k = (E * (g - l) - C * bl) / D;\n\t        s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)); // NaN if l=0 or l=1\n\t        h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n\t        if (h < 0) h += 360;\n\t      }\n\t    }\n\t    return new Cubehelix(h, s, l);\n\t  };\n\t\n\t  function Cubehelix(h, s, l) {\n\t    this.h = +h;\n\t    this.s = +s;\n\t    this.l = +l;\n\t  };\n\t\n\t  var _cubehelix = cubehelix.prototype = Cubehelix.prototype = new Color;\n\t\n\t  _cubehelix.brighter = function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k);\n\t  };\n\t\n\t  _cubehelix.darker = function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k);\n\t  };\n\t\n\t  _cubehelix.rgb = function() {\n\t    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n\t        l = +this.l,\n\t        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n\t        cosh = Math.cos(h),\n\t        sinh = Math.sin(h);\n\t    return new Rgb(\n\t      255 * (l + a * (A * cosh + B * sinh)),\n\t      255 * (l + a * (C * cosh + D * sinh)),\n\t      255 * (l + a * (E * cosh))\n\t    );\n\t  };\n\t\n\t  var version = \"0.3.3\";\n\t\n\t  exports.version = version;\n\t  exports.color = color;\n\t  exports.rgb = rgb;\n\t  exports.hsl = hsl;\n\t  exports.lab = lab;\n\t  exports.hcl = hcl;\n\t  exports.cubehelix = cubehelix;\n\t\n\t}));\n\n/***/ }\n/******/ ])\n});\n;\n//# sourceMappingURL=ndarray-heatmap.js.map"],"sourceRoot":"/source/"}